# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_pyctp')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_pyctp')
    _pyctp = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_pyctp', [dirname(__file__)])
        except ImportError:
            import _pyctp
            return _pyctp
        try:
            _mod = imp.load_module('_pyctp', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _pyctp = swig_import_helper()
    del swig_import_helper
else:
    import _pyctp
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

try:
    import weakref
    weakref_proxy = weakref.proxy
except __builtin__.Exception:
    weakref_proxy = lambda x: x


Sgit_TERT_RESTART = _pyctp.Sgit_TERT_RESTART
Sgit_TERT_RESUME = _pyctp.Sgit_TERT_RESUME
Sgit_TERT_QUICK = _pyctp.Sgit_TERT_QUICK
Sgit_FTDC_EXP_Normal = _pyctp.Sgit_FTDC_EXP_Normal
Sgit_FTDC_EXP_GenOrderByTrade = _pyctp.Sgit_FTDC_EXP_GenOrderByTrade
Sgit_FTDC_ICT_EID = _pyctp.Sgit_FTDC_ICT_EID
Sgit_FTDC_ICT_IDCard = _pyctp.Sgit_FTDC_ICT_IDCard
Sgit_FTDC_ICT_OfficerIDCard = _pyctp.Sgit_FTDC_ICT_OfficerIDCard
Sgit_FTDC_ICT_PoliceIDCard = _pyctp.Sgit_FTDC_ICT_PoliceIDCard
Sgit_FTDC_ICT_SoldierIDCard = _pyctp.Sgit_FTDC_ICT_SoldierIDCard
Sgit_FTDC_ICT_HouseholdRegister = _pyctp.Sgit_FTDC_ICT_HouseholdRegister
Sgit_FTDC_ICT_Passport = _pyctp.Sgit_FTDC_ICT_Passport
Sgit_FTDC_ICT_TaiwanCompatriotIDCard = _pyctp.Sgit_FTDC_ICT_TaiwanCompatriotIDCard
Sgit_FTDC_ICT_HomeComingCard = _pyctp.Sgit_FTDC_ICT_HomeComingCard
Sgit_FTDC_ICT_LicenseNo = _pyctp.Sgit_FTDC_ICT_LicenseNo
Sgit_FTDC_ICT_TaxNo = _pyctp.Sgit_FTDC_ICT_TaxNo
Sgit_FTDC_ICT_OtherCard = _pyctp.Sgit_FTDC_ICT_OtherCard
Sgit_FTDC_IR_All = _pyctp.Sgit_FTDC_IR_All
Sgit_FTDC_IR_Group = _pyctp.Sgit_FTDC_IR_Group
Sgit_FTDC_IR_Single = _pyctp.Sgit_FTDC_IR_Single
Sgit_FTDC_DR_All = _pyctp.Sgit_FTDC_DR_All
Sgit_FTDC_DR_Group = _pyctp.Sgit_FTDC_DR_Group
Sgit_FTDC_DR_Single = _pyctp.Sgit_FTDC_DR_Single
Sgit_FTDC_DS_Asynchronous = _pyctp.Sgit_FTDC_DS_Asynchronous
Sgit_FTDC_DS_Synchronizing = _pyctp.Sgit_FTDC_DS_Synchronizing
Sgit_FTDC_DS_Synchronized = _pyctp.Sgit_FTDC_DS_Synchronized
Sgit_FTDC_BDS_Synchronized = _pyctp.Sgit_FTDC_BDS_Synchronized
Sgit_FTDC_BDS_Synchronizing = _pyctp.Sgit_FTDC_BDS_Synchronizing
Sgit_FTDC_ECS_NoConnection = _pyctp.Sgit_FTDC_ECS_NoConnection
Sgit_FTDC_ECS_QryInstrumentSent = _pyctp.Sgit_FTDC_ECS_QryInstrumentSent
Sgit_FTDC_ECS_GotInformation = _pyctp.Sgit_FTDC_ECS_GotInformation
Sgit_FTDC_TCS_NotConnected = _pyctp.Sgit_FTDC_TCS_NotConnected
Sgit_FTDC_TCS_Connected = _pyctp.Sgit_FTDC_TCS_Connected
Sgit_FTDC_TCS_QryInstrumentSent = _pyctp.Sgit_FTDC_TCS_QryInstrumentSent
Sgit_FTDC_TCS_SubPrivateFlow = _pyctp.Sgit_FTDC_TCS_SubPrivateFlow
Sgit_FTDC_FC_DataAsync = _pyctp.Sgit_FTDC_FC_DataAsync
Sgit_FTDC_FC_ForceUserLogout = _pyctp.Sgit_FTDC_FC_ForceUserLogout
Sgit_FTDC_FC_UserPasswordUpdate = _pyctp.Sgit_FTDC_FC_UserPasswordUpdate
Sgit_FTDC_FC_BrokerPasswordUpdate = _pyctp.Sgit_FTDC_FC_BrokerPasswordUpdate
Sgit_FTDC_FC_InvestorPasswordUpdate = _pyctp.Sgit_FTDC_FC_InvestorPasswordUpdate
Sgit_FTDC_FC_OrderInsert = _pyctp.Sgit_FTDC_FC_OrderInsert
Sgit_FTDC_FC_OrderAction = _pyctp.Sgit_FTDC_FC_OrderAction
Sgit_FTDC_FC_SyncSystemData = _pyctp.Sgit_FTDC_FC_SyncSystemData
Sgit_FTDC_FC_SyncBrokerData = _pyctp.Sgit_FTDC_FC_SyncBrokerData
Sgit_FTDC_FC_BachSyncBrokerData = _pyctp.Sgit_FTDC_FC_BachSyncBrokerData
Sgit_FTDC_FC_SuperQuery = _pyctp.Sgit_FTDC_FC_SuperQuery
Sgit_FTDC_FC_ParkedOrderInsert = _pyctp.Sgit_FTDC_FC_ParkedOrderInsert
Sgit_FTDC_FC_ParkedOrderAction = _pyctp.Sgit_FTDC_FC_ParkedOrderAction
Sgit_FTDC_FC_SyncOTP = _pyctp.Sgit_FTDC_FC_SyncOTP
Sgit_FTDC_BFC_ForceUserLogout = _pyctp.Sgit_FTDC_BFC_ForceUserLogout
Sgit_FTDC_BFC_UserPasswordUpdate = _pyctp.Sgit_FTDC_BFC_UserPasswordUpdate
Sgit_FTDC_BFC_SyncBrokerData = _pyctp.Sgit_FTDC_BFC_SyncBrokerData
Sgit_FTDC_BFC_BachSyncBrokerData = _pyctp.Sgit_FTDC_BFC_BachSyncBrokerData
Sgit_FTDC_BFC_OrderInsert = _pyctp.Sgit_FTDC_BFC_OrderInsert
Sgit_FTDC_BFC_OrderAction = _pyctp.Sgit_FTDC_BFC_OrderAction
Sgit_FTDC_BFC_AllQuery = _pyctp.Sgit_FTDC_BFC_AllQuery
Sgit_FTDC_BFC_log = _pyctp.Sgit_FTDC_BFC_log
Sgit_FTDC_BFC_BaseQry = _pyctp.Sgit_FTDC_BFC_BaseQry
Sgit_FTDC_BFC_TradeQry = _pyctp.Sgit_FTDC_BFC_TradeQry
Sgit_FTDC_BFC_Trade = _pyctp.Sgit_FTDC_BFC_Trade
Sgit_FTDC_BFC_Virement = _pyctp.Sgit_FTDC_BFC_Virement
Sgit_FTDC_BFC_Risk = _pyctp.Sgit_FTDC_BFC_Risk
Sgit_FTDC_BFC_Session = _pyctp.Sgit_FTDC_BFC_Session
Sgit_FTDC_BFC_RiskNoticeCtl = _pyctp.Sgit_FTDC_BFC_RiskNoticeCtl
Sgit_FTDC_BFC_RiskNotice = _pyctp.Sgit_FTDC_BFC_RiskNotice
Sgit_FTDC_BFC_BrokerDeposit = _pyctp.Sgit_FTDC_BFC_BrokerDeposit
Sgit_FTDC_BFC_QueryFund = _pyctp.Sgit_FTDC_BFC_QueryFund
Sgit_FTDC_BFC_QueryOrder = _pyctp.Sgit_FTDC_BFC_QueryOrder
Sgit_FTDC_BFC_QueryTrade = _pyctp.Sgit_FTDC_BFC_QueryTrade
Sgit_FTDC_BFC_QueryPosition = _pyctp.Sgit_FTDC_BFC_QueryPosition
Sgit_FTDC_BFC_QueryMarketData = _pyctp.Sgit_FTDC_BFC_QueryMarketData
Sgit_FTDC_BFC_QueryUserEvent = _pyctp.Sgit_FTDC_BFC_QueryUserEvent
Sgit_FTDC_BFC_QueryRiskNotify = _pyctp.Sgit_FTDC_BFC_QueryRiskNotify
Sgit_FTDC_BFC_QueryFundChange = _pyctp.Sgit_FTDC_BFC_QueryFundChange
Sgit_FTDC_BFC_QueryInvestor = _pyctp.Sgit_FTDC_BFC_QueryInvestor
Sgit_FTDC_BFC_QueryTradingCode = _pyctp.Sgit_FTDC_BFC_QueryTradingCode
Sgit_FTDC_BFC_ForceClose = _pyctp.Sgit_FTDC_BFC_ForceClose
Sgit_FTDC_BFC_PressTest = _pyctp.Sgit_FTDC_BFC_PressTest
Sgit_FTDC_BFC_RemainCalc = _pyctp.Sgit_FTDC_BFC_RemainCalc
Sgit_FTDC_BFC_NetPositionInd = _pyctp.Sgit_FTDC_BFC_NetPositionInd
Sgit_FTDC_BFC_RiskPredict = _pyctp.Sgit_FTDC_BFC_RiskPredict
Sgit_FTDC_BFC_DataExport = _pyctp.Sgit_FTDC_BFC_DataExport
Sgit_FTDC_BFC_RiskTargetSetup = _pyctp.Sgit_FTDC_BFC_RiskTargetSetup
Sgit_FTDC_BFC_MarketDataWarn = _pyctp.Sgit_FTDC_BFC_MarketDataWarn
Sgit_FTDC_BFC_QryBizNotice = _pyctp.Sgit_FTDC_BFC_QryBizNotice
Sgit_FTDC_BFC_CfgBizNotice = _pyctp.Sgit_FTDC_BFC_CfgBizNotice
Sgit_FTDC_BFC_SyncOTP = _pyctp.Sgit_FTDC_BFC_SyncOTP
Sgit_FTDC_BFC_SendBizNotice = _pyctp.Sgit_FTDC_BFC_SendBizNotice
Sgit_FTDC_BFC_CfgRiskLevelStd = _pyctp.Sgit_FTDC_BFC_CfgRiskLevelStd
Sgit_FTDC_OAS_Submitted = _pyctp.Sgit_FTDC_OAS_Submitted
Sgit_FTDC_OAS_Accepted = _pyctp.Sgit_FTDC_OAS_Accepted
Sgit_FTDC_OAS_Rejected = _pyctp.Sgit_FTDC_OAS_Rejected
Sgit_FTDC_OST_AllTraded = _pyctp.Sgit_FTDC_OST_AllTraded
Sgit_FTDC_OST_PartTradedQueueing = _pyctp.Sgit_FTDC_OST_PartTradedQueueing
Sgit_FTDC_OST_PartTradedNotQueueing = _pyctp.Sgit_FTDC_OST_PartTradedNotQueueing
Sgit_FTDC_OST_NoTradeQueueing = _pyctp.Sgit_FTDC_OST_NoTradeQueueing
Sgit_FTDC_OST_NoTradeNotQueueing = _pyctp.Sgit_FTDC_OST_NoTradeNotQueueing
Sgit_FTDC_OST_Canceled = _pyctp.Sgit_FTDC_OST_Canceled
Sgit_FTDC_OST_Unknown = _pyctp.Sgit_FTDC_OST_Unknown
Sgit_FTDC_OST_NotTouched = _pyctp.Sgit_FTDC_OST_NotTouched
Sgit_FTDC_OST_Touched = _pyctp.Sgit_FTDC_OST_Touched
Sgit_FTDC_OSS_InsertSubmitted = _pyctp.Sgit_FTDC_OSS_InsertSubmitted
Sgit_FTDC_OSS_CancelSubmitted = _pyctp.Sgit_FTDC_OSS_CancelSubmitted
Sgit_FTDC_OSS_ModifySubmitted = _pyctp.Sgit_FTDC_OSS_ModifySubmitted
Sgit_FTDC_OSS_Accepted = _pyctp.Sgit_FTDC_OSS_Accepted
Sgit_FTDC_OSS_InsertRejected = _pyctp.Sgit_FTDC_OSS_InsertRejected
Sgit_FTDC_OSS_CancelRejected = _pyctp.Sgit_FTDC_OSS_CancelRejected
Sgit_FTDC_OSS_ModifyRejected = _pyctp.Sgit_FTDC_OSS_ModifyRejected
Sgit_FTDC_PSD_Today = _pyctp.Sgit_FTDC_PSD_Today
Sgit_FTDC_PSD_History = _pyctp.Sgit_FTDC_PSD_History
Sgit_FTDC_PDT_UseHistory = _pyctp.Sgit_FTDC_PDT_UseHistory
Sgit_FTDC_PDT_NoUseHistory = _pyctp.Sgit_FTDC_PDT_NoUseHistory
Sgit_FTDC_ER_Broker = _pyctp.Sgit_FTDC_ER_Broker
Sgit_FTDC_ER_Host = _pyctp.Sgit_FTDC_ER_Host
Sgit_FTDC_ER_Maker = _pyctp.Sgit_FTDC_ER_Maker
Sgit_FTDC_PC_Futures = _pyctp.Sgit_FTDC_PC_Futures
Sgit_FTDC_PC_Options = _pyctp.Sgit_FTDC_PC_Options
Sgit_FTDC_PC_Combination = _pyctp.Sgit_FTDC_PC_Combination
Sgit_FTDC_PC_Spot = _pyctp.Sgit_FTDC_PC_Spot
Sgit_FTDC_PC_EFP = _pyctp.Sgit_FTDC_PC_EFP
Sgit_FTDC_IP_NotStart = _pyctp.Sgit_FTDC_IP_NotStart
Sgit_FTDC_IP_Started = _pyctp.Sgit_FTDC_IP_Started
Sgit_FTDC_IP_Pause = _pyctp.Sgit_FTDC_IP_Pause
Sgit_FTDC_IP_Expired = _pyctp.Sgit_FTDC_IP_Expired
Sgit_FTDC_D_Buy = _pyctp.Sgit_FTDC_D_Buy
Sgit_FTDC_D_Sell = _pyctp.Sgit_FTDC_D_Sell
Sgit_FTDC_PT_Net = _pyctp.Sgit_FTDC_PT_Net
Sgit_FTDC_PT_Gross = _pyctp.Sgit_FTDC_PT_Gross
Sgit_FTDC_PD_Net = _pyctp.Sgit_FTDC_PD_Net
Sgit_FTDC_PD_Long = _pyctp.Sgit_FTDC_PD_Long
Sgit_FTDC_PD_Short = _pyctp.Sgit_FTDC_PD_Short
Sgit_FTDC_SS_NonActive = _pyctp.Sgit_FTDC_SS_NonActive
Sgit_FTDC_SS_Startup = _pyctp.Sgit_FTDC_SS_Startup
Sgit_FTDC_SS_Operating = _pyctp.Sgit_FTDC_SS_Operating
Sgit_FTDC_SS_Settlement = _pyctp.Sgit_FTDC_SS_Settlement
Sgit_FTDC_SS_SettlementFinished = _pyctp.Sgit_FTDC_SS_SettlementFinished
Sgit_FTDC_RA_Trade = _pyctp.Sgit_FTDC_RA_Trade
Sgit_FTDC_RA_Settlement = _pyctp.Sgit_FTDC_RA_Settlement
Sgit_FTDC_HF_Speculation = _pyctp.Sgit_FTDC_HF_Speculation
Sgit_FTDC_HF_Arbitrage = _pyctp.Sgit_FTDC_HF_Arbitrage
Sgit_FTDC_HF_Hedge = _pyctp.Sgit_FTDC_HF_Hedge
Sgit_FTDC_BHF_Speculation = _pyctp.Sgit_FTDC_BHF_Speculation
Sgit_FTDC_BHF_Arbitrage = _pyctp.Sgit_FTDC_BHF_Arbitrage
Sgit_FTDC_BHF_Hedge = _pyctp.Sgit_FTDC_BHF_Hedge
Sgit_FTDC_CIDT_Speculation = _pyctp.Sgit_FTDC_CIDT_Speculation
Sgit_FTDC_CIDT_Arbitrage = _pyctp.Sgit_FTDC_CIDT_Arbitrage
Sgit_FTDC_CIDT_Hedge = _pyctp.Sgit_FTDC_CIDT_Hedge
Sgit_FTDC_OPT_AnyPrice = _pyctp.Sgit_FTDC_OPT_AnyPrice
Sgit_FTDC_OPT_LimitPrice = _pyctp.Sgit_FTDC_OPT_LimitPrice
Sgit_FTDC_OPT_BestPrice = _pyctp.Sgit_FTDC_OPT_BestPrice
Sgit_FTDC_OPT_LastPrice = _pyctp.Sgit_FTDC_OPT_LastPrice
Sgit_FTDC_OPT_LastPricePlusOneTicks = _pyctp.Sgit_FTDC_OPT_LastPricePlusOneTicks
Sgit_FTDC_OPT_LastPricePlusTwoTicks = _pyctp.Sgit_FTDC_OPT_LastPricePlusTwoTicks
Sgit_FTDC_OPT_LastPricePlusThreeTicks = _pyctp.Sgit_FTDC_OPT_LastPricePlusThreeTicks
Sgit_FTDC_OPT_AskPrice1 = _pyctp.Sgit_FTDC_OPT_AskPrice1
Sgit_FTDC_OPT_AskPrice1PlusOneTicks = _pyctp.Sgit_FTDC_OPT_AskPrice1PlusOneTicks
Sgit_FTDC_OPT_AskPrice1PlusTwoTicks = _pyctp.Sgit_FTDC_OPT_AskPrice1PlusTwoTicks
Sgit_FTDC_OPT_AskPrice1PlusThreeTicks = _pyctp.Sgit_FTDC_OPT_AskPrice1PlusThreeTicks
Sgit_FTDC_OPT_BidPrice1 = _pyctp.Sgit_FTDC_OPT_BidPrice1
Sgit_FTDC_OPT_BidPrice1PlusOneTicks = _pyctp.Sgit_FTDC_OPT_BidPrice1PlusOneTicks
Sgit_FTDC_OPT_BidPrice1PlusTwoTicks = _pyctp.Sgit_FTDC_OPT_BidPrice1PlusTwoTicks
Sgit_FTDC_OPT_BidPrice1PlusThreeTicks = _pyctp.Sgit_FTDC_OPT_BidPrice1PlusThreeTicks
Sgit_FTDC_OF_Open = _pyctp.Sgit_FTDC_OF_Open
Sgit_FTDC_OF_Close = _pyctp.Sgit_FTDC_OF_Close
Sgit_FTDC_OF_ForceClose = _pyctp.Sgit_FTDC_OF_ForceClose
Sgit_FTDC_OF_CloseToday = _pyctp.Sgit_FTDC_OF_CloseToday
Sgit_FTDC_OF_CloseYesterday = _pyctp.Sgit_FTDC_OF_CloseYesterday
Sgit_FTDC_OF_ForceOff = _pyctp.Sgit_FTDC_OF_ForceOff
Sgit_FTDC_OF_LocalForceClose = _pyctp.Sgit_FTDC_OF_LocalForceClose
Sgit_FTDC_FCC_NotForceClose = _pyctp.Sgit_FTDC_FCC_NotForceClose
Sgit_FTDC_FCC_LackDeposit = _pyctp.Sgit_FTDC_FCC_LackDeposit
Sgit_FTDC_FCC_ClientOverPositionLimit = _pyctp.Sgit_FTDC_FCC_ClientOverPositionLimit
Sgit_FTDC_FCC_MemberOverPositionLimit = _pyctp.Sgit_FTDC_FCC_MemberOverPositionLimit
Sgit_FTDC_FCC_NotMultiple = _pyctp.Sgit_FTDC_FCC_NotMultiple
Sgit_FTDC_FCC_Violation = _pyctp.Sgit_FTDC_FCC_Violation
Sgit_FTDC_FCC_Other = _pyctp.Sgit_FTDC_FCC_Other
Sgit_FTDC_FCC_PersonDeliv = _pyctp.Sgit_FTDC_FCC_PersonDeliv
Sgit_FTDC_ORDT_Normal = _pyctp.Sgit_FTDC_ORDT_Normal
Sgit_FTDC_ORDT_DeriveFromQuote = _pyctp.Sgit_FTDC_ORDT_DeriveFromQuote
Sgit_FTDC_ORDT_DeriveFromCombination = _pyctp.Sgit_FTDC_ORDT_DeriveFromCombination
Sgit_FTDC_ORDT_Combination = _pyctp.Sgit_FTDC_ORDT_Combination
Sgit_FTDC_ORDT_ConditionalOrder = _pyctp.Sgit_FTDC_ORDT_ConditionalOrder
Sgit_FTDC_ORDT_Swap = _pyctp.Sgit_FTDC_ORDT_Swap
Sgit_FTDC_TC_IOC = _pyctp.Sgit_FTDC_TC_IOC
Sgit_FTDC_TC_GFS = _pyctp.Sgit_FTDC_TC_GFS
Sgit_FTDC_TC_GFD = _pyctp.Sgit_FTDC_TC_GFD
Sgit_FTDC_TC_GTD = _pyctp.Sgit_FTDC_TC_GTD
Sgit_FTDC_TC_GTC = _pyctp.Sgit_FTDC_TC_GTC
Sgit_FTDC_TC_GFA = _pyctp.Sgit_FTDC_TC_GFA
Sgit_FTDC_VC_AV = _pyctp.Sgit_FTDC_VC_AV
Sgit_FTDC_VC_MV = _pyctp.Sgit_FTDC_VC_MV
Sgit_FTDC_VC_CV = _pyctp.Sgit_FTDC_VC_CV
Sgit_FTDC_CC_Immediately = _pyctp.Sgit_FTDC_CC_Immediately
Sgit_FTDC_CC_Touch = _pyctp.Sgit_FTDC_CC_Touch
Sgit_FTDC_CC_TouchProfit = _pyctp.Sgit_FTDC_CC_TouchProfit
Sgit_FTDC_CC_ParkedOrder = _pyctp.Sgit_FTDC_CC_ParkedOrder
Sgit_FTDC_CC_LastPriceGreaterThanStopPrice = _pyctp.Sgit_FTDC_CC_LastPriceGreaterThanStopPrice
Sgit_FTDC_CC_LastPriceGreaterEqualStopPrice = _pyctp.Sgit_FTDC_CC_LastPriceGreaterEqualStopPrice
Sgit_FTDC_CC_LastPriceLesserThanStopPrice = _pyctp.Sgit_FTDC_CC_LastPriceLesserThanStopPrice
Sgit_FTDC_CC_LastPriceLesserEqualStopPrice = _pyctp.Sgit_FTDC_CC_LastPriceLesserEqualStopPrice
Sgit_FTDC_CC_AskPriceGreaterThanStopPrice = _pyctp.Sgit_FTDC_CC_AskPriceGreaterThanStopPrice
Sgit_FTDC_CC_AskPriceGreaterEqualStopPrice = _pyctp.Sgit_FTDC_CC_AskPriceGreaterEqualStopPrice
Sgit_FTDC_CC_AskPriceLesserThanStopPrice = _pyctp.Sgit_FTDC_CC_AskPriceLesserThanStopPrice
Sgit_FTDC_CC_AskPriceLesserEqualStopPrice = _pyctp.Sgit_FTDC_CC_AskPriceLesserEqualStopPrice
Sgit_FTDC_CC_BidPriceGreaterThanStopPrice = _pyctp.Sgit_FTDC_CC_BidPriceGreaterThanStopPrice
Sgit_FTDC_CC_BidPriceGreaterEqualStopPrice = _pyctp.Sgit_FTDC_CC_BidPriceGreaterEqualStopPrice
Sgit_FTDC_CC_BidPriceLesserThanStopPrice = _pyctp.Sgit_FTDC_CC_BidPriceLesserThanStopPrice
Sgit_FTDC_CC_BidPriceLesserEqualStopPrice = _pyctp.Sgit_FTDC_CC_BidPriceLesserEqualStopPrice
Sgit_FTDC_AF_Delete = _pyctp.Sgit_FTDC_AF_Delete
Sgit_FTDC_AF_Modify = _pyctp.Sgit_FTDC_AF_Modify
Sgit_FTDC_TR_Allow = _pyctp.Sgit_FTDC_TR_Allow
Sgit_FTDC_TR_CloseOnly = _pyctp.Sgit_FTDC_TR_CloseOnly
Sgit_FTDC_TR_Forbidden = _pyctp.Sgit_FTDC_TR_Forbidden
Sgit_FTDC_OSRC_Participant = _pyctp.Sgit_FTDC_OSRC_Participant
Sgit_FTDC_OSRC_Administrator = _pyctp.Sgit_FTDC_OSRC_Administrator
Sgit_FTDC_TRDT_Common = _pyctp.Sgit_FTDC_TRDT_Common
Sgit_FTDC_TRDT_OptionsExecution = _pyctp.Sgit_FTDC_TRDT_OptionsExecution
Sgit_FTDC_TRDT_OTC = _pyctp.Sgit_FTDC_TRDT_OTC
Sgit_FTDC_TRDT_EFPDerived = _pyctp.Sgit_FTDC_TRDT_EFPDerived
Sgit_FTDC_TRDT_CombinationDerived = _pyctp.Sgit_FTDC_TRDT_CombinationDerived
Sgit_FTDC_PSRC_LastPrice = _pyctp.Sgit_FTDC_PSRC_LastPrice
Sgit_FTDC_PSRC_Buy = _pyctp.Sgit_FTDC_PSRC_Buy
Sgit_FTDC_PSRC_Sell = _pyctp.Sgit_FTDC_PSRC_Sell
Sgit_FTDC_IS_BeforeTrading = _pyctp.Sgit_FTDC_IS_BeforeTrading
Sgit_FTDC_IS_NoTrading = _pyctp.Sgit_FTDC_IS_NoTrading
Sgit_FTDC_IS_Continous = _pyctp.Sgit_FTDC_IS_Continous
Sgit_FTDC_IS_AuctionOrdering = _pyctp.Sgit_FTDC_IS_AuctionOrdering
Sgit_FTDC_IS_AuctionBalance = _pyctp.Sgit_FTDC_IS_AuctionBalance
Sgit_FTDC_IS_AuctionMatch = _pyctp.Sgit_FTDC_IS_AuctionMatch
Sgit_FTDC_IS_Closed = _pyctp.Sgit_FTDC_IS_Closed
Sgit_FTDC_IER_Automatic = _pyctp.Sgit_FTDC_IER_Automatic
Sgit_FTDC_IER_Manual = _pyctp.Sgit_FTDC_IER_Manual
Sgit_FTDC_IER_Fuse = _pyctp.Sgit_FTDC_IER_Fuse
Sgit_FTDC_BS_NoUpload = _pyctp.Sgit_FTDC_BS_NoUpload
Sgit_FTDC_BS_Uploaded = _pyctp.Sgit_FTDC_BS_Uploaded
Sgit_FTDC_BS_Failed = _pyctp.Sgit_FTDC_BS_Failed
Sgit_FTDC_RS_All = _pyctp.Sgit_FTDC_RS_All
Sgit_FTDC_RS_ByProduct = _pyctp.Sgit_FTDC_RS_ByProduct
Sgit_FTDC_RP_ByVolume = _pyctp.Sgit_FTDC_RP_ByVolume
Sgit_FTDC_RP_ByFeeOnHand = _pyctp.Sgit_FTDC_RP_ByFeeOnHand
Sgit_FTDC_RL_Level1 = _pyctp.Sgit_FTDC_RL_Level1
Sgit_FTDC_RL_Level2 = _pyctp.Sgit_FTDC_RL_Level2
Sgit_FTDC_RL_Level3 = _pyctp.Sgit_FTDC_RL_Level3
Sgit_FTDC_RL_Level4 = _pyctp.Sgit_FTDC_RL_Level4
Sgit_FTDC_RL_Level5 = _pyctp.Sgit_FTDC_RL_Level5
Sgit_FTDC_RL_Level6 = _pyctp.Sgit_FTDC_RL_Level6
Sgit_FTDC_RL_Level7 = _pyctp.Sgit_FTDC_RL_Level7
Sgit_FTDC_RL_Level8 = _pyctp.Sgit_FTDC_RL_Level8
Sgit_FTDC_RL_Level9 = _pyctp.Sgit_FTDC_RL_Level9
Sgit_FTDC_RSD_ByPeriod = _pyctp.Sgit_FTDC_RSD_ByPeriod
Sgit_FTDC_RSD_ByStandard = _pyctp.Sgit_FTDC_RSD_ByStandard
Sgit_FTDC_MT_Out = _pyctp.Sgit_FTDC_MT_Out
Sgit_FTDC_MT_In = _pyctp.Sgit_FTDC_MT_In
Sgit_FTDC_ISPI_BaseMargin = _pyctp.Sgit_FTDC_ISPI_BaseMargin
Sgit_FTDC_ISPI_LowestInterest = _pyctp.Sgit_FTDC_ISPI_LowestInterest
Sgit_FTDC_ISPI_MortgageRatio = _pyctp.Sgit_FTDC_ISPI_MortgageRatio
Sgit_FTDC_ISPI_MarginWay = _pyctp.Sgit_FTDC_ISPI_MarginWay
Sgit_FTDC_ISPI_BillDeposit = _pyctp.Sgit_FTDC_ISPI_BillDeposit
Sgit_FTDC_ESPI_MortgageRatio = _pyctp.Sgit_FTDC_ESPI_MortgageRatio
Sgit_FTDC_ESPI_OtherFundItem = _pyctp.Sgit_FTDC_ESPI_OtherFundItem
Sgit_FTDC_ESPI_OtherFundImport = _pyctp.Sgit_FTDC_ESPI_OtherFundImport
Sgit_FTDC_ESPI_SHFEDelivFee = _pyctp.Sgit_FTDC_ESPI_SHFEDelivFee
Sgit_FTDC_ESPI_DCEDelivFee = _pyctp.Sgit_FTDC_ESPI_DCEDelivFee
Sgit_FTDC_ESPI_CFFEXMinPrepa = _pyctp.Sgit_FTDC_ESPI_CFFEXMinPrepa
Sgit_FTDC_SPI_InvestorIDMinLength = _pyctp.Sgit_FTDC_SPI_InvestorIDMinLength
Sgit_FTDC_SPI_AccountIDMinLength = _pyctp.Sgit_FTDC_SPI_AccountIDMinLength
Sgit_FTDC_SPI_UserRightLogon = _pyctp.Sgit_FTDC_SPI_UserRightLogon
Sgit_FTDC_SPI_SettlementBillTrade = _pyctp.Sgit_FTDC_SPI_SettlementBillTrade
Sgit_FTDC_SPI_TradingCode = _pyctp.Sgit_FTDC_SPI_TradingCode
Sgit_FTDC_SPI_CheckFund = _pyctp.Sgit_FTDC_SPI_CheckFund
Sgit_FTDC_SPI_CommModelRight = _pyctp.Sgit_FTDC_SPI_CommModelRight
Sgit_FTDC_SPI_IsStandardActive = _pyctp.Sgit_FTDC_SPI_IsStandardActive
Sgit_FTDC_SPI_UploadSettlementFile = _pyctp.Sgit_FTDC_SPI_UploadSettlementFile
Sgit_FTDC_SPI_DownloadCSRCFile = _pyctp.Sgit_FTDC_SPI_DownloadCSRCFile
Sgit_FTDC_SPI_SettlementBillFile = _pyctp.Sgit_FTDC_SPI_SettlementBillFile
Sgit_FTDC_SPI_CSRCOthersFile = _pyctp.Sgit_FTDC_SPI_CSRCOthersFile
Sgit_FTDC_SPI_InvestorPhoto = _pyctp.Sgit_FTDC_SPI_InvestorPhoto
Sgit_FTDC_SPI_CSRCData = _pyctp.Sgit_FTDC_SPI_CSRCData
Sgit_FTDC_SPI_InvestorPwdModel = _pyctp.Sgit_FTDC_SPI_InvestorPwdModel
Sgit_FTDC_SPI_CFFEXInvestorSettleFile = _pyctp.Sgit_FTDC_SPI_CFFEXInvestorSettleFile
Sgit_FTDC_SPI_InvestorIDType = _pyctp.Sgit_FTDC_SPI_InvestorIDType
Sgit_FTDC_TPID_EncryptionStandard = _pyctp.Sgit_FTDC_TPID_EncryptionStandard
Sgit_FTDC_TPID_RiskMode = _pyctp.Sgit_FTDC_TPID_RiskMode
Sgit_FTDC_TPID_RiskModeGlobal = _pyctp.Sgit_FTDC_TPID_RiskModeGlobal
Sgit_FTDC_FI_SettlementFund = _pyctp.Sgit_FTDC_FI_SettlementFund
Sgit_FTDC_FI_Trade = _pyctp.Sgit_FTDC_FI_Trade
Sgit_FTDC_FI_InvestorPosition = _pyctp.Sgit_FTDC_FI_InvestorPosition
Sgit_FTDC_FI_SubEntryFund = _pyctp.Sgit_FTDC_FI_SubEntryFund
Sgit_FTDC_FI_CZCECombinationPos = _pyctp.Sgit_FTDC_FI_CZCECombinationPos
Sgit_FTDC_FI_CSRCData = _pyctp.Sgit_FTDC_FI_CSRCData
Sgit_FTDC_FUT_Settlement = _pyctp.Sgit_FTDC_FUT_Settlement
Sgit_FTDC_FUT_Check = _pyctp.Sgit_FTDC_FUT_Check
Sgit_FTDC_FFT_Txt = _pyctp.Sgit_FTDC_FFT_Txt
Sgit_FTDC_FFT_Zip = _pyctp.Sgit_FTDC_FFT_Zip
Sgit_FTDC_FFT_DBF = _pyctp.Sgit_FTDC_FFT_DBF
Sgit_FTDC_FUS_SucceedUpload = _pyctp.Sgit_FTDC_FUS_SucceedUpload
Sgit_FTDC_FUS_FailedUpload = _pyctp.Sgit_FTDC_FUS_FailedUpload
Sgit_FTDC_FUS_SucceedLoad = _pyctp.Sgit_FTDC_FUS_SucceedLoad
Sgit_FTDC_FUS_PartSucceedLoad = _pyctp.Sgit_FTDC_FUS_PartSucceedLoad
Sgit_FTDC_FUS_FailedLoad = _pyctp.Sgit_FTDC_FUS_FailedLoad
Sgit_FTDC_TD_Out = _pyctp.Sgit_FTDC_TD_Out
Sgit_FTDC_TD_In = _pyctp.Sgit_FTDC_TD_In
Sgit_FTDC_BF_ICBC = _pyctp.Sgit_FTDC_BF_ICBC
Sgit_FTDC_BF_ABC = _pyctp.Sgit_FTDC_BF_ABC
Sgit_FTDC_BF_BC = _pyctp.Sgit_FTDC_BF_BC
Sgit_FTDC_BF_CBC = _pyctp.Sgit_FTDC_BF_CBC
Sgit_FTDC_BF_BOC = _pyctp.Sgit_FTDC_BF_BOC
Sgit_FTDC_BF_Other = _pyctp.Sgit_FTDC_BF_Other
Sgit_FTDC_SC_NoSpecialRule = _pyctp.Sgit_FTDC_SC_NoSpecialRule
Sgit_FTDC_SC_NoSpringFestival = _pyctp.Sgit_FTDC_SC_NoSpringFestival
Sgit_FTDC_IPT_LastSettlement = _pyctp.Sgit_FTDC_IPT_LastSettlement
Sgit_FTDC_IPT_LaseClose = _pyctp.Sgit_FTDC_IPT_LaseClose
Sgit_FTDC_PLP_Active = _pyctp.Sgit_FTDC_PLP_Active
Sgit_FTDC_PLP_NonActive = _pyctp.Sgit_FTDC_PLP_NonActive
Sgit_FTDC_PLP_Canceled = _pyctp.Sgit_FTDC_PLP_Canceled
Sgit_FTDC_DM_CashDeliv = _pyctp.Sgit_FTDC_DM_CashDeliv
Sgit_FTDC_DM_CommodityDeliv = _pyctp.Sgit_FTDC_DM_CommodityDeliv
Sgit_FTDC_FIOT_FundIO = _pyctp.Sgit_FTDC_FIOT_FundIO
Sgit_FTDC_FIOT_Transfer = _pyctp.Sgit_FTDC_FIOT_Transfer
Sgit_FTDC_FT_Deposite = _pyctp.Sgit_FTDC_FT_Deposite
Sgit_FTDC_FT_ItemFund = _pyctp.Sgit_FTDC_FT_ItemFund
Sgit_FTDC_FT_Company = _pyctp.Sgit_FTDC_FT_Company
Sgit_FTDC_FD_In = _pyctp.Sgit_FTDC_FD_In
Sgit_FTDC_FD_Out = _pyctp.Sgit_FTDC_FD_Out
Sgit_FTDC_FS_Record = _pyctp.Sgit_FTDC_FS_Record
Sgit_FTDC_FS_Check = _pyctp.Sgit_FTDC_FS_Check
Sgit_FTDC_FS_Charge = _pyctp.Sgit_FTDC_FS_Charge
Sgit_FTDC_PS_None = _pyctp.Sgit_FTDC_PS_None
Sgit_FTDC_PS_Publishing = _pyctp.Sgit_FTDC_PS_Publishing
Sgit_FTDC_PS_Published = _pyctp.Sgit_FTDC_PS_Published
Sgit_FTDC_ES_NonActive = _pyctp.Sgit_FTDC_ES_NonActive
Sgit_FTDC_ES_Startup = _pyctp.Sgit_FTDC_ES_Startup
Sgit_FTDC_ES_Initialize = _pyctp.Sgit_FTDC_ES_Initialize
Sgit_FTDC_ES_Initialized = _pyctp.Sgit_FTDC_ES_Initialized
Sgit_FTDC_ES_Close = _pyctp.Sgit_FTDC_ES_Close
Sgit_FTDC_ES_Closed = _pyctp.Sgit_FTDC_ES_Closed
Sgit_FTDC_ES_Settlement = _pyctp.Sgit_FTDC_ES_Settlement
Sgit_FTDC_STS_Initialize = _pyctp.Sgit_FTDC_STS_Initialize
Sgit_FTDC_STS_Settlementing = _pyctp.Sgit_FTDC_STS_Settlementing
Sgit_FTDC_STS_Settlemented = _pyctp.Sgit_FTDC_STS_Settlemented
Sgit_FTDC_STS_Finished = _pyctp.Sgit_FTDC_STS_Finished
Sgit_FTDC_CT_Person = _pyctp.Sgit_FTDC_CT_Person
Sgit_FTDC_CT_Company = _pyctp.Sgit_FTDC_CT_Company
Sgit_FTDC_CT_Fund = _pyctp.Sgit_FTDC_CT_Fund
Sgit_FTDC_BT_Trade = _pyctp.Sgit_FTDC_BT_Trade
Sgit_FTDC_BT_TradeSettle = _pyctp.Sgit_FTDC_BT_TradeSettle
Sgit_FTDC_FAS_Low = _pyctp.Sgit_FTDC_FAS_Low
Sgit_FTDC_FAS_Normal = _pyctp.Sgit_FTDC_FAS_Normal
Sgit_FTDC_FAS_Focus = _pyctp.Sgit_FTDC_FAS_Focus
Sgit_FTDC_FAS_Risk = _pyctp.Sgit_FTDC_FAS_Risk
Sgit_FTDC_FAS_ByTrade = _pyctp.Sgit_FTDC_FAS_ByTrade
Sgit_FTDC_FAS_ByDeliv = _pyctp.Sgit_FTDC_FAS_ByDeliv
Sgit_FTDC_FAS_None = _pyctp.Sgit_FTDC_FAS_None
Sgit_FTDC_FAS_FixFee = _pyctp.Sgit_FTDC_FAS_FixFee
Sgit_FTDC_PWDT_Trade = _pyctp.Sgit_FTDC_PWDT_Trade
Sgit_FTDC_PWDT_Account = _pyctp.Sgit_FTDC_PWDT_Account
Sgit_FTDC_AG_All = _pyctp.Sgit_FTDC_AG_All
Sgit_FTDC_AG_OnlyLost = _pyctp.Sgit_FTDC_AG_OnlyLost
Sgit_FTDC_AG_OnlyGain = _pyctp.Sgit_FTDC_AG_OnlyGain
Sgit_FTDC_AG_None = _pyctp.Sgit_FTDC_AG_None
Sgit_FTDC_ICP_Include = _pyctp.Sgit_FTDC_ICP_Include
Sgit_FTDC_ICP_NotInclude = _pyctp.Sgit_FTDC_ICP_NotInclude
Sgit_FTDC_AWT_Enable = _pyctp.Sgit_FTDC_AWT_Enable
Sgit_FTDC_AWT_Disable = _pyctp.Sgit_FTDC_AWT_Disable
Sgit_FTDC_FPWD_UnCheck = _pyctp.Sgit_FTDC_FPWD_UnCheck
Sgit_FTDC_FPWD_Check = _pyctp.Sgit_FTDC_FPWD_Check
Sgit_FTDC_TT_BankToFuture = _pyctp.Sgit_FTDC_TT_BankToFuture
Sgit_FTDC_TT_FutureToBank = _pyctp.Sgit_FTDC_TT_FutureToBank
Sgit_FTDC_TVF_Invalid = _pyctp.Sgit_FTDC_TVF_Invalid
Sgit_FTDC_TVF_Valid = _pyctp.Sgit_FTDC_TVF_Valid
Sgit_FTDC_TVF_Reverse = _pyctp.Sgit_FTDC_TVF_Reverse
Sgit_FTDC_RN_CD = _pyctp.Sgit_FTDC_RN_CD
Sgit_FTDC_RN_ZT = _pyctp.Sgit_FTDC_RN_ZT
Sgit_FTDC_RN_QT = _pyctp.Sgit_FTDC_RN_QT
Sgit_FTDC_SEX_None = _pyctp.Sgit_FTDC_SEX_None
Sgit_FTDC_SEX_Man = _pyctp.Sgit_FTDC_SEX_Man
Sgit_FTDC_SEX_Woman = _pyctp.Sgit_FTDC_SEX_Woman
Sgit_FTDC_UT_Investor = _pyctp.Sgit_FTDC_UT_Investor
Sgit_FTDC_UT_Operator = _pyctp.Sgit_FTDC_UT_Operator
Sgit_FTDC_UT_SuperUser = _pyctp.Sgit_FTDC_UT_SuperUser
Sgit_FTDC_RATETYPE_MarginRate = _pyctp.Sgit_FTDC_RATETYPE_MarginRate
Sgit_FTDC_NOTETYPE_TradeSettleBill = _pyctp.Sgit_FTDC_NOTETYPE_TradeSettleBill
Sgit_FTDC_NOTETYPE_TradeSettleMonth = _pyctp.Sgit_FTDC_NOTETYPE_TradeSettleMonth
Sgit_FTDC_NOTETYPE_CallMarginNotes = _pyctp.Sgit_FTDC_NOTETYPE_CallMarginNotes
Sgit_FTDC_NOTETYPE_ForceCloseNotes = _pyctp.Sgit_FTDC_NOTETYPE_ForceCloseNotes
Sgit_FTDC_NOTETYPE_TradeNotes = _pyctp.Sgit_FTDC_NOTETYPE_TradeNotes
Sgit_FTDC_NOTETYPE_DelivNotes = _pyctp.Sgit_FTDC_NOTETYPE_DelivNotes
Sgit_FTDC_SBS_Day = _pyctp.Sgit_FTDC_SBS_Day
Sgit_FTDC_SBS_Volume = _pyctp.Sgit_FTDC_SBS_Volume
Sgit_FTDC_ST_Day = _pyctp.Sgit_FTDC_ST_Day
Sgit_FTDC_ST_Month = _pyctp.Sgit_FTDC_ST_Month
Sgit_FTDC_URT_Logon = _pyctp.Sgit_FTDC_URT_Logon
Sgit_FTDC_URT_Transfer = _pyctp.Sgit_FTDC_URT_Transfer
Sgit_FTDC_URT_EMail = _pyctp.Sgit_FTDC_URT_EMail
Sgit_FTDC_URT_Fax = _pyctp.Sgit_FTDC_URT_Fax
Sgit_FTDC_URT_ConditionOrder = _pyctp.Sgit_FTDC_URT_ConditionOrder
Sgit_FTDC_MPT_PreSettlementPrice = _pyctp.Sgit_FTDC_MPT_PreSettlementPrice
Sgit_FTDC_MPT_SettlementPrice = _pyctp.Sgit_FTDC_MPT_SettlementPrice
Sgit_FTDC_MPT_AveragePrice = _pyctp.Sgit_FTDC_MPT_AveragePrice
Sgit_FTDC_MPT_OpenPrice = _pyctp.Sgit_FTDC_MPT_OpenPrice
Sgit_FTDC_BGS_None = _pyctp.Sgit_FTDC_BGS_None
Sgit_FTDC_BGS_NoGenerated = _pyctp.Sgit_FTDC_BGS_NoGenerated
Sgit_FTDC_BGS_Generated = _pyctp.Sgit_FTDC_BGS_Generated
Sgit_FTDC_AT_HandlePositionAlgo = _pyctp.Sgit_FTDC_AT_HandlePositionAlgo
Sgit_FTDC_AT_FindMarginRateAlgo = _pyctp.Sgit_FTDC_AT_FindMarginRateAlgo
Sgit_FTDC_HPA_Base = _pyctp.Sgit_FTDC_HPA_Base
Sgit_FTDC_HPA_DCE = _pyctp.Sgit_FTDC_HPA_DCE
Sgit_FTDC_HPA_CZCE = _pyctp.Sgit_FTDC_HPA_CZCE
Sgit_FTDC_FMRA_Base = _pyctp.Sgit_FTDC_FMRA_Base
Sgit_FTDC_FMRA_DCE = _pyctp.Sgit_FTDC_FMRA_DCE
Sgit_FTDC_FMRA_CZCE = _pyctp.Sgit_FTDC_FMRA_CZCE
Sgit_FTDC_HTAA_Base = _pyctp.Sgit_FTDC_HTAA_Base
Sgit_FTDC_HTAA_DCE = _pyctp.Sgit_FTDC_HTAA_DCE
Sgit_FTDC_HTAA_CZCE = _pyctp.Sgit_FTDC_HTAA_CZCE
Sgit_FTDC_PST_Order = _pyctp.Sgit_FTDC_PST_Order
Sgit_FTDC_PST_Open = _pyctp.Sgit_FTDC_PST_Open
Sgit_FTDC_PST_Fund = _pyctp.Sgit_FTDC_PST_Fund
Sgit_FTDC_PST_Settlement = _pyctp.Sgit_FTDC_PST_Settlement
Sgit_FTDC_PST_Company = _pyctp.Sgit_FTDC_PST_Company
Sgit_FTDC_PST_Corporation = _pyctp.Sgit_FTDC_PST_Corporation
Sgit_FTDC_PST_LinkMan = _pyctp.Sgit_FTDC_PST_LinkMan
Sgit_FTDC_QIR_All = _pyctp.Sgit_FTDC_QIR_All
Sgit_FTDC_QIR_Group = _pyctp.Sgit_FTDC_QIR_Group
Sgit_FTDC_QIR_Single = _pyctp.Sgit_FTDC_QIR_Single
Sgit_FTDC_IRS_Normal = _pyctp.Sgit_FTDC_IRS_Normal
Sgit_FTDC_IRS_Warn = _pyctp.Sgit_FTDC_IRS_Warn
Sgit_FTDC_IRS_Call = _pyctp.Sgit_FTDC_IRS_Call
Sgit_FTDC_IRS_Force = _pyctp.Sgit_FTDC_IRS_Force
Sgit_FTDC_IRS_Exception = _pyctp.Sgit_FTDC_IRS_Exception
Sgit_FTDC_UET_Login = _pyctp.Sgit_FTDC_UET_Login
Sgit_FTDC_UET_Logout = _pyctp.Sgit_FTDC_UET_Logout
Sgit_FTDC_UET_Trading = _pyctp.Sgit_FTDC_UET_Trading
Sgit_FTDC_UET_TradingError = _pyctp.Sgit_FTDC_UET_TradingError
Sgit_FTDC_UET_UpdatePassword = _pyctp.Sgit_FTDC_UET_UpdatePassword
Sgit_FTDC_UET_Authenticate = _pyctp.Sgit_FTDC_UET_Authenticate
Sgit_FTDC_UET_Other = _pyctp.Sgit_FTDC_UET_Other
Sgit_FTDC_ICS_Close = _pyctp.Sgit_FTDC_ICS_Close
Sgit_FTDC_ICS_CloseToday = _pyctp.Sgit_FTDC_ICS_CloseToday
Sgit_FTDC_SM_Non = _pyctp.Sgit_FTDC_SM_Non
Sgit_FTDC_SM_Instrument = _pyctp.Sgit_FTDC_SM_Instrument
Sgit_FTDC_SM_Product = _pyctp.Sgit_FTDC_SM_Product
Sgit_FTDC_SM_Investor = _pyctp.Sgit_FTDC_SM_Investor
Sgit_FTDC_PAOS_NotSend = _pyctp.Sgit_FTDC_PAOS_NotSend
Sgit_FTDC_PAOS_Send = _pyctp.Sgit_FTDC_PAOS_Send
Sgit_FTDC_PAOS_Deleted = _pyctp.Sgit_FTDC_PAOS_Deleted
Sgit_FTDC_VDS_Dealing = _pyctp.Sgit_FTDC_VDS_Dealing
Sgit_FTDC_VDS_DeaclSucceed = _pyctp.Sgit_FTDC_VDS_DeaclSucceed
Sgit_FTDC_ORGS_Standard = _pyctp.Sgit_FTDC_ORGS_Standard
Sgit_FTDC_ORGS_ESunny = _pyctp.Sgit_FTDC_ORGS_ESunny
Sgit_FTDC_ORGS_KingStarV6 = _pyctp.Sgit_FTDC_ORGS_KingStarV6
Sgit_FTDC_VTS_NaturalDeal = _pyctp.Sgit_FTDC_VTS_NaturalDeal
Sgit_FTDC_VTS_SucceedEnd = _pyctp.Sgit_FTDC_VTS_SucceedEnd
Sgit_FTDC_VTS_FailedEND = _pyctp.Sgit_FTDC_VTS_FailedEND
Sgit_FTDC_VTS_Exception = _pyctp.Sgit_FTDC_VTS_Exception
Sgit_FTDC_VTS_ManualDeal = _pyctp.Sgit_FTDC_VTS_ManualDeal
Sgit_FTDC_VTS_MesException = _pyctp.Sgit_FTDC_VTS_MesException
Sgit_FTDC_VTS_SysException = _pyctp.Sgit_FTDC_VTS_SysException
Sgit_FTDC_VBAT_BankBook = _pyctp.Sgit_FTDC_VBAT_BankBook
Sgit_FTDC_VBAT_BankCard = _pyctp.Sgit_FTDC_VBAT_BankCard
Sgit_FTDC_VBAT_CreditCard = _pyctp.Sgit_FTDC_VBAT_CreditCard
Sgit_FTDC_VMS_Natural = _pyctp.Sgit_FTDC_VMS_Natural
Sgit_FTDC_VMS_Canceled = _pyctp.Sgit_FTDC_VMS_Canceled
Sgit_FTDC_VAA_NoAvailAbility = _pyctp.Sgit_FTDC_VAA_NoAvailAbility
Sgit_FTDC_VAA_AvailAbility = _pyctp.Sgit_FTDC_VAA_AvailAbility
Sgit_FTDC_VAA_Repeal = _pyctp.Sgit_FTDC_VAA_Repeal
Sgit_FTDC_GEN_Program = _pyctp.Sgit_FTDC_GEN_Program
Sgit_FTDC_GEN_HandWork = _pyctp.Sgit_FTDC_GEN_HandWork
Sgit_FTDC_CFMMCKK_REQUEST = _pyctp.Sgit_FTDC_CFMMCKK_REQUEST
Sgit_FTDC_CFMMCKK_AUTO = _pyctp.Sgit_FTDC_CFMMCKK_AUTO
Sgit_FTDC_CFMMCKK_MANUAL = _pyctp.Sgit_FTDC_CFMMCKK_MANUAL
Sgit_FTDC_CFT_IDCard = _pyctp.Sgit_FTDC_CFT_IDCard
Sgit_FTDC_CFT_Passport = _pyctp.Sgit_FTDC_CFT_Passport
Sgit_FTDC_CFT_OfficerIDCard = _pyctp.Sgit_FTDC_CFT_OfficerIDCard
Sgit_FTDC_CFT_SoldierIDCard = _pyctp.Sgit_FTDC_CFT_SoldierIDCard
Sgit_FTDC_CFT_HomeComingCard = _pyctp.Sgit_FTDC_CFT_HomeComingCard
Sgit_FTDC_CFT_HouseholdRegister = _pyctp.Sgit_FTDC_CFT_HouseholdRegister
Sgit_FTDC_CFT_LicenseNo = _pyctp.Sgit_FTDC_CFT_LicenseNo
Sgit_FTDC_CFT_InstitutionCodeCard = _pyctp.Sgit_FTDC_CFT_InstitutionCodeCard
Sgit_FTDC_CFT_TempLicenseNo = _pyctp.Sgit_FTDC_CFT_TempLicenseNo
Sgit_FTDC_CFT_NoEnterpriseLicenseNo = _pyctp.Sgit_FTDC_CFT_NoEnterpriseLicenseNo
Sgit_FTDC_CFT_OtherCard = _pyctp.Sgit_FTDC_CFT_OtherCard
Sgit_FTDC_CFT_SuperDepAgree = _pyctp.Sgit_FTDC_CFT_SuperDepAgree
Sgit_FTDC_FBC_Others = _pyctp.Sgit_FTDC_FBC_Others
Sgit_FTDC_FBC_TransferDetails = _pyctp.Sgit_FTDC_FBC_TransferDetails
Sgit_FTDC_FBC_CustAccStatus = _pyctp.Sgit_FTDC_FBC_CustAccStatus
Sgit_FTDC_FBC_AccountTradeDetails = _pyctp.Sgit_FTDC_FBC_AccountTradeDetails
Sgit_FTDC_FBC_FutureAccountChangeInfoDetails = _pyctp.Sgit_FTDC_FBC_FutureAccountChangeInfoDetails
Sgit_FTDC_FBC_CustMoneyDetail = _pyctp.Sgit_FTDC_FBC_CustMoneyDetail
Sgit_FTDC_FBC_CustCancelAccountInfo = _pyctp.Sgit_FTDC_FBC_CustCancelAccountInfo
Sgit_FTDC_FBC_CustMoneyResult = _pyctp.Sgit_FTDC_FBC_CustMoneyResult
Sgit_FTDC_FBC_OthersExceptionResult = _pyctp.Sgit_FTDC_FBC_OthersExceptionResult
Sgit_FTDC_FBC_CustInterestNetMoneyDetails = _pyctp.Sgit_FTDC_FBC_CustInterestNetMoneyDetails
Sgit_FTDC_FBC_CustMoneySendAndReceiveDetails = _pyctp.Sgit_FTDC_FBC_CustMoneySendAndReceiveDetails
Sgit_FTDC_FBC_CorporationMoneyTotal = _pyctp.Sgit_FTDC_FBC_CorporationMoneyTotal
Sgit_FTDC_FBC_MainbodyMoneyTotal = _pyctp.Sgit_FTDC_FBC_MainbodyMoneyTotal
Sgit_FTDC_FBC_MainPartMonitorData = _pyctp.Sgit_FTDC_FBC_MainPartMonitorData
Sgit_FTDC_FBC_PreparationMoney = _pyctp.Sgit_FTDC_FBC_PreparationMoney
Sgit_FTDC_FBC_BankMoneyMonitorData = _pyctp.Sgit_FTDC_FBC_BankMoneyMonitorData
Sgit_FTDC_CEC_Exchange = _pyctp.Sgit_FTDC_CEC_Exchange
Sgit_FTDC_CEC_Cash = _pyctp.Sgit_FTDC_CEC_Cash
Sgit_FTDC_YNI_Yes = _pyctp.Sgit_FTDC_YNI_Yes
Sgit_FTDC_YNI_No = _pyctp.Sgit_FTDC_YNI_No
Sgit_FTDC_BLT_CurrentMoney = _pyctp.Sgit_FTDC_BLT_CurrentMoney
Sgit_FTDC_BLT_UsableMoney = _pyctp.Sgit_FTDC_BLT_UsableMoney
Sgit_FTDC_BLT_FetchableMoney = _pyctp.Sgit_FTDC_BLT_FetchableMoney
Sgit_FTDC_BLT_FreezeMoney = _pyctp.Sgit_FTDC_BLT_FreezeMoney
Sgit_FTDC_GD_Unknown = _pyctp.Sgit_FTDC_GD_Unknown
Sgit_FTDC_GD_Male = _pyctp.Sgit_FTDC_GD_Male
Sgit_FTDC_GD_Female = _pyctp.Sgit_FTDC_GD_Female
Sgit_FTDC_FPF_BEN = _pyctp.Sgit_FTDC_FPF_BEN
Sgit_FTDC_FPF_OUR = _pyctp.Sgit_FTDC_FPF_OUR
Sgit_FTDC_FPF_SHA = _pyctp.Sgit_FTDC_FPF_SHA
Sgit_FTDC_PWKT_ExchangeKey = _pyctp.Sgit_FTDC_PWKT_ExchangeKey
Sgit_FTDC_PWKT_PassWordKey = _pyctp.Sgit_FTDC_PWKT_PassWordKey
Sgit_FTDC_PWKT_MACKey = _pyctp.Sgit_FTDC_PWKT_MACKey
Sgit_FTDC_PWKT_MessageKey = _pyctp.Sgit_FTDC_PWKT_MessageKey
Sgit_FTDC_PWT_Query = _pyctp.Sgit_FTDC_PWT_Query
Sgit_FTDC_PWT_Fetch = _pyctp.Sgit_FTDC_PWT_Fetch
Sgit_FTDC_PWT_Transfer = _pyctp.Sgit_FTDC_PWT_Transfer
Sgit_FTDC_PWT_Trade = _pyctp.Sgit_FTDC_PWT_Trade
Sgit_FTDC_EM_NoEncry = _pyctp.Sgit_FTDC_EM_NoEncry
Sgit_FTDC_EM_DES = _pyctp.Sgit_FTDC_EM_DES
Sgit_FTDC_EM_3DES = _pyctp.Sgit_FTDC_EM_3DES
Sgit_FTDC_BRF_BankNotNeedRepeal = _pyctp.Sgit_FTDC_BRF_BankNotNeedRepeal
Sgit_FTDC_BRF_BankWaitingRepeal = _pyctp.Sgit_FTDC_BRF_BankWaitingRepeal
Sgit_FTDC_BRF_BankBeenRepealed = _pyctp.Sgit_FTDC_BRF_BankBeenRepealed
Sgit_FTDC_BRORF_BrokerNotNeedRepeal = _pyctp.Sgit_FTDC_BRORF_BrokerNotNeedRepeal
Sgit_FTDC_BRORF_BrokerWaitingRepeal = _pyctp.Sgit_FTDC_BRORF_BrokerWaitingRepeal
Sgit_FTDC_BRORF_BrokerBeenRepealed = _pyctp.Sgit_FTDC_BRORF_BrokerBeenRepealed
Sgit_FTDC_TS_Bank = _pyctp.Sgit_FTDC_TS_Bank
Sgit_FTDC_TS_Future = _pyctp.Sgit_FTDC_TS_Future
Sgit_FTDC_TS_Store = _pyctp.Sgit_FTDC_TS_Store
Sgit_FTDC_LF_Yes = _pyctp.Sgit_FTDC_LF_Yes
Sgit_FTDC_LF_No = _pyctp.Sgit_FTDC_LF_No
Sgit_FTDC_BAS_Normal = _pyctp.Sgit_FTDC_BAS_Normal
Sgit_FTDC_BAS_Freeze = _pyctp.Sgit_FTDC_BAS_Freeze
Sgit_FTDC_BAS_ReportLoss = _pyctp.Sgit_FTDC_BAS_ReportLoss
Sgit_FTDC_MAS_Normal = _pyctp.Sgit_FTDC_MAS_Normal
Sgit_FTDC_MAS_Cancel = _pyctp.Sgit_FTDC_MAS_Cancel
Sgit_FTDC_MSS_Point = _pyctp.Sgit_FTDC_MSS_Point
Sgit_FTDC_MSS_PrePoint = _pyctp.Sgit_FTDC_MSS_PrePoint
Sgit_FTDC_MSS_CancelPoint = _pyctp.Sgit_FTDC_MSS_CancelPoint
Sgit_FTDC_SYT_FutureBankTransfer = _pyctp.Sgit_FTDC_SYT_FutureBankTransfer
Sgit_FTDC_SYT_StockBankTransfer = _pyctp.Sgit_FTDC_SYT_StockBankTransfer
Sgit_FTDC_SYT_TheThirdPartStore = _pyctp.Sgit_FTDC_SYT_TheThirdPartStore
Sgit_FTDC_TEF_NormalProcessing = _pyctp.Sgit_FTDC_TEF_NormalProcessing
Sgit_FTDC_TEF_Success = _pyctp.Sgit_FTDC_TEF_Success
Sgit_FTDC_TEF_Failed = _pyctp.Sgit_FTDC_TEF_Failed
Sgit_FTDC_TEF_Abnormal = _pyctp.Sgit_FTDC_TEF_Abnormal
Sgit_FTDC_TEF_ManualProcessedForException = _pyctp.Sgit_FTDC_TEF_ManualProcessedForException
Sgit_FTDC_TEF_CommuFailedNeedManualProcess = _pyctp.Sgit_FTDC_TEF_CommuFailedNeedManualProcess
Sgit_FTDC_TEF_SysErrorNeedManualProcess = _pyctp.Sgit_FTDC_TEF_SysErrorNeedManualProcess
Sgit_FTDC_PSS_NotProcess = _pyctp.Sgit_FTDC_PSS_NotProcess
Sgit_FTDC_PSS_StartProcess = _pyctp.Sgit_FTDC_PSS_StartProcess
Sgit_FTDC_PSS_Finished = _pyctp.Sgit_FTDC_PSS_Finished
Sgit_FTDC_CUSTT_Person = _pyctp.Sgit_FTDC_CUSTT_Person
Sgit_FTDC_CUSTT_Institution = _pyctp.Sgit_FTDC_CUSTT_Institution
Sgit_FTDC_FBTTD_FromBankToFuture = _pyctp.Sgit_FTDC_FBTTD_FromBankToFuture
Sgit_FTDC_FBTTD_FromFutureToBank = _pyctp.Sgit_FTDC_FBTTD_FromFutureToBank
Sgit_FTDC_OOD_Open = _pyctp.Sgit_FTDC_OOD_Open
Sgit_FTDC_OOD_Destroy = _pyctp.Sgit_FTDC_OOD_Destroy
Sgit_FTDC_AVAF_Invalid = _pyctp.Sgit_FTDC_AVAF_Invalid
Sgit_FTDC_AVAF_Valid = _pyctp.Sgit_FTDC_AVAF_Valid
Sgit_FTDC_AVAF_Repeal = _pyctp.Sgit_FTDC_AVAF_Repeal
Sgit_FTDC_OT_Bank = _pyctp.Sgit_FTDC_OT_Bank
Sgit_FTDC_OT_Future = _pyctp.Sgit_FTDC_OT_Future
Sgit_FTDC_OT_PlateForm = _pyctp.Sgit_FTDC_OT_PlateForm
Sgit_FTDC_OL_HeadQuarters = _pyctp.Sgit_FTDC_OL_HeadQuarters
Sgit_FTDC_OL_Branch = _pyctp.Sgit_FTDC_OL_Branch
Sgit_FTDC_PID_FutureProtocal = _pyctp.Sgit_FTDC_PID_FutureProtocal
Sgit_FTDC_PID_ICBCProtocal = _pyctp.Sgit_FTDC_PID_ICBCProtocal
Sgit_FTDC_PID_ABCProtocal = _pyctp.Sgit_FTDC_PID_ABCProtocal
Sgit_FTDC_PID_CBCProtocal = _pyctp.Sgit_FTDC_PID_CBCProtocal
Sgit_FTDC_PID_CCBProtocal = _pyctp.Sgit_FTDC_PID_CCBProtocal
Sgit_FTDC_PID_BOCOMProtocal = _pyctp.Sgit_FTDC_PID_BOCOMProtocal
Sgit_FTDC_PID_FBTPlateFormProtocal = _pyctp.Sgit_FTDC_PID_FBTPlateFormProtocal
Sgit_FTDC_CM_ShortConnect = _pyctp.Sgit_FTDC_CM_ShortConnect
Sgit_FTDC_CM_LongConnect = _pyctp.Sgit_FTDC_CM_LongConnect
Sgit_FTDC_SRM_ASync = _pyctp.Sgit_FTDC_SRM_ASync
Sgit_FTDC_SRM_Sync = _pyctp.Sgit_FTDC_SRM_Sync
Sgit_FTDC_BAT_BankBook = _pyctp.Sgit_FTDC_BAT_BankBook
Sgit_FTDC_BAT_SavingCard = _pyctp.Sgit_FTDC_BAT_SavingCard
Sgit_FTDC_BAT_CreditCard = _pyctp.Sgit_FTDC_BAT_CreditCard
Sgit_FTDC_FAT_BankBook = _pyctp.Sgit_FTDC_FAT_BankBook
Sgit_FTDC_FAT_SavingCard = _pyctp.Sgit_FTDC_FAT_SavingCard
Sgit_FTDC_FAT_CreditCard = _pyctp.Sgit_FTDC_FAT_CreditCard
Sgit_FTDC_OS_Ready = _pyctp.Sgit_FTDC_OS_Ready
Sgit_FTDC_OS_CheckIn = _pyctp.Sgit_FTDC_OS_CheckIn
Sgit_FTDC_OS_CheckOut = _pyctp.Sgit_FTDC_OS_CheckOut
Sgit_FTDC_OS_CheckFileArrived = _pyctp.Sgit_FTDC_OS_CheckFileArrived
Sgit_FTDC_OS_CheckDetail = _pyctp.Sgit_FTDC_OS_CheckDetail
Sgit_FTDC_OS_DayEndClean = _pyctp.Sgit_FTDC_OS_DayEndClean
Sgit_FTDC_OS_Invalid = _pyctp.Sgit_FTDC_OS_Invalid
Sgit_FTDC_CCBFM_ByAmount = _pyctp.Sgit_FTDC_CCBFM_ByAmount
Sgit_FTDC_CCBFM_ByMonth = _pyctp.Sgit_FTDC_CCBFM_ByMonth
Sgit_FTDC_CAPIT_Client = _pyctp.Sgit_FTDC_CAPIT_Client
Sgit_FTDC_CAPIT_Server = _pyctp.Sgit_FTDC_CAPIT_Server
Sgit_FTDC_CAPIT_UserApi = _pyctp.Sgit_FTDC_CAPIT_UserApi
Sgit_FTDC_LS_Connected = _pyctp.Sgit_FTDC_LS_Connected
Sgit_FTDC_LS_Disconnected = _pyctp.Sgit_FTDC_LS_Disconnected
Sgit_FTDC_BPWDF_NoCheck = _pyctp.Sgit_FTDC_BPWDF_NoCheck
Sgit_FTDC_BPWDF_BlankCheck = _pyctp.Sgit_FTDC_BPWDF_BlankCheck
Sgit_FTDC_BPWDF_EncryptCheck = _pyctp.Sgit_FTDC_BPWDF_EncryptCheck
Sgit_FTDC_SAT_AccountID = _pyctp.Sgit_FTDC_SAT_AccountID
Sgit_FTDC_SAT_CardID = _pyctp.Sgit_FTDC_SAT_CardID
Sgit_FTDC_SAT_SHStockholderID = _pyctp.Sgit_FTDC_SAT_SHStockholderID
Sgit_FTDC_SAT_SZStockholderID = _pyctp.Sgit_FTDC_SAT_SZStockholderID
Sgit_FTDC_TRFS_Normal = _pyctp.Sgit_FTDC_TRFS_Normal
Sgit_FTDC_TRFS_Repealed = _pyctp.Sgit_FTDC_TRFS_Repealed
Sgit_FTDC_SPTYPE_Broker = _pyctp.Sgit_FTDC_SPTYPE_Broker
Sgit_FTDC_SPTYPE_Bank = _pyctp.Sgit_FTDC_SPTYPE_Bank
Sgit_FTDC_REQRSP_Request = _pyctp.Sgit_FTDC_REQRSP_Request
Sgit_FTDC_REQRSP_Response = _pyctp.Sgit_FTDC_REQRSP_Response
Sgit_FTDC_FBTUET_SignIn = _pyctp.Sgit_FTDC_FBTUET_SignIn
Sgit_FTDC_FBTUET_FromBankToFuture = _pyctp.Sgit_FTDC_FBTUET_FromBankToFuture
Sgit_FTDC_FBTUET_FromFutureToBank = _pyctp.Sgit_FTDC_FBTUET_FromFutureToBank
Sgit_FTDC_FBTUET_OpenAccount = _pyctp.Sgit_FTDC_FBTUET_OpenAccount
Sgit_FTDC_FBTUET_CancelAccount = _pyctp.Sgit_FTDC_FBTUET_CancelAccount
Sgit_FTDC_FBTUET_ChangeAccount = _pyctp.Sgit_FTDC_FBTUET_ChangeAccount
Sgit_FTDC_FBTUET_RepealFromBankToFuture = _pyctp.Sgit_FTDC_FBTUET_RepealFromBankToFuture
Sgit_FTDC_FBTUET_RepealFromFutureToBank = _pyctp.Sgit_FTDC_FBTUET_RepealFromFutureToBank
Sgit_FTDC_FBTUET_QueryBankAccount = _pyctp.Sgit_FTDC_FBTUET_QueryBankAccount
Sgit_FTDC_FBTUET_QueryFutureAccount = _pyctp.Sgit_FTDC_FBTUET_QueryFutureAccount
Sgit_FTDC_FBTUET_SignOut = _pyctp.Sgit_FTDC_FBTUET_SignOut
Sgit_FTDC_FBTUET_SyncKey = _pyctp.Sgit_FTDC_FBTUET_SyncKey
Sgit_FTDC_FBTUET_Other = _pyctp.Sgit_FTDC_FBTUET_Other
Sgit_FTDC_NC_NOERROR = _pyctp.Sgit_FTDC_NC_NOERROR
Sgit_FTDC_NC_Warn = _pyctp.Sgit_FTDC_NC_Warn
Sgit_FTDC_NC_Call = _pyctp.Sgit_FTDC_NC_Call
Sgit_FTDC_NC_Force = _pyctp.Sgit_FTDC_NC_Force
Sgit_FTDC_NC_CHUANCANG = _pyctp.Sgit_FTDC_NC_CHUANCANG
Sgit_FTDC_NC_Exception = _pyctp.Sgit_FTDC_NC_Exception
Sgit_FTDC_FCT_Manual = _pyctp.Sgit_FTDC_FCT_Manual
Sgit_FTDC_FCT_Single = _pyctp.Sgit_FTDC_FCT_Single
Sgit_FTDC_FCT_Group = _pyctp.Sgit_FTDC_FCT_Group
Sgit_FTDC_RNM_System = _pyctp.Sgit_FTDC_RNM_System
Sgit_FTDC_RNM_SMS = _pyctp.Sgit_FTDC_RNM_SMS
Sgit_FTDC_RNM_EMail = _pyctp.Sgit_FTDC_RNM_EMail
Sgit_FTDC_RNM_Manual = _pyctp.Sgit_FTDC_RNM_Manual
Sgit_FTDC_RNS_NotGen = _pyctp.Sgit_FTDC_RNS_NotGen
Sgit_FTDC_RNS_Generated = _pyctp.Sgit_FTDC_RNS_Generated
Sgit_FTDC_RNS_SendError = _pyctp.Sgit_FTDC_RNS_SendError
Sgit_FTDC_RNS_SendOk = _pyctp.Sgit_FTDC_RNS_SendOk
Sgit_FTDC_RNS_Received = _pyctp.Sgit_FTDC_RNS_Received
Sgit_FTDC_RNS_Confirmed = _pyctp.Sgit_FTDC_RNS_Confirmed
Sgit_FTDC_RUE_ExportData = _pyctp.Sgit_FTDC_RUE_ExportData
Sgit_FTDC_COST_LastPriceAsc = _pyctp.Sgit_FTDC_COST_LastPriceAsc
Sgit_FTDC_COST_LastPriceDesc = _pyctp.Sgit_FTDC_COST_LastPriceDesc
Sgit_FTDC_COST_AskPriceAsc = _pyctp.Sgit_FTDC_COST_AskPriceAsc
Sgit_FTDC_COST_AskPriceDesc = _pyctp.Sgit_FTDC_COST_AskPriceDesc
Sgit_FTDC_COST_BidPriceAsc = _pyctp.Sgit_FTDC_COST_BidPriceAsc
Sgit_FTDC_COST_BidPriceDesc = _pyctp.Sgit_FTDC_COST_BidPriceDesc
Sgit_FTDC_UOAST_NoSend = _pyctp.Sgit_FTDC_UOAST_NoSend
Sgit_FTDC_UOAST_Sended = _pyctp.Sgit_FTDC_UOAST_Sended
Sgit_FTDC_UOAST_Generated = _pyctp.Sgit_FTDC_UOAST_Generated
Sgit_FTDC_UOAST_SendFail = _pyctp.Sgit_FTDC_UOAST_SendFail
Sgit_FTDC_UOAST_Success = _pyctp.Sgit_FTDC_UOAST_Success
Sgit_FTDC_UOAST_Fail = _pyctp.Sgit_FTDC_UOAST_Fail
Sgit_FTDC_UOAST_Cancel = _pyctp.Sgit_FTDC_UOAST_Cancel
Sgit_FTDC_UOACS_NoApply = _pyctp.Sgit_FTDC_UOACS_NoApply
Sgit_FTDC_UOACS_Submited = _pyctp.Sgit_FTDC_UOACS_Submited
Sgit_FTDC_UOACS_Sended = _pyctp.Sgit_FTDC_UOACS_Sended
Sgit_FTDC_UOACS_Success = _pyctp.Sgit_FTDC_UOACS_Success
Sgit_FTDC_UOACS_Refuse = _pyctp.Sgit_FTDC_UOACS_Refuse
Sgit_FTDC_UOACS_Cancel = _pyctp.Sgit_FTDC_UOACS_Cancel
Sgit_FTDC_QT_Radio = _pyctp.Sgit_FTDC_QT_Radio
Sgit_FTDC_QT_Option = _pyctp.Sgit_FTDC_QT_Option
Sgit_FTDC_QT_Blank = _pyctp.Sgit_FTDC_QT_Blank
Sgit_FTDC_PT_ApplyTradingCode = _pyctp.Sgit_FTDC_PT_ApplyTradingCode
Sgit_FTDC_PT_CancelTradingCode = _pyctp.Sgit_FTDC_PT_CancelTradingCode
Sgit_FTDC_PT_ModifyIDCard = _pyctp.Sgit_FTDC_PT_ModifyIDCard
Sgit_FTDC_PT_ModifyNoIDCard = _pyctp.Sgit_FTDC_PT_ModifyNoIDCard
Sgit_FTDC_PT_ExchOpenBak = _pyctp.Sgit_FTDC_PT_ExchOpenBak
Sgit_FTDC_PT_ExchCancelBak = _pyctp.Sgit_FTDC_PT_ExchCancelBak
Sgit_FTDC_PT_StandardAccount = _pyctp.Sgit_FTDC_PT_StandardAccount
Sgit_FTDC_PT_FreezeAccount = _pyctp.Sgit_FTDC_PT_FreezeAccount
Sgit_FTDC_PT_ActiveFreezeAccount = _pyctp.Sgit_FTDC_PT_ActiveFreezeAccount
Sgit_FTDC_BT_Request = _pyctp.Sgit_FTDC_BT_Request
Sgit_FTDC_BT_Response = _pyctp.Sgit_FTDC_BT_Response
Sgit_FTDC_BT_Notice = _pyctp.Sgit_FTDC_BT_Notice
Sgit_FTDC_CRC_Success = _pyctp.Sgit_FTDC_CRC_Success
Sgit_FTDC_CRC_Working = _pyctp.Sgit_FTDC_CRC_Working
Sgit_FTDC_CRC_InfoFail = _pyctp.Sgit_FTDC_CRC_InfoFail
Sgit_FTDC_CRC_IDCardFail = _pyctp.Sgit_FTDC_CRC_IDCardFail
Sgit_FTDC_CRC_OtherFail = _pyctp.Sgit_FTDC_CRC_OtherFail
Sgit_FTDC_CfMMCCT_All = _pyctp.Sgit_FTDC_CfMMCCT_All
Sgit_FTDC_CfMMCCT_Person = _pyctp.Sgit_FTDC_CfMMCCT_Person
Sgit_FTDC_CfMMCCT_Company = _pyctp.Sgit_FTDC_CfMMCCT_Company
Sgit_FTDC_EIDT_SHFE = _pyctp.Sgit_FTDC_EIDT_SHFE
Sgit_FTDC_EIDT_CZCE = _pyctp.Sgit_FTDC_EIDT_CZCE
Sgit_FTDC_EIDT_DCE = _pyctp.Sgit_FTDC_EIDT_DCE
Sgit_FTDC_EIDT_CFFEX = _pyctp.Sgit_FTDC_EIDT_CFFEX
Sgit_FTDC_EIDT_GOLD = _pyctp.Sgit_FTDC_EIDT_GOLD
Sgit_FTDC_EIDT_PAT = _pyctp.Sgit_FTDC_EIDT_PAT
Sgit_FTDC_ECIDT_Hedge = _pyctp.Sgit_FTDC_ECIDT_Hedge
Sgit_FTDC_ECIDT_Arbitrage = _pyctp.Sgit_FTDC_ECIDT_Arbitrage
Sgit_FTDC_ECIDT_Speculation = _pyctp.Sgit_FTDC_ECIDT_Speculation
Sgit_FTDC_UF_NoUpdate = _pyctp.Sgit_FTDC_UF_NoUpdate
Sgit_FTDC_UF_Success = _pyctp.Sgit_FTDC_UF_Success
Sgit_FTDC_UF_Fail = _pyctp.Sgit_FTDC_UF_Fail
Sgit_FTDC_UF_TCSuccess = _pyctp.Sgit_FTDC_UF_TCSuccess
Sgit_FTDC_UF_TCFail = _pyctp.Sgit_FTDC_UF_TCFail
Sgit_FTDC_UF_Cancel = _pyctp.Sgit_FTDC_UF_Cancel
Sgit_FTDC_AOID_OpenInvestor = _pyctp.Sgit_FTDC_AOID_OpenInvestor
Sgit_FTDC_AOID_ModifyIDCard = _pyctp.Sgit_FTDC_AOID_ModifyIDCard
Sgit_FTDC_AOID_ModifyNoIDCard = _pyctp.Sgit_FTDC_AOID_ModifyNoIDCard
Sgit_FTDC_AOID_ApplyTradingCode = _pyctp.Sgit_FTDC_AOID_ApplyTradingCode
Sgit_FTDC_AOID_CancelTradingCode = _pyctp.Sgit_FTDC_AOID_CancelTradingCode
Sgit_FTDC_AOID_CancelInvestor = _pyctp.Sgit_FTDC_AOID_CancelInvestor
Sgit_FTDC_AOID_FreezeAccount = _pyctp.Sgit_FTDC_AOID_FreezeAccount
Sgit_FTDC_AOID_ActiveFreezeAccount = _pyctp.Sgit_FTDC_AOID_ActiveFreezeAccount
Sgit_FTDC_ASID_NoComplete = _pyctp.Sgit_FTDC_ASID_NoComplete
Sgit_FTDC_ASID_Submited = _pyctp.Sgit_FTDC_ASID_Submited
Sgit_FTDC_ASID_Checked = _pyctp.Sgit_FTDC_ASID_Checked
Sgit_FTDC_ASID_Refused = _pyctp.Sgit_FTDC_ASID_Refused
Sgit_FTDC_ASID_Deleted = _pyctp.Sgit_FTDC_ASID_Deleted
Sgit_FTDC_UOASM_ByAPI = _pyctp.Sgit_FTDC_UOASM_ByAPI
Sgit_FTDC_UOASM_ByFile = _pyctp.Sgit_FTDC_UOASM_ByFile
Sgit_FTDC_EvM_ADD = _pyctp.Sgit_FTDC_EvM_ADD
Sgit_FTDC_EvM_UPDATE = _pyctp.Sgit_FTDC_EvM_UPDATE
Sgit_FTDC_EvM_DELETE = _pyctp.Sgit_FTDC_EvM_DELETE
Sgit_FTDC_EvM_CHECK = _pyctp.Sgit_FTDC_EvM_CHECK
Sgit_FTDC_EvM_COPY = _pyctp.Sgit_FTDC_EvM_COPY
Sgit_FTDC_EvM_CANCEL = _pyctp.Sgit_FTDC_EvM_CANCEL
Sgit_FTDC_EvM_Reverse = _pyctp.Sgit_FTDC_EvM_Reverse
Sgit_FTDC_UOAA_ASR = _pyctp.Sgit_FTDC_UOAA_ASR
Sgit_FTDC_UOAA_ASNR = _pyctp.Sgit_FTDC_UOAA_ASNR
Sgit_FTDC_UOAA_NSAR = _pyctp.Sgit_FTDC_UOAA_NSAR
Sgit_FTDC_UOAA_NSR = _pyctp.Sgit_FTDC_UOAA_NSR
Sgit_FTDC_EvM_InvestorGroupFlow = _pyctp.Sgit_FTDC_EvM_InvestorGroupFlow
Sgit_FTDC_EvM_InvestorRate = _pyctp.Sgit_FTDC_EvM_InvestorRate
Sgit_FTDC_EvM_InvestorCommRateModel = _pyctp.Sgit_FTDC_EvM_InvestorCommRateModel
Sgit_FTDC_CL_Zero = _pyctp.Sgit_FTDC_CL_Zero
Sgit_FTDC_CL_One = _pyctp.Sgit_FTDC_CL_One
Sgit_FTDC_CL_Two = _pyctp.Sgit_FTDC_CL_Two
Sgit_FTDC_CHS_Init = _pyctp.Sgit_FTDC_CHS_Init
Sgit_FTDC_CHS_Checking = _pyctp.Sgit_FTDC_CHS_Checking
Sgit_FTDC_CHS_Checked = _pyctp.Sgit_FTDC_CHS_Checked
Sgit_FTDC_CHS_Refuse = _pyctp.Sgit_FTDC_CHS_Refuse
Sgit_FTDC_CHS_Cancel = _pyctp.Sgit_FTDC_CHS_Cancel
Sgit_FTDC_CHU_Unused = _pyctp.Sgit_FTDC_CHU_Unused
Sgit_FTDC_CHU_Used = _pyctp.Sgit_FTDC_CHU_Used
Sgit_FTDC_CHU_Fail = _pyctp.Sgit_FTDC_CHU_Fail
Sgit_FTDC_BAO_ByAccProperty = _pyctp.Sgit_FTDC_BAO_ByAccProperty
Sgit_FTDC_BAO_ByFBTransfer = _pyctp.Sgit_FTDC_BAO_ByFBTransfer
Sgit_FTDC_MBTS_ByInstrument = _pyctp.Sgit_FTDC_MBTS_ByInstrument
Sgit_FTDC_MBTS_ByDayInsPrc = _pyctp.Sgit_FTDC_MBTS_ByDayInsPrc
Sgit_FTDC_MBTS_ByDayIns = _pyctp.Sgit_FTDC_MBTS_ByDayIns
Sgit_FTDC_OTP_NONE = _pyctp.Sgit_FTDC_OTP_NONE
Sgit_FTDC_OTP_TOTP = _pyctp.Sgit_FTDC_OTP_TOTP
Sgit_FTDC_OTPS_Unused = _pyctp.Sgit_FTDC_OTPS_Unused
Sgit_FTDC_OTPS_Used = _pyctp.Sgit_FTDC_OTPS_Used
Sgit_FTDC_OTPS_Disuse = _pyctp.Sgit_FTDC_OTPS_Disuse
Sgit_FTDC_BUT_Investor = _pyctp.Sgit_FTDC_BUT_Investor
Sgit_FTDC_BUT_BrokerUser = _pyctp.Sgit_FTDC_BUT_BrokerUser
Sgit_FTDC_FUTT_Commodity = _pyctp.Sgit_FTDC_FUTT_Commodity
Sgit_FTDC_FUTT_Financial = _pyctp.Sgit_FTDC_FUTT_Financial
Sgit_FTDC_FET_Restriction = _pyctp.Sgit_FTDC_FET_Restriction
Sgit_FTDC_FET_TodayRestriction = _pyctp.Sgit_FTDC_FET_TodayRestriction
Sgit_FTDC_FET_Transfer = _pyctp.Sgit_FTDC_FET_Transfer
Sgit_FTDC_FET_Credit = _pyctp.Sgit_FTDC_FET_Credit
Sgit_FTDC_FET_InvestorWithdrawAlm = _pyctp.Sgit_FTDC_FET_InvestorWithdrawAlm
Sgit_FTDC_FET_BankRestriction = _pyctp.Sgit_FTDC_FET_BankRestriction
Sgit_FTDC_FET_Accountregister = _pyctp.Sgit_FTDC_FET_Accountregister
Sgit_FTDC_FET_ExchangeFundIO = _pyctp.Sgit_FTDC_FET_ExchangeFundIO
Sgit_FTDC_FET_InvestorFundIO = _pyctp.Sgit_FTDC_FET_InvestorFundIO
Sgit_FTDC_AST_FBTransfer = _pyctp.Sgit_FTDC_AST_FBTransfer
Sgit_FTDC_AST_ManualEntry = _pyctp.Sgit_FTDC_AST_ManualEntry
Sgit_FTDC_CST_UnifyAccount = _pyctp.Sgit_FTDC_CST_UnifyAccount
Sgit_FTDC_CST_ManualEntry = _pyctp.Sgit_FTDC_CST_ManualEntry
Sgit_FTDC_UR_All = _pyctp.Sgit_FTDC_UR_All
Sgit_FTDC_UR_Single = _pyctp.Sgit_FTDC_UR_Single
Sgit_FTDC_BG_Investor = _pyctp.Sgit_FTDC_BG_Investor
Sgit_FTDC_BG_Group = _pyctp.Sgit_FTDC_BG_Group
Sgit_FTDC_TSSM_Instrument = _pyctp.Sgit_FTDC_TSSM_Instrument
Sgit_FTDC_TSSM_Product = _pyctp.Sgit_FTDC_TSSM_Product
Sgit_FTDC_TSSM_Exchange = _pyctp.Sgit_FTDC_TSSM_Exchange
Sgit_FTDC_RIR_All = _pyctp.Sgit_FTDC_RIR_All
Sgit_FTDC_RIR_Model = _pyctp.Sgit_FTDC_RIR_Model
Sgit_FTDC_RIR_Single = _pyctp.Sgit_FTDC_RIR_Single
Sgit_FTDC_SDS_Initialize = _pyctp.Sgit_FTDC_SDS_Initialize
Sgit_FTDC_SDS_Settlementing = _pyctp.Sgit_FTDC_SDS_Settlementing
Sgit_FTDC_SDS_Settlemented = _pyctp.Sgit_FTDC_SDS_Settlemented
Sgit_FTDC_TSRC_NORMAL = _pyctp.Sgit_FTDC_TSRC_NORMAL
Sgit_FTDC_TSRC_QUERY = _pyctp.Sgit_FTDC_TSRC_QUERY
Sgit_FTDC_FSM_Product = _pyctp.Sgit_FTDC_FSM_Product
Sgit_FTDC_FSM_Exchange = _pyctp.Sgit_FTDC_FSM_Exchange
Sgit_FTDC_FSM_All = _pyctp.Sgit_FTDC_FSM_All
Sgit_FTDC_BIR_Property = _pyctp.Sgit_FTDC_BIR_Property
Sgit_FTDC_BIR_All = _pyctp.Sgit_FTDC_BIR_All
Sgit_FTDC_PIR_All = _pyctp.Sgit_FTDC_PIR_All
Sgit_FTDC_PIR_Property = _pyctp.Sgit_FTDC_PIR_Property
Sgit_FTDC_PIR_Single = _pyctp.Sgit_FTDC_PIR_Single
Sgit_FTDC_FIS_NoCreate = _pyctp.Sgit_FTDC_FIS_NoCreate
Sgit_FTDC_FIS_Created = _pyctp.Sgit_FTDC_FIS_Created
Sgit_FTDC_FIS_Failed = _pyctp.Sgit_FTDC_FIS_Failed
Sgit_FTDC_FGS_FileTransmit = _pyctp.Sgit_FTDC_FGS_FileTransmit
Sgit_FTDC_FGS_FileGen = _pyctp.Sgit_FTDC_FGS_FileGen
Sgit_FTDC_SoM_Add = _pyctp.Sgit_FTDC_SoM_Add
Sgit_FTDC_SoM_Update = _pyctp.Sgit_FTDC_SoM_Update
Sgit_FTDC_SoM_Delete = _pyctp.Sgit_FTDC_SoM_Delete
Sgit_FTDC_SoM_Copy = _pyctp.Sgit_FTDC_SoM_Copy
Sgit_FTDC_SoM_AcTive = _pyctp.Sgit_FTDC_SoM_AcTive
Sgit_FTDC_SoM_CanCel = _pyctp.Sgit_FTDC_SoM_CanCel
Sgit_FTDC_SoM_ReSet = _pyctp.Sgit_FTDC_SoM_ReSet
Sgit_FTDC_SoT_UpdatePassword = _pyctp.Sgit_FTDC_SoT_UpdatePassword
Sgit_FTDC_SoT_UserDepartment = _pyctp.Sgit_FTDC_SoT_UserDepartment
Sgit_FTDC_SoT_RoleManager = _pyctp.Sgit_FTDC_SoT_RoleManager
Sgit_FTDC_SoT_RoleFunction = _pyctp.Sgit_FTDC_SoT_RoleFunction
Sgit_FTDC_SoT_BaseParam = _pyctp.Sgit_FTDC_SoT_BaseParam
Sgit_FTDC_SoT_SetUserID = _pyctp.Sgit_FTDC_SoT_SetUserID
Sgit_FTDC_SoT_SetUserRole = _pyctp.Sgit_FTDC_SoT_SetUserRole
Sgit_FTDC_SoT_UserIpRestriction = _pyctp.Sgit_FTDC_SoT_UserIpRestriction
Sgit_FTDC_SoT_DepartmentManager = _pyctp.Sgit_FTDC_SoT_DepartmentManager
Sgit_FTDC_SoT_DepartmentCopy = _pyctp.Sgit_FTDC_SoT_DepartmentCopy
Sgit_FTDC_SoT_Tradingcode = _pyctp.Sgit_FTDC_SoT_Tradingcode
Sgit_FTDC_SoT_InvestorStatus = _pyctp.Sgit_FTDC_SoT_InvestorStatus
Sgit_FTDC_SoT_InvestorAuthority = _pyctp.Sgit_FTDC_SoT_InvestorAuthority
Sgit_FTDC_SoT_PropertySet = _pyctp.Sgit_FTDC_SoT_PropertySet
Sgit_FTDC_SoT_ReSetInvestorPasswd = _pyctp.Sgit_FTDC_SoT_ReSetInvestorPasswd
Sgit_FTDC_SoT_InvestorPersonalityInfo = _pyctp.Sgit_FTDC_SoT_InvestorPersonalityInfo
Sgit_FTDC_CSRCQ_Current = _pyctp.Sgit_FTDC_CSRCQ_Current
Sgit_FTDC_CSRCQ_History = _pyctp.Sgit_FTDC_CSRCQ_History
Sgit_FTDC_FRS_Normal = _pyctp.Sgit_FTDC_FRS_Normal
Sgit_FTDC_FRS_Freeze = _pyctp.Sgit_FTDC_FRS_Freeze
Sgit_FTDC_STST_Standard = _pyctp.Sgit_FTDC_STST_Standard
Sgit_FTDC_STST_NonStandard = _pyctp.Sgit_FTDC_STST_NonStandard
Sgit_FTDC_RPT_Freeze = _pyctp.Sgit_FTDC_RPT_Freeze
Sgit_FTDC_RPT_FreezeActive = _pyctp.Sgit_FTDC_RPT_FreezeActive
Sgit_FTDC_AMLDS_Normal = _pyctp.Sgit_FTDC_AMLDS_Normal
Sgit_FTDC_AMLDS_Deleted = _pyctp.Sgit_FTDC_AMLDS_Deleted
Sgit_FTDC_AMLCHS_Init = _pyctp.Sgit_FTDC_AMLCHS_Init
Sgit_FTDC_AMLCHS_Checking = _pyctp.Sgit_FTDC_AMLCHS_Checking
Sgit_FTDC_AMLCHS_Checked = _pyctp.Sgit_FTDC_AMLCHS_Checked
Sgit_FTDC_AMLCHS_RefuseReport = _pyctp.Sgit_FTDC_AMLCHS_RefuseReport
Sgit_FTDC_AMLDT_DrawDay = _pyctp.Sgit_FTDC_AMLDT_DrawDay
Sgit_FTDC_AMLDT_TouchDay = _pyctp.Sgit_FTDC_AMLDT_TouchDay
Sgit_FTDC_AMLCL_CheckLevel0 = _pyctp.Sgit_FTDC_AMLCL_CheckLevel0
Sgit_FTDC_AMLCL_CheckLevel1 = _pyctp.Sgit_FTDC_AMLCL_CheckLevel1
Sgit_FTDC_AMLCL_CheckLevel2 = _pyctp.Sgit_FTDC_AMLCL_CheckLevel2
Sgit_FTDC_AMLCL_CheckLevel3 = _pyctp.Sgit_FTDC_AMLCL_CheckLevel3
Sgit_FTDC_EFT_CSV = _pyctp.Sgit_FTDC_EFT_CSV
Sgit_FTDC_EFT_EXCEL = _pyctp.Sgit_FTDC_EFT_EXCEL
Sgit_FTDC_EFT_DBF = _pyctp.Sgit_FTDC_EFT_DBF
Sgit_FTDC_SMT_Before = _pyctp.Sgit_FTDC_SMT_Before
Sgit_FTDC_SMT_Settlement = _pyctp.Sgit_FTDC_SMT_Settlement
Sgit_FTDC_SMT_After = _pyctp.Sgit_FTDC_SMT_After
Sgit_FTDC_SMT_Settlemented = _pyctp.Sgit_FTDC_SMT_Settlemented
Sgit_FTDC_SML_Must = _pyctp.Sgit_FTDC_SML_Must
Sgit_FTDC_SML_Alarm = _pyctp.Sgit_FTDC_SML_Alarm
Sgit_FTDC_SML_Prompt = _pyctp.Sgit_FTDC_SML_Prompt
Sgit_FTDC_SML_Ignore = _pyctp.Sgit_FTDC_SML_Ignore
Sgit_FTDC_SMG_Exhcange = _pyctp.Sgit_FTDC_SMG_Exhcange
Sgit_FTDC_SMG_ASP = _pyctp.Sgit_FTDC_SMG_ASP
Sgit_FTDC_SMG_CSRC = _pyctp.Sgit_FTDC_SMG_CSRC
Sgit_FTDC_LUT_Repeatable = _pyctp.Sgit_FTDC_LUT_Repeatable
Sgit_FTDC_LUT_Unrepeatable = _pyctp.Sgit_FTDC_LUT_Unrepeatable
Sgit_FTDC_DAR_Settle = _pyctp.Sgit_FTDC_DAR_Settle
Sgit_FTDC_DAR_Exchange = _pyctp.Sgit_FTDC_DAR_Exchange
Sgit_FTDC_DAR_CSRC = _pyctp.Sgit_FTDC_DAR_CSRC
class CSgitFtdcDisseminationField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcDisseminationField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcDisseminationField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["SequenceSeries"] = _pyctp.CSgitFtdcDisseminationField_SequenceSeries_set
    __swig_getmethods__["SequenceSeries"] = _pyctp.CSgitFtdcDisseminationField_SequenceSeries_get
    if _newclass:
        SequenceSeries = _swig_property(_pyctp.CSgitFtdcDisseminationField_SequenceSeries_get, _pyctp.CSgitFtdcDisseminationField_SequenceSeries_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CSgitFtdcDisseminationField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CSgitFtdcDisseminationField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CSgitFtdcDisseminationField_SequenceNo_get, _pyctp.CSgitFtdcDisseminationField_SequenceNo_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcDisseminationField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcDisseminationField
    __del__ = lambda self: None
CSgitFtdcDisseminationField_swigregister = _pyctp.CSgitFtdcDisseminationField_swigregister
CSgitFtdcDisseminationField_swigregister(CSgitFtdcDisseminationField)

class CSgitFtdcReqUserLoginField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcReqUserLoginField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcReqUserLoginField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcReqUserLoginField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcReqUserLoginField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcReqUserLoginField_TradingDay_get, _pyctp.CSgitFtdcReqUserLoginField_TradingDay_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcReqUserLoginField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcReqUserLoginField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcReqUserLoginField_BrokerID_get, _pyctp.CSgitFtdcReqUserLoginField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcReqUserLoginField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcReqUserLoginField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcReqUserLoginField_UserID_get, _pyctp.CSgitFtdcReqUserLoginField_UserID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcReqUserLoginField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcReqUserLoginField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcReqUserLoginField_Password_get, _pyctp.CSgitFtdcReqUserLoginField_Password_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CSgitFtdcReqUserLoginField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CSgitFtdcReqUserLoginField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CSgitFtdcReqUserLoginField_UserProductInfo_get, _pyctp.CSgitFtdcReqUserLoginField_UserProductInfo_set)
    __swig_setmethods__["InterfaceProductInfo"] = _pyctp.CSgitFtdcReqUserLoginField_InterfaceProductInfo_set
    __swig_getmethods__["InterfaceProductInfo"] = _pyctp.CSgitFtdcReqUserLoginField_InterfaceProductInfo_get
    if _newclass:
        InterfaceProductInfo = _swig_property(_pyctp.CSgitFtdcReqUserLoginField_InterfaceProductInfo_get, _pyctp.CSgitFtdcReqUserLoginField_InterfaceProductInfo_set)
    __swig_setmethods__["ProtocolInfo"] = _pyctp.CSgitFtdcReqUserLoginField_ProtocolInfo_set
    __swig_getmethods__["ProtocolInfo"] = _pyctp.CSgitFtdcReqUserLoginField_ProtocolInfo_get
    if _newclass:
        ProtocolInfo = _swig_property(_pyctp.CSgitFtdcReqUserLoginField_ProtocolInfo_get, _pyctp.CSgitFtdcReqUserLoginField_ProtocolInfo_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CSgitFtdcReqUserLoginField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CSgitFtdcReqUserLoginField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CSgitFtdcReqUserLoginField_MacAddress_get, _pyctp.CSgitFtdcReqUserLoginField_MacAddress_set)
    __swig_setmethods__["OneTimePassword"] = _pyctp.CSgitFtdcReqUserLoginField_OneTimePassword_set
    __swig_getmethods__["OneTimePassword"] = _pyctp.CSgitFtdcReqUserLoginField_OneTimePassword_get
    if _newclass:
        OneTimePassword = _swig_property(_pyctp.CSgitFtdcReqUserLoginField_OneTimePassword_get, _pyctp.CSgitFtdcReqUserLoginField_OneTimePassword_set)
    __swig_setmethods__["ClientIPAddress"] = _pyctp.CSgitFtdcReqUserLoginField_ClientIPAddress_set
    __swig_getmethods__["ClientIPAddress"] = _pyctp.CSgitFtdcReqUserLoginField_ClientIPAddress_get
    if _newclass:
        ClientIPAddress = _swig_property(_pyctp.CSgitFtdcReqUserLoginField_ClientIPAddress_get, _pyctp.CSgitFtdcReqUserLoginField_ClientIPAddress_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcReqUserLoginField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcReqUserLoginField
    __del__ = lambda self: None
CSgitFtdcReqUserLoginField_swigregister = _pyctp.CSgitFtdcReqUserLoginField_swigregister
CSgitFtdcReqUserLoginField_swigregister(CSgitFtdcReqUserLoginField)

class CSgitFtdcRspUserLoginField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcRspUserLoginField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcRspUserLoginField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcRspUserLoginField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcRspUserLoginField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcRspUserLoginField_TradingDay_get, _pyctp.CSgitFtdcRspUserLoginField_TradingDay_set)
    __swig_setmethods__["LoginTime"] = _pyctp.CSgitFtdcRspUserLoginField_LoginTime_set
    __swig_getmethods__["LoginTime"] = _pyctp.CSgitFtdcRspUserLoginField_LoginTime_get
    if _newclass:
        LoginTime = _swig_property(_pyctp.CSgitFtdcRspUserLoginField_LoginTime_get, _pyctp.CSgitFtdcRspUserLoginField_LoginTime_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcRspUserLoginField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcRspUserLoginField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcRspUserLoginField_BrokerID_get, _pyctp.CSgitFtdcRspUserLoginField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcRspUserLoginField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcRspUserLoginField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcRspUserLoginField_UserID_get, _pyctp.CSgitFtdcRspUserLoginField_UserID_set)
    __swig_setmethods__["SystemName"] = _pyctp.CSgitFtdcRspUserLoginField_SystemName_set
    __swig_getmethods__["SystemName"] = _pyctp.CSgitFtdcRspUserLoginField_SystemName_get
    if _newclass:
        SystemName = _swig_property(_pyctp.CSgitFtdcRspUserLoginField_SystemName_get, _pyctp.CSgitFtdcRspUserLoginField_SystemName_set)
    __swig_setmethods__["FrontID"] = _pyctp.CSgitFtdcRspUserLoginField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CSgitFtdcRspUserLoginField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CSgitFtdcRspUserLoginField_FrontID_get, _pyctp.CSgitFtdcRspUserLoginField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcRspUserLoginField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcRspUserLoginField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcRspUserLoginField_SessionID_get, _pyctp.CSgitFtdcRspUserLoginField_SessionID_set)
    __swig_setmethods__["MaxOrderRef"] = _pyctp.CSgitFtdcRspUserLoginField_MaxOrderRef_set
    __swig_getmethods__["MaxOrderRef"] = _pyctp.CSgitFtdcRspUserLoginField_MaxOrderRef_get
    if _newclass:
        MaxOrderRef = _swig_property(_pyctp.CSgitFtdcRspUserLoginField_MaxOrderRef_get, _pyctp.CSgitFtdcRspUserLoginField_MaxOrderRef_set)
    __swig_setmethods__["SHFETime"] = _pyctp.CSgitFtdcRspUserLoginField_SHFETime_set
    __swig_getmethods__["SHFETime"] = _pyctp.CSgitFtdcRspUserLoginField_SHFETime_get
    if _newclass:
        SHFETime = _swig_property(_pyctp.CSgitFtdcRspUserLoginField_SHFETime_get, _pyctp.CSgitFtdcRspUserLoginField_SHFETime_set)
    __swig_setmethods__["DCETime"] = _pyctp.CSgitFtdcRspUserLoginField_DCETime_set
    __swig_getmethods__["DCETime"] = _pyctp.CSgitFtdcRspUserLoginField_DCETime_get
    if _newclass:
        DCETime = _swig_property(_pyctp.CSgitFtdcRspUserLoginField_DCETime_get, _pyctp.CSgitFtdcRspUserLoginField_DCETime_set)
    __swig_setmethods__["CZCETime"] = _pyctp.CSgitFtdcRspUserLoginField_CZCETime_set
    __swig_getmethods__["CZCETime"] = _pyctp.CSgitFtdcRspUserLoginField_CZCETime_get
    if _newclass:
        CZCETime = _swig_property(_pyctp.CSgitFtdcRspUserLoginField_CZCETime_get, _pyctp.CSgitFtdcRspUserLoginField_CZCETime_set)
    __swig_setmethods__["FFEXTime"] = _pyctp.CSgitFtdcRspUserLoginField_FFEXTime_set
    __swig_getmethods__["FFEXTime"] = _pyctp.CSgitFtdcRspUserLoginField_FFEXTime_get
    if _newclass:
        FFEXTime = _swig_property(_pyctp.CSgitFtdcRspUserLoginField_FFEXTime_get, _pyctp.CSgitFtdcRspUserLoginField_FFEXTime_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcRspUserLoginField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcRspUserLoginField
    __del__ = lambda self: None
CSgitFtdcRspUserLoginField_swigregister = _pyctp.CSgitFtdcRspUserLoginField_swigregister
CSgitFtdcRspUserLoginField_swigregister(CSgitFtdcRspUserLoginField)

class CSgitFtdcUserLogoutField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcUserLogoutField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcUserLogoutField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcUserLogoutField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcUserLogoutField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcUserLogoutField_BrokerID_get, _pyctp.CSgitFtdcUserLogoutField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcUserLogoutField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcUserLogoutField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcUserLogoutField_UserID_get, _pyctp.CSgitFtdcUserLogoutField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcUserLogoutField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcUserLogoutField
    __del__ = lambda self: None
CSgitFtdcUserLogoutField_swigregister = _pyctp.CSgitFtdcUserLogoutField_swigregister
CSgitFtdcUserLogoutField_swigregister(CSgitFtdcUserLogoutField)

class CSgitFtdcForceUserLogoutField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcForceUserLogoutField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcForceUserLogoutField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcForceUserLogoutField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcForceUserLogoutField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcForceUserLogoutField_BrokerID_get, _pyctp.CSgitFtdcForceUserLogoutField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcForceUserLogoutField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcForceUserLogoutField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcForceUserLogoutField_UserID_get, _pyctp.CSgitFtdcForceUserLogoutField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcForceUserLogoutField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcForceUserLogoutField
    __del__ = lambda self: None
CSgitFtdcForceUserLogoutField_swigregister = _pyctp.CSgitFtdcForceUserLogoutField_swigregister
CSgitFtdcForceUserLogoutField_swigregister(CSgitFtdcForceUserLogoutField)

class CSgitFtdcReqAuthenticateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcReqAuthenticateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcReqAuthenticateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcReqAuthenticateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcReqAuthenticateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcReqAuthenticateField_BrokerID_get, _pyctp.CSgitFtdcReqAuthenticateField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcReqAuthenticateField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcReqAuthenticateField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcReqAuthenticateField_UserID_get, _pyctp.CSgitFtdcReqAuthenticateField_UserID_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CSgitFtdcReqAuthenticateField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CSgitFtdcReqAuthenticateField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CSgitFtdcReqAuthenticateField_UserProductInfo_get, _pyctp.CSgitFtdcReqAuthenticateField_UserProductInfo_set)
    __swig_setmethods__["AuthCode"] = _pyctp.CSgitFtdcReqAuthenticateField_AuthCode_set
    __swig_getmethods__["AuthCode"] = _pyctp.CSgitFtdcReqAuthenticateField_AuthCode_get
    if _newclass:
        AuthCode = _swig_property(_pyctp.CSgitFtdcReqAuthenticateField_AuthCode_get, _pyctp.CSgitFtdcReqAuthenticateField_AuthCode_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcReqAuthenticateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcReqAuthenticateField
    __del__ = lambda self: None
CSgitFtdcReqAuthenticateField_swigregister = _pyctp.CSgitFtdcReqAuthenticateField_swigregister
CSgitFtdcReqAuthenticateField_swigregister(CSgitFtdcReqAuthenticateField)

class CSgitFtdcRspAuthenticateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcRspAuthenticateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcRspAuthenticateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcRspAuthenticateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcRspAuthenticateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcRspAuthenticateField_BrokerID_get, _pyctp.CSgitFtdcRspAuthenticateField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcRspAuthenticateField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcRspAuthenticateField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcRspAuthenticateField_UserID_get, _pyctp.CSgitFtdcRspAuthenticateField_UserID_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CSgitFtdcRspAuthenticateField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CSgitFtdcRspAuthenticateField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CSgitFtdcRspAuthenticateField_UserProductInfo_get, _pyctp.CSgitFtdcRspAuthenticateField_UserProductInfo_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcRspAuthenticateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcRspAuthenticateField
    __del__ = lambda self: None
CSgitFtdcRspAuthenticateField_swigregister = _pyctp.CSgitFtdcRspAuthenticateField_swigregister
CSgitFtdcRspAuthenticateField_swigregister(CSgitFtdcRspAuthenticateField)

class CSgitFtdcAuthenticationInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcAuthenticationInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcAuthenticationInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcAuthenticationInfoField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcAuthenticationInfoField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcAuthenticationInfoField_BrokerID_get, _pyctp.CSgitFtdcAuthenticationInfoField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcAuthenticationInfoField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcAuthenticationInfoField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcAuthenticationInfoField_UserID_get, _pyctp.CSgitFtdcAuthenticationInfoField_UserID_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CSgitFtdcAuthenticationInfoField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CSgitFtdcAuthenticationInfoField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CSgitFtdcAuthenticationInfoField_UserProductInfo_get, _pyctp.CSgitFtdcAuthenticationInfoField_UserProductInfo_set)
    __swig_setmethods__["AuthInfo"] = _pyctp.CSgitFtdcAuthenticationInfoField_AuthInfo_set
    __swig_getmethods__["AuthInfo"] = _pyctp.CSgitFtdcAuthenticationInfoField_AuthInfo_get
    if _newclass:
        AuthInfo = _swig_property(_pyctp.CSgitFtdcAuthenticationInfoField_AuthInfo_get, _pyctp.CSgitFtdcAuthenticationInfoField_AuthInfo_set)
    __swig_setmethods__["IsResult"] = _pyctp.CSgitFtdcAuthenticationInfoField_IsResult_set
    __swig_getmethods__["IsResult"] = _pyctp.CSgitFtdcAuthenticationInfoField_IsResult_get
    if _newclass:
        IsResult = _swig_property(_pyctp.CSgitFtdcAuthenticationInfoField_IsResult_get, _pyctp.CSgitFtdcAuthenticationInfoField_IsResult_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcAuthenticationInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcAuthenticationInfoField
    __del__ = lambda self: None
CSgitFtdcAuthenticationInfoField_swigregister = _pyctp.CSgitFtdcAuthenticationInfoField_swigregister
CSgitFtdcAuthenticationInfoField_swigregister(CSgitFtdcAuthenticationInfoField)

class CSgitFtdcTransferHeaderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTransferHeaderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTransferHeaderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["Version"] = _pyctp.CSgitFtdcTransferHeaderField_Version_set
    __swig_getmethods__["Version"] = _pyctp.CSgitFtdcTransferHeaderField_Version_get
    if _newclass:
        Version = _swig_property(_pyctp.CSgitFtdcTransferHeaderField_Version_get, _pyctp.CSgitFtdcTransferHeaderField_Version_set)
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcTransferHeaderField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcTransferHeaderField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcTransferHeaderField_TradeCode_get, _pyctp.CSgitFtdcTransferHeaderField_TradeCode_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcTransferHeaderField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcTransferHeaderField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcTransferHeaderField_TradeDate_get, _pyctp.CSgitFtdcTransferHeaderField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcTransferHeaderField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcTransferHeaderField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcTransferHeaderField_TradeTime_get, _pyctp.CSgitFtdcTransferHeaderField_TradeTime_set)
    __swig_setmethods__["TradeSerial"] = _pyctp.CSgitFtdcTransferHeaderField_TradeSerial_set
    __swig_getmethods__["TradeSerial"] = _pyctp.CSgitFtdcTransferHeaderField_TradeSerial_get
    if _newclass:
        TradeSerial = _swig_property(_pyctp.CSgitFtdcTransferHeaderField_TradeSerial_get, _pyctp.CSgitFtdcTransferHeaderField_TradeSerial_set)
    __swig_setmethods__["FutureID"] = _pyctp.CSgitFtdcTransferHeaderField_FutureID_set
    __swig_getmethods__["FutureID"] = _pyctp.CSgitFtdcTransferHeaderField_FutureID_get
    if _newclass:
        FutureID = _swig_property(_pyctp.CSgitFtdcTransferHeaderField_FutureID_get, _pyctp.CSgitFtdcTransferHeaderField_FutureID_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcTransferHeaderField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcTransferHeaderField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcTransferHeaderField_BankID_get, _pyctp.CSgitFtdcTransferHeaderField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CSgitFtdcTransferHeaderField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CSgitFtdcTransferHeaderField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CSgitFtdcTransferHeaderField_BankBrchID_get, _pyctp.CSgitFtdcTransferHeaderField_BankBrchID_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcTransferHeaderField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcTransferHeaderField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcTransferHeaderField_OperNo_get, _pyctp.CSgitFtdcTransferHeaderField_OperNo_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcTransferHeaderField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcTransferHeaderField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcTransferHeaderField_DeviceID_get, _pyctp.CSgitFtdcTransferHeaderField_DeviceID_set)
    __swig_setmethods__["RecordNum"] = _pyctp.CSgitFtdcTransferHeaderField_RecordNum_set
    __swig_getmethods__["RecordNum"] = _pyctp.CSgitFtdcTransferHeaderField_RecordNum_get
    if _newclass:
        RecordNum = _swig_property(_pyctp.CSgitFtdcTransferHeaderField_RecordNum_get, _pyctp.CSgitFtdcTransferHeaderField_RecordNum_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcTransferHeaderField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcTransferHeaderField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcTransferHeaderField_SessionID_get, _pyctp.CSgitFtdcTransferHeaderField_SessionID_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcTransferHeaderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcTransferHeaderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcTransferHeaderField_RequestID_get, _pyctp.CSgitFtdcTransferHeaderField_RequestID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTransferHeaderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTransferHeaderField
    __del__ = lambda self: None
CSgitFtdcTransferHeaderField_swigregister = _pyctp.CSgitFtdcTransferHeaderField_swigregister
CSgitFtdcTransferHeaderField_swigregister(CSgitFtdcTransferHeaderField)

class CSgitFtdcTransferBankToFutureReqField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTransferBankToFutureReqField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTransferBankToFutureReqField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FutureAccount"] = _pyctp.CSgitFtdcTransferBankToFutureReqField_FutureAccount_set
    __swig_getmethods__["FutureAccount"] = _pyctp.CSgitFtdcTransferBankToFutureReqField_FutureAccount_get
    if _newclass:
        FutureAccount = _swig_property(_pyctp.CSgitFtdcTransferBankToFutureReqField_FutureAccount_get, _pyctp.CSgitFtdcTransferBankToFutureReqField_FutureAccount_set)
    __swig_setmethods__["FuturePwdFlag"] = _pyctp.CSgitFtdcTransferBankToFutureReqField_FuturePwdFlag_set
    __swig_getmethods__["FuturePwdFlag"] = _pyctp.CSgitFtdcTransferBankToFutureReqField_FuturePwdFlag_get
    if _newclass:
        FuturePwdFlag = _swig_property(_pyctp.CSgitFtdcTransferBankToFutureReqField_FuturePwdFlag_get, _pyctp.CSgitFtdcTransferBankToFutureReqField_FuturePwdFlag_set)
    __swig_setmethods__["FutureAccPwd"] = _pyctp.CSgitFtdcTransferBankToFutureReqField_FutureAccPwd_set
    __swig_getmethods__["FutureAccPwd"] = _pyctp.CSgitFtdcTransferBankToFutureReqField_FutureAccPwd_get
    if _newclass:
        FutureAccPwd = _swig_property(_pyctp.CSgitFtdcTransferBankToFutureReqField_FutureAccPwd_get, _pyctp.CSgitFtdcTransferBankToFutureReqField_FutureAccPwd_set)
    __swig_setmethods__["TradeAmt"] = _pyctp.CSgitFtdcTransferBankToFutureReqField_TradeAmt_set
    __swig_getmethods__["TradeAmt"] = _pyctp.CSgitFtdcTransferBankToFutureReqField_TradeAmt_get
    if _newclass:
        TradeAmt = _swig_property(_pyctp.CSgitFtdcTransferBankToFutureReqField_TradeAmt_get, _pyctp.CSgitFtdcTransferBankToFutureReqField_TradeAmt_set)
    __swig_setmethods__["CustFee"] = _pyctp.CSgitFtdcTransferBankToFutureReqField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CSgitFtdcTransferBankToFutureReqField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CSgitFtdcTransferBankToFutureReqField_CustFee_get, _pyctp.CSgitFtdcTransferBankToFutureReqField_CustFee_set)
    __swig_setmethods__["CurrencyCode"] = _pyctp.CSgitFtdcTransferBankToFutureReqField_CurrencyCode_set
    __swig_getmethods__["CurrencyCode"] = _pyctp.CSgitFtdcTransferBankToFutureReqField_CurrencyCode_get
    if _newclass:
        CurrencyCode = _swig_property(_pyctp.CSgitFtdcTransferBankToFutureReqField_CurrencyCode_get, _pyctp.CSgitFtdcTransferBankToFutureReqField_CurrencyCode_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTransferBankToFutureReqField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTransferBankToFutureReqField
    __del__ = lambda self: None
CSgitFtdcTransferBankToFutureReqField_swigregister = _pyctp.CSgitFtdcTransferBankToFutureReqField_swigregister
CSgitFtdcTransferBankToFutureReqField_swigregister(CSgitFtdcTransferBankToFutureReqField)

class CSgitFtdcTransferBankToFutureRspField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTransferBankToFutureRspField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTransferBankToFutureRspField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["RetCode"] = _pyctp.CSgitFtdcTransferBankToFutureRspField_RetCode_set
    __swig_getmethods__["RetCode"] = _pyctp.CSgitFtdcTransferBankToFutureRspField_RetCode_get
    if _newclass:
        RetCode = _swig_property(_pyctp.CSgitFtdcTransferBankToFutureRspField_RetCode_get, _pyctp.CSgitFtdcTransferBankToFutureRspField_RetCode_set)
    __swig_setmethods__["RetInfo"] = _pyctp.CSgitFtdcTransferBankToFutureRspField_RetInfo_set
    __swig_getmethods__["RetInfo"] = _pyctp.CSgitFtdcTransferBankToFutureRspField_RetInfo_get
    if _newclass:
        RetInfo = _swig_property(_pyctp.CSgitFtdcTransferBankToFutureRspField_RetInfo_get, _pyctp.CSgitFtdcTransferBankToFutureRspField_RetInfo_set)
    __swig_setmethods__["FutureAccount"] = _pyctp.CSgitFtdcTransferBankToFutureRspField_FutureAccount_set
    __swig_getmethods__["FutureAccount"] = _pyctp.CSgitFtdcTransferBankToFutureRspField_FutureAccount_get
    if _newclass:
        FutureAccount = _swig_property(_pyctp.CSgitFtdcTransferBankToFutureRspField_FutureAccount_get, _pyctp.CSgitFtdcTransferBankToFutureRspField_FutureAccount_set)
    __swig_setmethods__["TradeAmt"] = _pyctp.CSgitFtdcTransferBankToFutureRspField_TradeAmt_set
    __swig_getmethods__["TradeAmt"] = _pyctp.CSgitFtdcTransferBankToFutureRspField_TradeAmt_get
    if _newclass:
        TradeAmt = _swig_property(_pyctp.CSgitFtdcTransferBankToFutureRspField_TradeAmt_get, _pyctp.CSgitFtdcTransferBankToFutureRspField_TradeAmt_set)
    __swig_setmethods__["CustFee"] = _pyctp.CSgitFtdcTransferBankToFutureRspField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CSgitFtdcTransferBankToFutureRspField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CSgitFtdcTransferBankToFutureRspField_CustFee_get, _pyctp.CSgitFtdcTransferBankToFutureRspField_CustFee_set)
    __swig_setmethods__["CurrencyCode"] = _pyctp.CSgitFtdcTransferBankToFutureRspField_CurrencyCode_set
    __swig_getmethods__["CurrencyCode"] = _pyctp.CSgitFtdcTransferBankToFutureRspField_CurrencyCode_get
    if _newclass:
        CurrencyCode = _swig_property(_pyctp.CSgitFtdcTransferBankToFutureRspField_CurrencyCode_get, _pyctp.CSgitFtdcTransferBankToFutureRspField_CurrencyCode_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTransferBankToFutureRspField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTransferBankToFutureRspField
    __del__ = lambda self: None
CSgitFtdcTransferBankToFutureRspField_swigregister = _pyctp.CSgitFtdcTransferBankToFutureRspField_swigregister
CSgitFtdcTransferBankToFutureRspField_swigregister(CSgitFtdcTransferBankToFutureRspField)

class CSgitFtdcTransferFutureToBankReqField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTransferFutureToBankReqField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTransferFutureToBankReqField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FutureAccount"] = _pyctp.CSgitFtdcTransferFutureToBankReqField_FutureAccount_set
    __swig_getmethods__["FutureAccount"] = _pyctp.CSgitFtdcTransferFutureToBankReqField_FutureAccount_get
    if _newclass:
        FutureAccount = _swig_property(_pyctp.CSgitFtdcTransferFutureToBankReqField_FutureAccount_get, _pyctp.CSgitFtdcTransferFutureToBankReqField_FutureAccount_set)
    __swig_setmethods__["FuturePwdFlag"] = _pyctp.CSgitFtdcTransferFutureToBankReqField_FuturePwdFlag_set
    __swig_getmethods__["FuturePwdFlag"] = _pyctp.CSgitFtdcTransferFutureToBankReqField_FuturePwdFlag_get
    if _newclass:
        FuturePwdFlag = _swig_property(_pyctp.CSgitFtdcTransferFutureToBankReqField_FuturePwdFlag_get, _pyctp.CSgitFtdcTransferFutureToBankReqField_FuturePwdFlag_set)
    __swig_setmethods__["FutureAccPwd"] = _pyctp.CSgitFtdcTransferFutureToBankReqField_FutureAccPwd_set
    __swig_getmethods__["FutureAccPwd"] = _pyctp.CSgitFtdcTransferFutureToBankReqField_FutureAccPwd_get
    if _newclass:
        FutureAccPwd = _swig_property(_pyctp.CSgitFtdcTransferFutureToBankReqField_FutureAccPwd_get, _pyctp.CSgitFtdcTransferFutureToBankReqField_FutureAccPwd_set)
    __swig_setmethods__["TradeAmt"] = _pyctp.CSgitFtdcTransferFutureToBankReqField_TradeAmt_set
    __swig_getmethods__["TradeAmt"] = _pyctp.CSgitFtdcTransferFutureToBankReqField_TradeAmt_get
    if _newclass:
        TradeAmt = _swig_property(_pyctp.CSgitFtdcTransferFutureToBankReqField_TradeAmt_get, _pyctp.CSgitFtdcTransferFutureToBankReqField_TradeAmt_set)
    __swig_setmethods__["CustFee"] = _pyctp.CSgitFtdcTransferFutureToBankReqField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CSgitFtdcTransferFutureToBankReqField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CSgitFtdcTransferFutureToBankReqField_CustFee_get, _pyctp.CSgitFtdcTransferFutureToBankReqField_CustFee_set)
    __swig_setmethods__["CurrencyCode"] = _pyctp.CSgitFtdcTransferFutureToBankReqField_CurrencyCode_set
    __swig_getmethods__["CurrencyCode"] = _pyctp.CSgitFtdcTransferFutureToBankReqField_CurrencyCode_get
    if _newclass:
        CurrencyCode = _swig_property(_pyctp.CSgitFtdcTransferFutureToBankReqField_CurrencyCode_get, _pyctp.CSgitFtdcTransferFutureToBankReqField_CurrencyCode_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTransferFutureToBankReqField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTransferFutureToBankReqField
    __del__ = lambda self: None
CSgitFtdcTransferFutureToBankReqField_swigregister = _pyctp.CSgitFtdcTransferFutureToBankReqField_swigregister
CSgitFtdcTransferFutureToBankReqField_swigregister(CSgitFtdcTransferFutureToBankReqField)

class CSgitFtdcTransferFutureToBankRspField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTransferFutureToBankRspField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTransferFutureToBankRspField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["RetCode"] = _pyctp.CSgitFtdcTransferFutureToBankRspField_RetCode_set
    __swig_getmethods__["RetCode"] = _pyctp.CSgitFtdcTransferFutureToBankRspField_RetCode_get
    if _newclass:
        RetCode = _swig_property(_pyctp.CSgitFtdcTransferFutureToBankRspField_RetCode_get, _pyctp.CSgitFtdcTransferFutureToBankRspField_RetCode_set)
    __swig_setmethods__["RetInfo"] = _pyctp.CSgitFtdcTransferFutureToBankRspField_RetInfo_set
    __swig_getmethods__["RetInfo"] = _pyctp.CSgitFtdcTransferFutureToBankRspField_RetInfo_get
    if _newclass:
        RetInfo = _swig_property(_pyctp.CSgitFtdcTransferFutureToBankRspField_RetInfo_get, _pyctp.CSgitFtdcTransferFutureToBankRspField_RetInfo_set)
    __swig_setmethods__["FutureAccount"] = _pyctp.CSgitFtdcTransferFutureToBankRspField_FutureAccount_set
    __swig_getmethods__["FutureAccount"] = _pyctp.CSgitFtdcTransferFutureToBankRspField_FutureAccount_get
    if _newclass:
        FutureAccount = _swig_property(_pyctp.CSgitFtdcTransferFutureToBankRspField_FutureAccount_get, _pyctp.CSgitFtdcTransferFutureToBankRspField_FutureAccount_set)
    __swig_setmethods__["TradeAmt"] = _pyctp.CSgitFtdcTransferFutureToBankRspField_TradeAmt_set
    __swig_getmethods__["TradeAmt"] = _pyctp.CSgitFtdcTransferFutureToBankRspField_TradeAmt_get
    if _newclass:
        TradeAmt = _swig_property(_pyctp.CSgitFtdcTransferFutureToBankRspField_TradeAmt_get, _pyctp.CSgitFtdcTransferFutureToBankRspField_TradeAmt_set)
    __swig_setmethods__["CustFee"] = _pyctp.CSgitFtdcTransferFutureToBankRspField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CSgitFtdcTransferFutureToBankRspField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CSgitFtdcTransferFutureToBankRspField_CustFee_get, _pyctp.CSgitFtdcTransferFutureToBankRspField_CustFee_set)
    __swig_setmethods__["CurrencyCode"] = _pyctp.CSgitFtdcTransferFutureToBankRspField_CurrencyCode_set
    __swig_getmethods__["CurrencyCode"] = _pyctp.CSgitFtdcTransferFutureToBankRspField_CurrencyCode_get
    if _newclass:
        CurrencyCode = _swig_property(_pyctp.CSgitFtdcTransferFutureToBankRspField_CurrencyCode_get, _pyctp.CSgitFtdcTransferFutureToBankRspField_CurrencyCode_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTransferFutureToBankRspField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTransferFutureToBankRspField
    __del__ = lambda self: None
CSgitFtdcTransferFutureToBankRspField_swigregister = _pyctp.CSgitFtdcTransferFutureToBankRspField_swigregister
CSgitFtdcTransferFutureToBankRspField_swigregister(CSgitFtdcTransferFutureToBankRspField)

class CSgitFtdcTransferQryBankReqField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTransferQryBankReqField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTransferQryBankReqField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FutureAccount"] = _pyctp.CSgitFtdcTransferQryBankReqField_FutureAccount_set
    __swig_getmethods__["FutureAccount"] = _pyctp.CSgitFtdcTransferQryBankReqField_FutureAccount_get
    if _newclass:
        FutureAccount = _swig_property(_pyctp.CSgitFtdcTransferQryBankReqField_FutureAccount_get, _pyctp.CSgitFtdcTransferQryBankReqField_FutureAccount_set)
    __swig_setmethods__["FuturePwdFlag"] = _pyctp.CSgitFtdcTransferQryBankReqField_FuturePwdFlag_set
    __swig_getmethods__["FuturePwdFlag"] = _pyctp.CSgitFtdcTransferQryBankReqField_FuturePwdFlag_get
    if _newclass:
        FuturePwdFlag = _swig_property(_pyctp.CSgitFtdcTransferQryBankReqField_FuturePwdFlag_get, _pyctp.CSgitFtdcTransferQryBankReqField_FuturePwdFlag_set)
    __swig_setmethods__["FutureAccPwd"] = _pyctp.CSgitFtdcTransferQryBankReqField_FutureAccPwd_set
    __swig_getmethods__["FutureAccPwd"] = _pyctp.CSgitFtdcTransferQryBankReqField_FutureAccPwd_get
    if _newclass:
        FutureAccPwd = _swig_property(_pyctp.CSgitFtdcTransferQryBankReqField_FutureAccPwd_get, _pyctp.CSgitFtdcTransferQryBankReqField_FutureAccPwd_set)
    __swig_setmethods__["CurrencyCode"] = _pyctp.CSgitFtdcTransferQryBankReqField_CurrencyCode_set
    __swig_getmethods__["CurrencyCode"] = _pyctp.CSgitFtdcTransferQryBankReqField_CurrencyCode_get
    if _newclass:
        CurrencyCode = _swig_property(_pyctp.CSgitFtdcTransferQryBankReqField_CurrencyCode_get, _pyctp.CSgitFtdcTransferQryBankReqField_CurrencyCode_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTransferQryBankReqField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTransferQryBankReqField
    __del__ = lambda self: None
CSgitFtdcTransferQryBankReqField_swigregister = _pyctp.CSgitFtdcTransferQryBankReqField_swigregister
CSgitFtdcTransferQryBankReqField_swigregister(CSgitFtdcTransferQryBankReqField)

class CSgitFtdcTransferQryBankRspField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTransferQryBankRspField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTransferQryBankRspField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["RetCode"] = _pyctp.CSgitFtdcTransferQryBankRspField_RetCode_set
    __swig_getmethods__["RetCode"] = _pyctp.CSgitFtdcTransferQryBankRspField_RetCode_get
    if _newclass:
        RetCode = _swig_property(_pyctp.CSgitFtdcTransferQryBankRspField_RetCode_get, _pyctp.CSgitFtdcTransferQryBankRspField_RetCode_set)
    __swig_setmethods__["RetInfo"] = _pyctp.CSgitFtdcTransferQryBankRspField_RetInfo_set
    __swig_getmethods__["RetInfo"] = _pyctp.CSgitFtdcTransferQryBankRspField_RetInfo_get
    if _newclass:
        RetInfo = _swig_property(_pyctp.CSgitFtdcTransferQryBankRspField_RetInfo_get, _pyctp.CSgitFtdcTransferQryBankRspField_RetInfo_set)
    __swig_setmethods__["FutureAccount"] = _pyctp.CSgitFtdcTransferQryBankRspField_FutureAccount_set
    __swig_getmethods__["FutureAccount"] = _pyctp.CSgitFtdcTransferQryBankRspField_FutureAccount_get
    if _newclass:
        FutureAccount = _swig_property(_pyctp.CSgitFtdcTransferQryBankRspField_FutureAccount_get, _pyctp.CSgitFtdcTransferQryBankRspField_FutureAccount_set)
    __swig_setmethods__["TradeAmt"] = _pyctp.CSgitFtdcTransferQryBankRspField_TradeAmt_set
    __swig_getmethods__["TradeAmt"] = _pyctp.CSgitFtdcTransferQryBankRspField_TradeAmt_get
    if _newclass:
        TradeAmt = _swig_property(_pyctp.CSgitFtdcTransferQryBankRspField_TradeAmt_get, _pyctp.CSgitFtdcTransferQryBankRspField_TradeAmt_set)
    __swig_setmethods__["UseAmt"] = _pyctp.CSgitFtdcTransferQryBankRspField_UseAmt_set
    __swig_getmethods__["UseAmt"] = _pyctp.CSgitFtdcTransferQryBankRspField_UseAmt_get
    if _newclass:
        UseAmt = _swig_property(_pyctp.CSgitFtdcTransferQryBankRspField_UseAmt_get, _pyctp.CSgitFtdcTransferQryBankRspField_UseAmt_set)
    __swig_setmethods__["FetchAmt"] = _pyctp.CSgitFtdcTransferQryBankRspField_FetchAmt_set
    __swig_getmethods__["FetchAmt"] = _pyctp.CSgitFtdcTransferQryBankRspField_FetchAmt_get
    if _newclass:
        FetchAmt = _swig_property(_pyctp.CSgitFtdcTransferQryBankRspField_FetchAmt_get, _pyctp.CSgitFtdcTransferQryBankRspField_FetchAmt_set)
    __swig_setmethods__["CurrencyCode"] = _pyctp.CSgitFtdcTransferQryBankRspField_CurrencyCode_set
    __swig_getmethods__["CurrencyCode"] = _pyctp.CSgitFtdcTransferQryBankRspField_CurrencyCode_get
    if _newclass:
        CurrencyCode = _swig_property(_pyctp.CSgitFtdcTransferQryBankRspField_CurrencyCode_get, _pyctp.CSgitFtdcTransferQryBankRspField_CurrencyCode_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTransferQryBankRspField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTransferQryBankRspField
    __del__ = lambda self: None
CSgitFtdcTransferQryBankRspField_swigregister = _pyctp.CSgitFtdcTransferQryBankRspField_swigregister
CSgitFtdcTransferQryBankRspField_swigregister(CSgitFtdcTransferQryBankRspField)

class CSgitFtdcTransferQryDetailReqField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTransferQryDetailReqField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTransferQryDetailReqField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FutureAccount"] = _pyctp.CSgitFtdcTransferQryDetailReqField_FutureAccount_set
    __swig_getmethods__["FutureAccount"] = _pyctp.CSgitFtdcTransferQryDetailReqField_FutureAccount_get
    if _newclass:
        FutureAccount = _swig_property(_pyctp.CSgitFtdcTransferQryDetailReqField_FutureAccount_get, _pyctp.CSgitFtdcTransferQryDetailReqField_FutureAccount_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTransferQryDetailReqField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTransferQryDetailReqField
    __del__ = lambda self: None
CSgitFtdcTransferQryDetailReqField_swigregister = _pyctp.CSgitFtdcTransferQryDetailReqField_swigregister
CSgitFtdcTransferQryDetailReqField_swigregister(CSgitFtdcTransferQryDetailReqField)

class CSgitFtdcTransferQryDetailRspField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTransferQryDetailRspField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTransferQryDetailRspField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcTransferQryDetailRspField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcTransferQryDetailRspField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcTransferQryDetailRspField_TradeDate_get, _pyctp.CSgitFtdcTransferQryDetailRspField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcTransferQryDetailRspField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcTransferQryDetailRspField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcTransferQryDetailRspField_TradeTime_get, _pyctp.CSgitFtdcTransferQryDetailRspField_TradeTime_set)
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcTransferQryDetailRspField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcTransferQryDetailRspField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcTransferQryDetailRspField_TradeCode_get, _pyctp.CSgitFtdcTransferQryDetailRspField_TradeCode_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CSgitFtdcTransferQryDetailRspField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CSgitFtdcTransferQryDetailRspField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CSgitFtdcTransferQryDetailRspField_FutureSerial_get, _pyctp.CSgitFtdcTransferQryDetailRspField_FutureSerial_set)
    __swig_setmethods__["FutureID"] = _pyctp.CSgitFtdcTransferQryDetailRspField_FutureID_set
    __swig_getmethods__["FutureID"] = _pyctp.CSgitFtdcTransferQryDetailRspField_FutureID_get
    if _newclass:
        FutureID = _swig_property(_pyctp.CSgitFtdcTransferQryDetailRspField_FutureID_get, _pyctp.CSgitFtdcTransferQryDetailRspField_FutureID_set)
    __swig_setmethods__["FutureAccount"] = _pyctp.CSgitFtdcTransferQryDetailRspField_FutureAccount_set
    __swig_getmethods__["FutureAccount"] = _pyctp.CSgitFtdcTransferQryDetailRspField_FutureAccount_get
    if _newclass:
        FutureAccount = _swig_property(_pyctp.CSgitFtdcTransferQryDetailRspField_FutureAccount_get, _pyctp.CSgitFtdcTransferQryDetailRspField_FutureAccount_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcTransferQryDetailRspField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcTransferQryDetailRspField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcTransferQryDetailRspField_BankSerial_get, _pyctp.CSgitFtdcTransferQryDetailRspField_BankSerial_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcTransferQryDetailRspField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcTransferQryDetailRspField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcTransferQryDetailRspField_BankID_get, _pyctp.CSgitFtdcTransferQryDetailRspField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CSgitFtdcTransferQryDetailRspField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CSgitFtdcTransferQryDetailRspField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CSgitFtdcTransferQryDetailRspField_BankBrchID_get, _pyctp.CSgitFtdcTransferQryDetailRspField_BankBrchID_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcTransferQryDetailRspField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcTransferQryDetailRspField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcTransferQryDetailRspField_BankAccount_get, _pyctp.CSgitFtdcTransferQryDetailRspField_BankAccount_set)
    __swig_setmethods__["CertCode"] = _pyctp.CSgitFtdcTransferQryDetailRspField_CertCode_set
    __swig_getmethods__["CertCode"] = _pyctp.CSgitFtdcTransferQryDetailRspField_CertCode_get
    if _newclass:
        CertCode = _swig_property(_pyctp.CSgitFtdcTransferQryDetailRspField_CertCode_get, _pyctp.CSgitFtdcTransferQryDetailRspField_CertCode_set)
    __swig_setmethods__["CurrencyCode"] = _pyctp.CSgitFtdcTransferQryDetailRspField_CurrencyCode_set
    __swig_getmethods__["CurrencyCode"] = _pyctp.CSgitFtdcTransferQryDetailRspField_CurrencyCode_get
    if _newclass:
        CurrencyCode = _swig_property(_pyctp.CSgitFtdcTransferQryDetailRspField_CurrencyCode_get, _pyctp.CSgitFtdcTransferQryDetailRspField_CurrencyCode_set)
    __swig_setmethods__["TxAmount"] = _pyctp.CSgitFtdcTransferQryDetailRspField_TxAmount_set
    __swig_getmethods__["TxAmount"] = _pyctp.CSgitFtdcTransferQryDetailRspField_TxAmount_get
    if _newclass:
        TxAmount = _swig_property(_pyctp.CSgitFtdcTransferQryDetailRspField_TxAmount_get, _pyctp.CSgitFtdcTransferQryDetailRspField_TxAmount_set)
    __swig_setmethods__["Flag"] = _pyctp.CSgitFtdcTransferQryDetailRspField_Flag_set
    __swig_getmethods__["Flag"] = _pyctp.CSgitFtdcTransferQryDetailRspField_Flag_get
    if _newclass:
        Flag = _swig_property(_pyctp.CSgitFtdcTransferQryDetailRspField_Flag_get, _pyctp.CSgitFtdcTransferQryDetailRspField_Flag_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTransferQryDetailRspField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTransferQryDetailRspField
    __del__ = lambda self: None
CSgitFtdcTransferQryDetailRspField_swigregister = _pyctp.CSgitFtdcTransferQryDetailRspField_swigregister
CSgitFtdcTransferQryDetailRspField_swigregister(CSgitFtdcTransferQryDetailRspField)

class CSgitFtdcRspInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcRspInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcRspInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcRspInfoField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcRspInfoField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcRspInfoField_ErrorID_get, _pyctp.CSgitFtdcRspInfoField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcRspInfoField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcRspInfoField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcRspInfoField_ErrorMsg_get, _pyctp.CSgitFtdcRspInfoField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcRspInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcRspInfoField
    __del__ = lambda self: None
CSgitFtdcRspInfoField_swigregister = _pyctp.CSgitFtdcRspInfoField_swigregister
CSgitFtdcRspInfoField_swigregister(CSgitFtdcRspInfoField)

class CSgitFtdcExchangeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcExchangeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcExchangeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcExchangeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcExchangeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcExchangeField_ExchangeID_get, _pyctp.CSgitFtdcExchangeField_ExchangeID_set)
    __swig_setmethods__["ExchangeName"] = _pyctp.CSgitFtdcExchangeField_ExchangeName_set
    __swig_getmethods__["ExchangeName"] = _pyctp.CSgitFtdcExchangeField_ExchangeName_get
    if _newclass:
        ExchangeName = _swig_property(_pyctp.CSgitFtdcExchangeField_ExchangeName_get, _pyctp.CSgitFtdcExchangeField_ExchangeName_set)
    __swig_setmethods__["ExchangeProperty"] = _pyctp.CSgitFtdcExchangeField_ExchangeProperty_set
    __swig_getmethods__["ExchangeProperty"] = _pyctp.CSgitFtdcExchangeField_ExchangeProperty_get
    if _newclass:
        ExchangeProperty = _swig_property(_pyctp.CSgitFtdcExchangeField_ExchangeProperty_get, _pyctp.CSgitFtdcExchangeField_ExchangeProperty_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcExchangeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcExchangeField
    __del__ = lambda self: None
CSgitFtdcExchangeField_swigregister = _pyctp.CSgitFtdcExchangeField_swigregister
CSgitFtdcExchangeField_swigregister(CSgitFtdcExchangeField)

class CSgitFtdcProductField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcProductField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcProductField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ProductID"] = _pyctp.CSgitFtdcProductField_ProductID_set
    __swig_getmethods__["ProductID"] = _pyctp.CSgitFtdcProductField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_pyctp.CSgitFtdcProductField_ProductID_get, _pyctp.CSgitFtdcProductField_ProductID_set)
    __swig_setmethods__["ProductName"] = _pyctp.CSgitFtdcProductField_ProductName_set
    __swig_getmethods__["ProductName"] = _pyctp.CSgitFtdcProductField_ProductName_get
    if _newclass:
        ProductName = _swig_property(_pyctp.CSgitFtdcProductField_ProductName_get, _pyctp.CSgitFtdcProductField_ProductName_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcProductField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcProductField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcProductField_ExchangeID_get, _pyctp.CSgitFtdcProductField_ExchangeID_set)
    __swig_setmethods__["ProductClass"] = _pyctp.CSgitFtdcProductField_ProductClass_set
    __swig_getmethods__["ProductClass"] = _pyctp.CSgitFtdcProductField_ProductClass_get
    if _newclass:
        ProductClass = _swig_property(_pyctp.CSgitFtdcProductField_ProductClass_get, _pyctp.CSgitFtdcProductField_ProductClass_set)
    __swig_setmethods__["VolumeMultiple"] = _pyctp.CSgitFtdcProductField_VolumeMultiple_set
    __swig_getmethods__["VolumeMultiple"] = _pyctp.CSgitFtdcProductField_VolumeMultiple_get
    if _newclass:
        VolumeMultiple = _swig_property(_pyctp.CSgitFtdcProductField_VolumeMultiple_get, _pyctp.CSgitFtdcProductField_VolumeMultiple_set)
    __swig_setmethods__["PriceTick"] = _pyctp.CSgitFtdcProductField_PriceTick_set
    __swig_getmethods__["PriceTick"] = _pyctp.CSgitFtdcProductField_PriceTick_get
    if _newclass:
        PriceTick = _swig_property(_pyctp.CSgitFtdcProductField_PriceTick_get, _pyctp.CSgitFtdcProductField_PriceTick_set)
    __swig_setmethods__["MaxMarketOrderVolume"] = _pyctp.CSgitFtdcProductField_MaxMarketOrderVolume_set
    __swig_getmethods__["MaxMarketOrderVolume"] = _pyctp.CSgitFtdcProductField_MaxMarketOrderVolume_get
    if _newclass:
        MaxMarketOrderVolume = _swig_property(_pyctp.CSgitFtdcProductField_MaxMarketOrderVolume_get, _pyctp.CSgitFtdcProductField_MaxMarketOrderVolume_set)
    __swig_setmethods__["MinMarketOrderVolume"] = _pyctp.CSgitFtdcProductField_MinMarketOrderVolume_set
    __swig_getmethods__["MinMarketOrderVolume"] = _pyctp.CSgitFtdcProductField_MinMarketOrderVolume_get
    if _newclass:
        MinMarketOrderVolume = _swig_property(_pyctp.CSgitFtdcProductField_MinMarketOrderVolume_get, _pyctp.CSgitFtdcProductField_MinMarketOrderVolume_set)
    __swig_setmethods__["MaxLimitOrderVolume"] = _pyctp.CSgitFtdcProductField_MaxLimitOrderVolume_set
    __swig_getmethods__["MaxLimitOrderVolume"] = _pyctp.CSgitFtdcProductField_MaxLimitOrderVolume_get
    if _newclass:
        MaxLimitOrderVolume = _swig_property(_pyctp.CSgitFtdcProductField_MaxLimitOrderVolume_get, _pyctp.CSgitFtdcProductField_MaxLimitOrderVolume_set)
    __swig_setmethods__["MinLimitOrderVolume"] = _pyctp.CSgitFtdcProductField_MinLimitOrderVolume_set
    __swig_getmethods__["MinLimitOrderVolume"] = _pyctp.CSgitFtdcProductField_MinLimitOrderVolume_get
    if _newclass:
        MinLimitOrderVolume = _swig_property(_pyctp.CSgitFtdcProductField_MinLimitOrderVolume_get, _pyctp.CSgitFtdcProductField_MinLimitOrderVolume_set)
    __swig_setmethods__["PositionType"] = _pyctp.CSgitFtdcProductField_PositionType_set
    __swig_getmethods__["PositionType"] = _pyctp.CSgitFtdcProductField_PositionType_get
    if _newclass:
        PositionType = _swig_property(_pyctp.CSgitFtdcProductField_PositionType_get, _pyctp.CSgitFtdcProductField_PositionType_set)
    __swig_setmethods__["PositionDateType"] = _pyctp.CSgitFtdcProductField_PositionDateType_set
    __swig_getmethods__["PositionDateType"] = _pyctp.CSgitFtdcProductField_PositionDateType_get
    if _newclass:
        PositionDateType = _swig_property(_pyctp.CSgitFtdcProductField_PositionDateType_get, _pyctp.CSgitFtdcProductField_PositionDateType_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcProductField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcProductField
    __del__ = lambda self: None
CSgitFtdcProductField_swigregister = _pyctp.CSgitFtdcProductField_swigregister
CSgitFtdcProductField_swigregister(CSgitFtdcProductField)

class CSgitFtdcInstrumentField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcInstrumentField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcInstrumentField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcInstrumentField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcInstrumentField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcInstrumentField_InstrumentID_get, _pyctp.CSgitFtdcInstrumentField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcInstrumentField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcInstrumentField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcInstrumentField_ExchangeID_get, _pyctp.CSgitFtdcInstrumentField_ExchangeID_set)
    __swig_setmethods__["InstrumentName"] = _pyctp.CSgitFtdcInstrumentField_InstrumentName_set
    __swig_getmethods__["InstrumentName"] = _pyctp.CSgitFtdcInstrumentField_InstrumentName_get
    if _newclass:
        InstrumentName = _swig_property(_pyctp.CSgitFtdcInstrumentField_InstrumentName_get, _pyctp.CSgitFtdcInstrumentField_InstrumentName_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcInstrumentField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcInstrumentField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CSgitFtdcInstrumentField_ExchangeInstID_get, _pyctp.CSgitFtdcInstrumentField_ExchangeInstID_set)
    __swig_setmethods__["ProductID"] = _pyctp.CSgitFtdcInstrumentField_ProductID_set
    __swig_getmethods__["ProductID"] = _pyctp.CSgitFtdcInstrumentField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_pyctp.CSgitFtdcInstrumentField_ProductID_get, _pyctp.CSgitFtdcInstrumentField_ProductID_set)
    __swig_setmethods__["ProductClass"] = _pyctp.CSgitFtdcInstrumentField_ProductClass_set
    __swig_getmethods__["ProductClass"] = _pyctp.CSgitFtdcInstrumentField_ProductClass_get
    if _newclass:
        ProductClass = _swig_property(_pyctp.CSgitFtdcInstrumentField_ProductClass_get, _pyctp.CSgitFtdcInstrumentField_ProductClass_set)
    __swig_setmethods__["DeliveryYear"] = _pyctp.CSgitFtdcInstrumentField_DeliveryYear_set
    __swig_getmethods__["DeliveryYear"] = _pyctp.CSgitFtdcInstrumentField_DeliveryYear_get
    if _newclass:
        DeliveryYear = _swig_property(_pyctp.CSgitFtdcInstrumentField_DeliveryYear_get, _pyctp.CSgitFtdcInstrumentField_DeliveryYear_set)
    __swig_setmethods__["DeliveryMonth"] = _pyctp.CSgitFtdcInstrumentField_DeliveryMonth_set
    __swig_getmethods__["DeliveryMonth"] = _pyctp.CSgitFtdcInstrumentField_DeliveryMonth_get
    if _newclass:
        DeliveryMonth = _swig_property(_pyctp.CSgitFtdcInstrumentField_DeliveryMonth_get, _pyctp.CSgitFtdcInstrumentField_DeliveryMonth_set)
    __swig_setmethods__["MaxMarketOrderVolume"] = _pyctp.CSgitFtdcInstrumentField_MaxMarketOrderVolume_set
    __swig_getmethods__["MaxMarketOrderVolume"] = _pyctp.CSgitFtdcInstrumentField_MaxMarketOrderVolume_get
    if _newclass:
        MaxMarketOrderVolume = _swig_property(_pyctp.CSgitFtdcInstrumentField_MaxMarketOrderVolume_get, _pyctp.CSgitFtdcInstrumentField_MaxMarketOrderVolume_set)
    __swig_setmethods__["MinMarketOrderVolume"] = _pyctp.CSgitFtdcInstrumentField_MinMarketOrderVolume_set
    __swig_getmethods__["MinMarketOrderVolume"] = _pyctp.CSgitFtdcInstrumentField_MinMarketOrderVolume_get
    if _newclass:
        MinMarketOrderVolume = _swig_property(_pyctp.CSgitFtdcInstrumentField_MinMarketOrderVolume_get, _pyctp.CSgitFtdcInstrumentField_MinMarketOrderVolume_set)
    __swig_setmethods__["MaxLimitOrderVolume"] = _pyctp.CSgitFtdcInstrumentField_MaxLimitOrderVolume_set
    __swig_getmethods__["MaxLimitOrderVolume"] = _pyctp.CSgitFtdcInstrumentField_MaxLimitOrderVolume_get
    if _newclass:
        MaxLimitOrderVolume = _swig_property(_pyctp.CSgitFtdcInstrumentField_MaxLimitOrderVolume_get, _pyctp.CSgitFtdcInstrumentField_MaxLimitOrderVolume_set)
    __swig_setmethods__["MinLimitOrderVolume"] = _pyctp.CSgitFtdcInstrumentField_MinLimitOrderVolume_set
    __swig_getmethods__["MinLimitOrderVolume"] = _pyctp.CSgitFtdcInstrumentField_MinLimitOrderVolume_get
    if _newclass:
        MinLimitOrderVolume = _swig_property(_pyctp.CSgitFtdcInstrumentField_MinLimitOrderVolume_get, _pyctp.CSgitFtdcInstrumentField_MinLimitOrderVolume_set)
    __swig_setmethods__["VolumeMultiple"] = _pyctp.CSgitFtdcInstrumentField_VolumeMultiple_set
    __swig_getmethods__["VolumeMultiple"] = _pyctp.CSgitFtdcInstrumentField_VolumeMultiple_get
    if _newclass:
        VolumeMultiple = _swig_property(_pyctp.CSgitFtdcInstrumentField_VolumeMultiple_get, _pyctp.CSgitFtdcInstrumentField_VolumeMultiple_set)
    __swig_setmethods__["PriceTick"] = _pyctp.CSgitFtdcInstrumentField_PriceTick_set
    __swig_getmethods__["PriceTick"] = _pyctp.CSgitFtdcInstrumentField_PriceTick_get
    if _newclass:
        PriceTick = _swig_property(_pyctp.CSgitFtdcInstrumentField_PriceTick_get, _pyctp.CSgitFtdcInstrumentField_PriceTick_set)
    __swig_setmethods__["CreateDate"] = _pyctp.CSgitFtdcInstrumentField_CreateDate_set
    __swig_getmethods__["CreateDate"] = _pyctp.CSgitFtdcInstrumentField_CreateDate_get
    if _newclass:
        CreateDate = _swig_property(_pyctp.CSgitFtdcInstrumentField_CreateDate_get, _pyctp.CSgitFtdcInstrumentField_CreateDate_set)
    __swig_setmethods__["OpenDate"] = _pyctp.CSgitFtdcInstrumentField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _pyctp.CSgitFtdcInstrumentField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_pyctp.CSgitFtdcInstrumentField_OpenDate_get, _pyctp.CSgitFtdcInstrumentField_OpenDate_set)
    __swig_setmethods__["ExpireDate"] = _pyctp.CSgitFtdcInstrumentField_ExpireDate_set
    __swig_getmethods__["ExpireDate"] = _pyctp.CSgitFtdcInstrumentField_ExpireDate_get
    if _newclass:
        ExpireDate = _swig_property(_pyctp.CSgitFtdcInstrumentField_ExpireDate_get, _pyctp.CSgitFtdcInstrumentField_ExpireDate_set)
    __swig_setmethods__["StartDelivDate"] = _pyctp.CSgitFtdcInstrumentField_StartDelivDate_set
    __swig_getmethods__["StartDelivDate"] = _pyctp.CSgitFtdcInstrumentField_StartDelivDate_get
    if _newclass:
        StartDelivDate = _swig_property(_pyctp.CSgitFtdcInstrumentField_StartDelivDate_get, _pyctp.CSgitFtdcInstrumentField_StartDelivDate_set)
    __swig_setmethods__["EndDelivDate"] = _pyctp.CSgitFtdcInstrumentField_EndDelivDate_set
    __swig_getmethods__["EndDelivDate"] = _pyctp.CSgitFtdcInstrumentField_EndDelivDate_get
    if _newclass:
        EndDelivDate = _swig_property(_pyctp.CSgitFtdcInstrumentField_EndDelivDate_get, _pyctp.CSgitFtdcInstrumentField_EndDelivDate_set)
    __swig_setmethods__["InstLifePhase"] = _pyctp.CSgitFtdcInstrumentField_InstLifePhase_set
    __swig_getmethods__["InstLifePhase"] = _pyctp.CSgitFtdcInstrumentField_InstLifePhase_get
    if _newclass:
        InstLifePhase = _swig_property(_pyctp.CSgitFtdcInstrumentField_InstLifePhase_get, _pyctp.CSgitFtdcInstrumentField_InstLifePhase_set)
    __swig_setmethods__["IsTrading"] = _pyctp.CSgitFtdcInstrumentField_IsTrading_set
    __swig_getmethods__["IsTrading"] = _pyctp.CSgitFtdcInstrumentField_IsTrading_get
    if _newclass:
        IsTrading = _swig_property(_pyctp.CSgitFtdcInstrumentField_IsTrading_get, _pyctp.CSgitFtdcInstrumentField_IsTrading_set)
    __swig_setmethods__["PositionType"] = _pyctp.CSgitFtdcInstrumentField_PositionType_set
    __swig_getmethods__["PositionType"] = _pyctp.CSgitFtdcInstrumentField_PositionType_get
    if _newclass:
        PositionType = _swig_property(_pyctp.CSgitFtdcInstrumentField_PositionType_get, _pyctp.CSgitFtdcInstrumentField_PositionType_set)
    __swig_setmethods__["PositionDateType"] = _pyctp.CSgitFtdcInstrumentField_PositionDateType_set
    __swig_getmethods__["PositionDateType"] = _pyctp.CSgitFtdcInstrumentField_PositionDateType_get
    if _newclass:
        PositionDateType = _swig_property(_pyctp.CSgitFtdcInstrumentField_PositionDateType_get, _pyctp.CSgitFtdcInstrumentField_PositionDateType_set)
    __swig_setmethods__["LongMarginRatio"] = _pyctp.CSgitFtdcInstrumentField_LongMarginRatio_set
    __swig_getmethods__["LongMarginRatio"] = _pyctp.CSgitFtdcInstrumentField_LongMarginRatio_get
    if _newclass:
        LongMarginRatio = _swig_property(_pyctp.CSgitFtdcInstrumentField_LongMarginRatio_get, _pyctp.CSgitFtdcInstrumentField_LongMarginRatio_set)
    __swig_setmethods__["ShortMarginRatio"] = _pyctp.CSgitFtdcInstrumentField_ShortMarginRatio_set
    __swig_getmethods__["ShortMarginRatio"] = _pyctp.CSgitFtdcInstrumentField_ShortMarginRatio_get
    if _newclass:
        ShortMarginRatio = _swig_property(_pyctp.CSgitFtdcInstrumentField_ShortMarginRatio_get, _pyctp.CSgitFtdcInstrumentField_ShortMarginRatio_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcInstrumentField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcInstrumentField
    __del__ = lambda self: None
CSgitFtdcInstrumentField_swigregister = _pyctp.CSgitFtdcInstrumentField_swigregister
CSgitFtdcInstrumentField_swigregister(CSgitFtdcInstrumentField)

class CSgitFtdcBrokerField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcBrokerField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcBrokerField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcBrokerField_BrokerID_get, _pyctp.CSgitFtdcBrokerField_BrokerID_set)
    __swig_setmethods__["BrokerAbbr"] = _pyctp.CSgitFtdcBrokerField_BrokerAbbr_set
    __swig_getmethods__["BrokerAbbr"] = _pyctp.CSgitFtdcBrokerField_BrokerAbbr_get
    if _newclass:
        BrokerAbbr = _swig_property(_pyctp.CSgitFtdcBrokerField_BrokerAbbr_get, _pyctp.CSgitFtdcBrokerField_BrokerAbbr_set)
    __swig_setmethods__["BrokerName"] = _pyctp.CSgitFtdcBrokerField_BrokerName_set
    __swig_getmethods__["BrokerName"] = _pyctp.CSgitFtdcBrokerField_BrokerName_get
    if _newclass:
        BrokerName = _swig_property(_pyctp.CSgitFtdcBrokerField_BrokerName_get, _pyctp.CSgitFtdcBrokerField_BrokerName_set)
    __swig_setmethods__["IsActive"] = _pyctp.CSgitFtdcBrokerField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CSgitFtdcBrokerField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CSgitFtdcBrokerField_IsActive_get, _pyctp.CSgitFtdcBrokerField_IsActive_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcBrokerField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcBrokerField
    __del__ = lambda self: None
CSgitFtdcBrokerField_swigregister = _pyctp.CSgitFtdcBrokerField_swigregister
CSgitFtdcBrokerField_swigregister(CSgitFtdcBrokerField)

class CSgitFtdcTraderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTraderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTraderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcTraderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcTraderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcTraderField_ExchangeID_get, _pyctp.CSgitFtdcTraderField_ExchangeID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcTraderField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcTraderField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcTraderField_TraderID_get, _pyctp.CSgitFtdcTraderField_TraderID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcTraderField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcTraderField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcTraderField_ParticipantID_get, _pyctp.CSgitFtdcTraderField_ParticipantID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcTraderField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcTraderField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcTraderField_Password_get, _pyctp.CSgitFtdcTraderField_Password_set)
    __swig_setmethods__["InstallCount"] = _pyctp.CSgitFtdcTraderField_InstallCount_set
    __swig_getmethods__["InstallCount"] = _pyctp.CSgitFtdcTraderField_InstallCount_get
    if _newclass:
        InstallCount = _swig_property(_pyctp.CSgitFtdcTraderField_InstallCount_get, _pyctp.CSgitFtdcTraderField_InstallCount_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcTraderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcTraderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcTraderField_BrokerID_get, _pyctp.CSgitFtdcTraderField_BrokerID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTraderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTraderField
    __del__ = lambda self: None
CSgitFtdcTraderField_swigregister = _pyctp.CSgitFtdcTraderField_swigregister
CSgitFtdcTraderField_swigregister(CSgitFtdcTraderField)

class CSgitFtdcInvestorField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcInvestorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcInvestorField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcInvestorField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcInvestorField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcInvestorField_InvestorID_get, _pyctp.CSgitFtdcInvestorField_InvestorID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcInvestorField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcInvestorField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcInvestorField_BrokerID_get, _pyctp.CSgitFtdcInvestorField_BrokerID_set)
    __swig_setmethods__["InvestorGroupID"] = _pyctp.CSgitFtdcInvestorField_InvestorGroupID_set
    __swig_getmethods__["InvestorGroupID"] = _pyctp.CSgitFtdcInvestorField_InvestorGroupID_get
    if _newclass:
        InvestorGroupID = _swig_property(_pyctp.CSgitFtdcInvestorField_InvestorGroupID_get, _pyctp.CSgitFtdcInvestorField_InvestorGroupID_set)
    __swig_setmethods__["InvestorName"] = _pyctp.CSgitFtdcInvestorField_InvestorName_set
    __swig_getmethods__["InvestorName"] = _pyctp.CSgitFtdcInvestorField_InvestorName_get
    if _newclass:
        InvestorName = _swig_property(_pyctp.CSgitFtdcInvestorField_InvestorName_get, _pyctp.CSgitFtdcInvestorField_InvestorName_set)
    __swig_setmethods__["IdentifiedCardType"] = _pyctp.CSgitFtdcInvestorField_IdentifiedCardType_set
    __swig_getmethods__["IdentifiedCardType"] = _pyctp.CSgitFtdcInvestorField_IdentifiedCardType_get
    if _newclass:
        IdentifiedCardType = _swig_property(_pyctp.CSgitFtdcInvestorField_IdentifiedCardType_get, _pyctp.CSgitFtdcInvestorField_IdentifiedCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcInvestorField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcInvestorField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcInvestorField_IdentifiedCardNo_get, _pyctp.CSgitFtdcInvestorField_IdentifiedCardNo_set)
    __swig_setmethods__["IsActive"] = _pyctp.CSgitFtdcInvestorField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CSgitFtdcInvestorField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CSgitFtdcInvestorField_IsActive_get, _pyctp.CSgitFtdcInvestorField_IsActive_set)
    __swig_setmethods__["Telephone"] = _pyctp.CSgitFtdcInvestorField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CSgitFtdcInvestorField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CSgitFtdcInvestorField_Telephone_get, _pyctp.CSgitFtdcInvestorField_Telephone_set)
    __swig_setmethods__["Address"] = _pyctp.CSgitFtdcInvestorField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CSgitFtdcInvestorField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CSgitFtdcInvestorField_Address_get, _pyctp.CSgitFtdcInvestorField_Address_set)
    __swig_setmethods__["OpenDate"] = _pyctp.CSgitFtdcInvestorField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _pyctp.CSgitFtdcInvestorField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_pyctp.CSgitFtdcInvestorField_OpenDate_get, _pyctp.CSgitFtdcInvestorField_OpenDate_set)
    __swig_setmethods__["Mobile"] = _pyctp.CSgitFtdcInvestorField_Mobile_set
    __swig_getmethods__["Mobile"] = _pyctp.CSgitFtdcInvestorField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_pyctp.CSgitFtdcInvestorField_Mobile_get, _pyctp.CSgitFtdcInvestorField_Mobile_set)
    __swig_setmethods__["CommModelID"] = _pyctp.CSgitFtdcInvestorField_CommModelID_set
    __swig_getmethods__["CommModelID"] = _pyctp.CSgitFtdcInvestorField_CommModelID_get
    if _newclass:
        CommModelID = _swig_property(_pyctp.CSgitFtdcInvestorField_CommModelID_get, _pyctp.CSgitFtdcInvestorField_CommModelID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcInvestorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcInvestorField
    __del__ = lambda self: None
CSgitFtdcInvestorField_swigregister = _pyctp.CSgitFtdcInvestorField_swigregister
CSgitFtdcInvestorField_swigregister(CSgitFtdcInvestorField)

class CSgitFtdcTradingCodeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTradingCodeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTradingCodeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcTradingCodeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcTradingCodeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcTradingCodeField_InvestorID_get, _pyctp.CSgitFtdcTradingCodeField_InvestorID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcTradingCodeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcTradingCodeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcTradingCodeField_BrokerID_get, _pyctp.CSgitFtdcTradingCodeField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcTradingCodeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcTradingCodeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcTradingCodeField_ExchangeID_get, _pyctp.CSgitFtdcTradingCodeField_ExchangeID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CSgitFtdcTradingCodeField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CSgitFtdcTradingCodeField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CSgitFtdcTradingCodeField_ClientID_get, _pyctp.CSgitFtdcTradingCodeField_ClientID_set)
    __swig_setmethods__["IsActive"] = _pyctp.CSgitFtdcTradingCodeField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CSgitFtdcTradingCodeField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CSgitFtdcTradingCodeField_IsActive_get, _pyctp.CSgitFtdcTradingCodeField_IsActive_set)
    __swig_setmethods__["ClientIDType"] = _pyctp.CSgitFtdcTradingCodeField_ClientIDType_set
    __swig_getmethods__["ClientIDType"] = _pyctp.CSgitFtdcTradingCodeField_ClientIDType_get
    if _newclass:
        ClientIDType = _swig_property(_pyctp.CSgitFtdcTradingCodeField_ClientIDType_get, _pyctp.CSgitFtdcTradingCodeField_ClientIDType_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTradingCodeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTradingCodeField
    __del__ = lambda self: None
CSgitFtdcTradingCodeField_swigregister = _pyctp.CSgitFtdcTradingCodeField_swigregister
CSgitFtdcTradingCodeField_swigregister(CSgitFtdcTradingCodeField)

class CSgitFtdcPartBrokerField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcPartBrokerField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcPartBrokerField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcPartBrokerField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcPartBrokerField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcPartBrokerField_BrokerID_get, _pyctp.CSgitFtdcPartBrokerField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcPartBrokerField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcPartBrokerField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcPartBrokerField_ExchangeID_get, _pyctp.CSgitFtdcPartBrokerField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcPartBrokerField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcPartBrokerField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcPartBrokerField_ParticipantID_get, _pyctp.CSgitFtdcPartBrokerField_ParticipantID_set)
    __swig_setmethods__["IsActive"] = _pyctp.CSgitFtdcPartBrokerField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CSgitFtdcPartBrokerField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CSgitFtdcPartBrokerField_IsActive_get, _pyctp.CSgitFtdcPartBrokerField_IsActive_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcPartBrokerField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcPartBrokerField
    __del__ = lambda self: None
CSgitFtdcPartBrokerField_swigregister = _pyctp.CSgitFtdcPartBrokerField_swigregister
CSgitFtdcPartBrokerField_swigregister(CSgitFtdcPartBrokerField)

class CSgitFtdcSuperUserField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcSuperUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcSuperUserField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcSuperUserField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcSuperUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcSuperUserField_UserID_get, _pyctp.CSgitFtdcSuperUserField_UserID_set)
    __swig_setmethods__["UserName"] = _pyctp.CSgitFtdcSuperUserField_UserName_set
    __swig_getmethods__["UserName"] = _pyctp.CSgitFtdcSuperUserField_UserName_get
    if _newclass:
        UserName = _swig_property(_pyctp.CSgitFtdcSuperUserField_UserName_get, _pyctp.CSgitFtdcSuperUserField_UserName_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcSuperUserField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcSuperUserField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcSuperUserField_Password_get, _pyctp.CSgitFtdcSuperUserField_Password_set)
    __swig_setmethods__["IsActive"] = _pyctp.CSgitFtdcSuperUserField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CSgitFtdcSuperUserField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CSgitFtdcSuperUserField_IsActive_get, _pyctp.CSgitFtdcSuperUserField_IsActive_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcSuperUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcSuperUserField
    __del__ = lambda self: None
CSgitFtdcSuperUserField_swigregister = _pyctp.CSgitFtdcSuperUserField_swigregister
CSgitFtdcSuperUserField_swigregister(CSgitFtdcSuperUserField)

class CSgitFtdcSuperUserFunctionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcSuperUserFunctionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcSuperUserFunctionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcSuperUserFunctionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcSuperUserFunctionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcSuperUserFunctionField_UserID_get, _pyctp.CSgitFtdcSuperUserFunctionField_UserID_set)
    __swig_setmethods__["FunctionCode"] = _pyctp.CSgitFtdcSuperUserFunctionField_FunctionCode_set
    __swig_getmethods__["FunctionCode"] = _pyctp.CSgitFtdcSuperUserFunctionField_FunctionCode_get
    if _newclass:
        FunctionCode = _swig_property(_pyctp.CSgitFtdcSuperUserFunctionField_FunctionCode_get, _pyctp.CSgitFtdcSuperUserFunctionField_FunctionCode_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcSuperUserFunctionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcSuperUserFunctionField
    __del__ = lambda self: None
CSgitFtdcSuperUserFunctionField_swigregister = _pyctp.CSgitFtdcSuperUserFunctionField_swigregister
CSgitFtdcSuperUserFunctionField_swigregister(CSgitFtdcSuperUserFunctionField)

class CSgitFtdcInvestorGroupField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcInvestorGroupField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcInvestorGroupField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcInvestorGroupField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcInvestorGroupField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcInvestorGroupField_BrokerID_get, _pyctp.CSgitFtdcInvestorGroupField_BrokerID_set)
    __swig_setmethods__["InvestorGroupID"] = _pyctp.CSgitFtdcInvestorGroupField_InvestorGroupID_set
    __swig_getmethods__["InvestorGroupID"] = _pyctp.CSgitFtdcInvestorGroupField_InvestorGroupID_get
    if _newclass:
        InvestorGroupID = _swig_property(_pyctp.CSgitFtdcInvestorGroupField_InvestorGroupID_get, _pyctp.CSgitFtdcInvestorGroupField_InvestorGroupID_set)
    __swig_setmethods__["InvestorGroupName"] = _pyctp.CSgitFtdcInvestorGroupField_InvestorGroupName_set
    __swig_getmethods__["InvestorGroupName"] = _pyctp.CSgitFtdcInvestorGroupField_InvestorGroupName_get
    if _newclass:
        InvestorGroupName = _swig_property(_pyctp.CSgitFtdcInvestorGroupField_InvestorGroupName_get, _pyctp.CSgitFtdcInvestorGroupField_InvestorGroupName_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcInvestorGroupField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcInvestorGroupField
    __del__ = lambda self: None
CSgitFtdcInvestorGroupField_swigregister = _pyctp.CSgitFtdcInvestorGroupField_swigregister
CSgitFtdcInvestorGroupField_swigregister(CSgitFtdcInvestorGroupField)

class CSgitFtdcTradingAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTradingAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTradingAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcTradingAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcTradingAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcTradingAccountField_BrokerID_get, _pyctp.CSgitFtdcTradingAccountField_BrokerID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcTradingAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcTradingAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcTradingAccountField_AccountID_get, _pyctp.CSgitFtdcTradingAccountField_AccountID_set)
    __swig_setmethods__["PreMortgage"] = _pyctp.CSgitFtdcTradingAccountField_PreMortgage_set
    __swig_getmethods__["PreMortgage"] = _pyctp.CSgitFtdcTradingAccountField_PreMortgage_get
    if _newclass:
        PreMortgage = _swig_property(_pyctp.CSgitFtdcTradingAccountField_PreMortgage_get, _pyctp.CSgitFtdcTradingAccountField_PreMortgage_set)
    __swig_setmethods__["PreCredit"] = _pyctp.CSgitFtdcTradingAccountField_PreCredit_set
    __swig_getmethods__["PreCredit"] = _pyctp.CSgitFtdcTradingAccountField_PreCredit_get
    if _newclass:
        PreCredit = _swig_property(_pyctp.CSgitFtdcTradingAccountField_PreCredit_get, _pyctp.CSgitFtdcTradingAccountField_PreCredit_set)
    __swig_setmethods__["PreDeposit"] = _pyctp.CSgitFtdcTradingAccountField_PreDeposit_set
    __swig_getmethods__["PreDeposit"] = _pyctp.CSgitFtdcTradingAccountField_PreDeposit_get
    if _newclass:
        PreDeposit = _swig_property(_pyctp.CSgitFtdcTradingAccountField_PreDeposit_get, _pyctp.CSgitFtdcTradingAccountField_PreDeposit_set)
    __swig_setmethods__["PreBalance"] = _pyctp.CSgitFtdcTradingAccountField_PreBalance_set
    __swig_getmethods__["PreBalance"] = _pyctp.CSgitFtdcTradingAccountField_PreBalance_get
    if _newclass:
        PreBalance = _swig_property(_pyctp.CSgitFtdcTradingAccountField_PreBalance_get, _pyctp.CSgitFtdcTradingAccountField_PreBalance_set)
    __swig_setmethods__["PreMargin"] = _pyctp.CSgitFtdcTradingAccountField_PreMargin_set
    __swig_getmethods__["PreMargin"] = _pyctp.CSgitFtdcTradingAccountField_PreMargin_get
    if _newclass:
        PreMargin = _swig_property(_pyctp.CSgitFtdcTradingAccountField_PreMargin_get, _pyctp.CSgitFtdcTradingAccountField_PreMargin_set)
    __swig_setmethods__["InterestBase"] = _pyctp.CSgitFtdcTradingAccountField_InterestBase_set
    __swig_getmethods__["InterestBase"] = _pyctp.CSgitFtdcTradingAccountField_InterestBase_get
    if _newclass:
        InterestBase = _swig_property(_pyctp.CSgitFtdcTradingAccountField_InterestBase_get, _pyctp.CSgitFtdcTradingAccountField_InterestBase_set)
    __swig_setmethods__["Interest"] = _pyctp.CSgitFtdcTradingAccountField_Interest_set
    __swig_getmethods__["Interest"] = _pyctp.CSgitFtdcTradingAccountField_Interest_get
    if _newclass:
        Interest = _swig_property(_pyctp.CSgitFtdcTradingAccountField_Interest_get, _pyctp.CSgitFtdcTradingAccountField_Interest_set)
    __swig_setmethods__["Deposit"] = _pyctp.CSgitFtdcTradingAccountField_Deposit_set
    __swig_getmethods__["Deposit"] = _pyctp.CSgitFtdcTradingAccountField_Deposit_get
    if _newclass:
        Deposit = _swig_property(_pyctp.CSgitFtdcTradingAccountField_Deposit_get, _pyctp.CSgitFtdcTradingAccountField_Deposit_set)
    __swig_setmethods__["Withdraw"] = _pyctp.CSgitFtdcTradingAccountField_Withdraw_set
    __swig_getmethods__["Withdraw"] = _pyctp.CSgitFtdcTradingAccountField_Withdraw_get
    if _newclass:
        Withdraw = _swig_property(_pyctp.CSgitFtdcTradingAccountField_Withdraw_get, _pyctp.CSgitFtdcTradingAccountField_Withdraw_set)
    __swig_setmethods__["FrozenMargin"] = _pyctp.CSgitFtdcTradingAccountField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _pyctp.CSgitFtdcTradingAccountField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_pyctp.CSgitFtdcTradingAccountField_FrozenMargin_get, _pyctp.CSgitFtdcTradingAccountField_FrozenMargin_set)
    __swig_setmethods__["FrozenCash"] = _pyctp.CSgitFtdcTradingAccountField_FrozenCash_set
    __swig_getmethods__["FrozenCash"] = _pyctp.CSgitFtdcTradingAccountField_FrozenCash_get
    if _newclass:
        FrozenCash = _swig_property(_pyctp.CSgitFtdcTradingAccountField_FrozenCash_get, _pyctp.CSgitFtdcTradingAccountField_FrozenCash_set)
    __swig_setmethods__["FrozenCommission"] = _pyctp.CSgitFtdcTradingAccountField_FrozenCommission_set
    __swig_getmethods__["FrozenCommission"] = _pyctp.CSgitFtdcTradingAccountField_FrozenCommission_get
    if _newclass:
        FrozenCommission = _swig_property(_pyctp.CSgitFtdcTradingAccountField_FrozenCommission_get, _pyctp.CSgitFtdcTradingAccountField_FrozenCommission_set)
    __swig_setmethods__["CurrMargin"] = _pyctp.CSgitFtdcTradingAccountField_CurrMargin_set
    __swig_getmethods__["CurrMargin"] = _pyctp.CSgitFtdcTradingAccountField_CurrMargin_get
    if _newclass:
        CurrMargin = _swig_property(_pyctp.CSgitFtdcTradingAccountField_CurrMargin_get, _pyctp.CSgitFtdcTradingAccountField_CurrMargin_set)
    __swig_setmethods__["CashIn"] = _pyctp.CSgitFtdcTradingAccountField_CashIn_set
    __swig_getmethods__["CashIn"] = _pyctp.CSgitFtdcTradingAccountField_CashIn_get
    if _newclass:
        CashIn = _swig_property(_pyctp.CSgitFtdcTradingAccountField_CashIn_get, _pyctp.CSgitFtdcTradingAccountField_CashIn_set)
    __swig_setmethods__["Commission"] = _pyctp.CSgitFtdcTradingAccountField_Commission_set
    __swig_getmethods__["Commission"] = _pyctp.CSgitFtdcTradingAccountField_Commission_get
    if _newclass:
        Commission = _swig_property(_pyctp.CSgitFtdcTradingAccountField_Commission_get, _pyctp.CSgitFtdcTradingAccountField_Commission_set)
    __swig_setmethods__["CloseProfit"] = _pyctp.CSgitFtdcTradingAccountField_CloseProfit_set
    __swig_getmethods__["CloseProfit"] = _pyctp.CSgitFtdcTradingAccountField_CloseProfit_get
    if _newclass:
        CloseProfit = _swig_property(_pyctp.CSgitFtdcTradingAccountField_CloseProfit_get, _pyctp.CSgitFtdcTradingAccountField_CloseProfit_set)
    __swig_setmethods__["PositionProfit"] = _pyctp.CSgitFtdcTradingAccountField_PositionProfit_set
    __swig_getmethods__["PositionProfit"] = _pyctp.CSgitFtdcTradingAccountField_PositionProfit_get
    if _newclass:
        PositionProfit = _swig_property(_pyctp.CSgitFtdcTradingAccountField_PositionProfit_get, _pyctp.CSgitFtdcTradingAccountField_PositionProfit_set)
    __swig_setmethods__["Balance"] = _pyctp.CSgitFtdcTradingAccountField_Balance_set
    __swig_getmethods__["Balance"] = _pyctp.CSgitFtdcTradingAccountField_Balance_get
    if _newclass:
        Balance = _swig_property(_pyctp.CSgitFtdcTradingAccountField_Balance_get, _pyctp.CSgitFtdcTradingAccountField_Balance_set)
    __swig_setmethods__["Available"] = _pyctp.CSgitFtdcTradingAccountField_Available_set
    __swig_getmethods__["Available"] = _pyctp.CSgitFtdcTradingAccountField_Available_get
    if _newclass:
        Available = _swig_property(_pyctp.CSgitFtdcTradingAccountField_Available_get, _pyctp.CSgitFtdcTradingAccountField_Available_set)
    __swig_setmethods__["WithdrawQuota"] = _pyctp.CSgitFtdcTradingAccountField_WithdrawQuota_set
    __swig_getmethods__["WithdrawQuota"] = _pyctp.CSgitFtdcTradingAccountField_WithdrawQuota_get
    if _newclass:
        WithdrawQuota = _swig_property(_pyctp.CSgitFtdcTradingAccountField_WithdrawQuota_get, _pyctp.CSgitFtdcTradingAccountField_WithdrawQuota_set)
    __swig_setmethods__["Reserve"] = _pyctp.CSgitFtdcTradingAccountField_Reserve_set
    __swig_getmethods__["Reserve"] = _pyctp.CSgitFtdcTradingAccountField_Reserve_get
    if _newclass:
        Reserve = _swig_property(_pyctp.CSgitFtdcTradingAccountField_Reserve_get, _pyctp.CSgitFtdcTradingAccountField_Reserve_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcTradingAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcTradingAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcTradingAccountField_TradingDay_get, _pyctp.CSgitFtdcTradingAccountField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CSgitFtdcTradingAccountField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CSgitFtdcTradingAccountField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CSgitFtdcTradingAccountField_SettlementID_get, _pyctp.CSgitFtdcTradingAccountField_SettlementID_set)
    __swig_setmethods__["Credit"] = _pyctp.CSgitFtdcTradingAccountField_Credit_set
    __swig_getmethods__["Credit"] = _pyctp.CSgitFtdcTradingAccountField_Credit_get
    if _newclass:
        Credit = _swig_property(_pyctp.CSgitFtdcTradingAccountField_Credit_get, _pyctp.CSgitFtdcTradingAccountField_Credit_set)
    __swig_setmethods__["Mortgage"] = _pyctp.CSgitFtdcTradingAccountField_Mortgage_set
    __swig_getmethods__["Mortgage"] = _pyctp.CSgitFtdcTradingAccountField_Mortgage_get
    if _newclass:
        Mortgage = _swig_property(_pyctp.CSgitFtdcTradingAccountField_Mortgage_get, _pyctp.CSgitFtdcTradingAccountField_Mortgage_set)
    __swig_setmethods__["ExchangeMargin"] = _pyctp.CSgitFtdcTradingAccountField_ExchangeMargin_set
    __swig_getmethods__["ExchangeMargin"] = _pyctp.CSgitFtdcTradingAccountField_ExchangeMargin_get
    if _newclass:
        ExchangeMargin = _swig_property(_pyctp.CSgitFtdcTradingAccountField_ExchangeMargin_get, _pyctp.CSgitFtdcTradingAccountField_ExchangeMargin_set)
    __swig_setmethods__["DeliveryMargin"] = _pyctp.CSgitFtdcTradingAccountField_DeliveryMargin_set
    __swig_getmethods__["DeliveryMargin"] = _pyctp.CSgitFtdcTradingAccountField_DeliveryMargin_get
    if _newclass:
        DeliveryMargin = _swig_property(_pyctp.CSgitFtdcTradingAccountField_DeliveryMargin_get, _pyctp.CSgitFtdcTradingAccountField_DeliveryMargin_set)
    __swig_setmethods__["ExchangeDeliveryMargin"] = _pyctp.CSgitFtdcTradingAccountField_ExchangeDeliveryMargin_set
    __swig_getmethods__["ExchangeDeliveryMargin"] = _pyctp.CSgitFtdcTradingAccountField_ExchangeDeliveryMargin_get
    if _newclass:
        ExchangeDeliveryMargin = _swig_property(_pyctp.CSgitFtdcTradingAccountField_ExchangeDeliveryMargin_get, _pyctp.CSgitFtdcTradingAccountField_ExchangeDeliveryMargin_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTradingAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTradingAccountField
    __del__ = lambda self: None
CSgitFtdcTradingAccountField_swigregister = _pyctp.CSgitFtdcTradingAccountField_swigregister
CSgitFtdcTradingAccountField_swigregister(CSgitFtdcTradingAccountField)

class CSgitFtdcInvestorPositionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcInvestorPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcInvestorPositionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcInvestorPositionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcInvestorPositionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_InstrumentID_get, _pyctp.CSgitFtdcInvestorPositionField_InstrumentID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcInvestorPositionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcInvestorPositionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_BrokerID_get, _pyctp.CSgitFtdcInvestorPositionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcInvestorPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcInvestorPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_InvestorID_get, _pyctp.CSgitFtdcInvestorPositionField_InvestorID_set)
    __swig_setmethods__["PosiDirection"] = _pyctp.CSgitFtdcInvestorPositionField_PosiDirection_set
    __swig_getmethods__["PosiDirection"] = _pyctp.CSgitFtdcInvestorPositionField_PosiDirection_get
    if _newclass:
        PosiDirection = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_PosiDirection_get, _pyctp.CSgitFtdcInvestorPositionField_PosiDirection_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CSgitFtdcInvestorPositionField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CSgitFtdcInvestorPositionField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_HedgeFlag_get, _pyctp.CSgitFtdcInvestorPositionField_HedgeFlag_set)
    __swig_setmethods__["PositionDate"] = _pyctp.CSgitFtdcInvestorPositionField_PositionDate_set
    __swig_getmethods__["PositionDate"] = _pyctp.CSgitFtdcInvestorPositionField_PositionDate_get
    if _newclass:
        PositionDate = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_PositionDate_get, _pyctp.CSgitFtdcInvestorPositionField_PositionDate_set)
    __swig_setmethods__["YdPosition"] = _pyctp.CSgitFtdcInvestorPositionField_YdPosition_set
    __swig_getmethods__["YdPosition"] = _pyctp.CSgitFtdcInvestorPositionField_YdPosition_get
    if _newclass:
        YdPosition = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_YdPosition_get, _pyctp.CSgitFtdcInvestorPositionField_YdPosition_set)
    __swig_setmethods__["Position"] = _pyctp.CSgitFtdcInvestorPositionField_Position_set
    __swig_getmethods__["Position"] = _pyctp.CSgitFtdcInvestorPositionField_Position_get
    if _newclass:
        Position = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_Position_get, _pyctp.CSgitFtdcInvestorPositionField_Position_set)
    __swig_setmethods__["LongFrozen"] = _pyctp.CSgitFtdcInvestorPositionField_LongFrozen_set
    __swig_getmethods__["LongFrozen"] = _pyctp.CSgitFtdcInvestorPositionField_LongFrozen_get
    if _newclass:
        LongFrozen = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_LongFrozen_get, _pyctp.CSgitFtdcInvestorPositionField_LongFrozen_set)
    __swig_setmethods__["ShortFrozen"] = _pyctp.CSgitFtdcInvestorPositionField_ShortFrozen_set
    __swig_getmethods__["ShortFrozen"] = _pyctp.CSgitFtdcInvestorPositionField_ShortFrozen_get
    if _newclass:
        ShortFrozen = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_ShortFrozen_get, _pyctp.CSgitFtdcInvestorPositionField_ShortFrozen_set)
    __swig_setmethods__["LongFrozenAmount"] = _pyctp.CSgitFtdcInvestorPositionField_LongFrozenAmount_set
    __swig_getmethods__["LongFrozenAmount"] = _pyctp.CSgitFtdcInvestorPositionField_LongFrozenAmount_get
    if _newclass:
        LongFrozenAmount = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_LongFrozenAmount_get, _pyctp.CSgitFtdcInvestorPositionField_LongFrozenAmount_set)
    __swig_setmethods__["ShortFrozenAmount"] = _pyctp.CSgitFtdcInvestorPositionField_ShortFrozenAmount_set
    __swig_getmethods__["ShortFrozenAmount"] = _pyctp.CSgitFtdcInvestorPositionField_ShortFrozenAmount_get
    if _newclass:
        ShortFrozenAmount = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_ShortFrozenAmount_get, _pyctp.CSgitFtdcInvestorPositionField_ShortFrozenAmount_set)
    __swig_setmethods__["OpenVolume"] = _pyctp.CSgitFtdcInvestorPositionField_OpenVolume_set
    __swig_getmethods__["OpenVolume"] = _pyctp.CSgitFtdcInvestorPositionField_OpenVolume_get
    if _newclass:
        OpenVolume = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_OpenVolume_get, _pyctp.CSgitFtdcInvestorPositionField_OpenVolume_set)
    __swig_setmethods__["CloseVolume"] = _pyctp.CSgitFtdcInvestorPositionField_CloseVolume_set
    __swig_getmethods__["CloseVolume"] = _pyctp.CSgitFtdcInvestorPositionField_CloseVolume_get
    if _newclass:
        CloseVolume = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_CloseVolume_get, _pyctp.CSgitFtdcInvestorPositionField_CloseVolume_set)
    __swig_setmethods__["OpenAmount"] = _pyctp.CSgitFtdcInvestorPositionField_OpenAmount_set
    __swig_getmethods__["OpenAmount"] = _pyctp.CSgitFtdcInvestorPositionField_OpenAmount_get
    if _newclass:
        OpenAmount = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_OpenAmount_get, _pyctp.CSgitFtdcInvestorPositionField_OpenAmount_set)
    __swig_setmethods__["CloseAmount"] = _pyctp.CSgitFtdcInvestorPositionField_CloseAmount_set
    __swig_getmethods__["CloseAmount"] = _pyctp.CSgitFtdcInvestorPositionField_CloseAmount_get
    if _newclass:
        CloseAmount = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_CloseAmount_get, _pyctp.CSgitFtdcInvestorPositionField_CloseAmount_set)
    __swig_setmethods__["PositionCost"] = _pyctp.CSgitFtdcInvestorPositionField_PositionCost_set
    __swig_getmethods__["PositionCost"] = _pyctp.CSgitFtdcInvestorPositionField_PositionCost_get
    if _newclass:
        PositionCost = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_PositionCost_get, _pyctp.CSgitFtdcInvestorPositionField_PositionCost_set)
    __swig_setmethods__["PreMargin"] = _pyctp.CSgitFtdcInvestorPositionField_PreMargin_set
    __swig_getmethods__["PreMargin"] = _pyctp.CSgitFtdcInvestorPositionField_PreMargin_get
    if _newclass:
        PreMargin = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_PreMargin_get, _pyctp.CSgitFtdcInvestorPositionField_PreMargin_set)
    __swig_setmethods__["UseMargin"] = _pyctp.CSgitFtdcInvestorPositionField_UseMargin_set
    __swig_getmethods__["UseMargin"] = _pyctp.CSgitFtdcInvestorPositionField_UseMargin_get
    if _newclass:
        UseMargin = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_UseMargin_get, _pyctp.CSgitFtdcInvestorPositionField_UseMargin_set)
    __swig_setmethods__["FrozenMargin"] = _pyctp.CSgitFtdcInvestorPositionField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _pyctp.CSgitFtdcInvestorPositionField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_FrozenMargin_get, _pyctp.CSgitFtdcInvestorPositionField_FrozenMargin_set)
    __swig_setmethods__["FrozenCash"] = _pyctp.CSgitFtdcInvestorPositionField_FrozenCash_set
    __swig_getmethods__["FrozenCash"] = _pyctp.CSgitFtdcInvestorPositionField_FrozenCash_get
    if _newclass:
        FrozenCash = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_FrozenCash_get, _pyctp.CSgitFtdcInvestorPositionField_FrozenCash_set)
    __swig_setmethods__["FrozenCommission"] = _pyctp.CSgitFtdcInvestorPositionField_FrozenCommission_set
    __swig_getmethods__["FrozenCommission"] = _pyctp.CSgitFtdcInvestorPositionField_FrozenCommission_get
    if _newclass:
        FrozenCommission = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_FrozenCommission_get, _pyctp.CSgitFtdcInvestorPositionField_FrozenCommission_set)
    __swig_setmethods__["CashIn"] = _pyctp.CSgitFtdcInvestorPositionField_CashIn_set
    __swig_getmethods__["CashIn"] = _pyctp.CSgitFtdcInvestorPositionField_CashIn_get
    if _newclass:
        CashIn = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_CashIn_get, _pyctp.CSgitFtdcInvestorPositionField_CashIn_set)
    __swig_setmethods__["Commission"] = _pyctp.CSgitFtdcInvestorPositionField_Commission_set
    __swig_getmethods__["Commission"] = _pyctp.CSgitFtdcInvestorPositionField_Commission_get
    if _newclass:
        Commission = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_Commission_get, _pyctp.CSgitFtdcInvestorPositionField_Commission_set)
    __swig_setmethods__["CloseProfit"] = _pyctp.CSgitFtdcInvestorPositionField_CloseProfit_set
    __swig_getmethods__["CloseProfit"] = _pyctp.CSgitFtdcInvestorPositionField_CloseProfit_get
    if _newclass:
        CloseProfit = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_CloseProfit_get, _pyctp.CSgitFtdcInvestorPositionField_CloseProfit_set)
    __swig_setmethods__["PositionProfit"] = _pyctp.CSgitFtdcInvestorPositionField_PositionProfit_set
    __swig_getmethods__["PositionProfit"] = _pyctp.CSgitFtdcInvestorPositionField_PositionProfit_get
    if _newclass:
        PositionProfit = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_PositionProfit_get, _pyctp.CSgitFtdcInvestorPositionField_PositionProfit_set)
    __swig_setmethods__["PreSettlementPrice"] = _pyctp.CSgitFtdcInvestorPositionField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _pyctp.CSgitFtdcInvestorPositionField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_PreSettlementPrice_get, _pyctp.CSgitFtdcInvestorPositionField_PreSettlementPrice_set)
    __swig_setmethods__["SettlementPrice"] = _pyctp.CSgitFtdcInvestorPositionField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _pyctp.CSgitFtdcInvestorPositionField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_SettlementPrice_get, _pyctp.CSgitFtdcInvestorPositionField_SettlementPrice_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcInvestorPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcInvestorPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_TradingDay_get, _pyctp.CSgitFtdcInvestorPositionField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CSgitFtdcInvestorPositionField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CSgitFtdcInvestorPositionField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_SettlementID_get, _pyctp.CSgitFtdcInvestorPositionField_SettlementID_set)
    __swig_setmethods__["OpenCost"] = _pyctp.CSgitFtdcInvestorPositionField_OpenCost_set
    __swig_getmethods__["OpenCost"] = _pyctp.CSgitFtdcInvestorPositionField_OpenCost_get
    if _newclass:
        OpenCost = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_OpenCost_get, _pyctp.CSgitFtdcInvestorPositionField_OpenCost_set)
    __swig_setmethods__["ExchangeMargin"] = _pyctp.CSgitFtdcInvestorPositionField_ExchangeMargin_set
    __swig_getmethods__["ExchangeMargin"] = _pyctp.CSgitFtdcInvestorPositionField_ExchangeMargin_get
    if _newclass:
        ExchangeMargin = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_ExchangeMargin_get, _pyctp.CSgitFtdcInvestorPositionField_ExchangeMargin_set)
    __swig_setmethods__["CombPosition"] = _pyctp.CSgitFtdcInvestorPositionField_CombPosition_set
    __swig_getmethods__["CombPosition"] = _pyctp.CSgitFtdcInvestorPositionField_CombPosition_get
    if _newclass:
        CombPosition = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_CombPosition_get, _pyctp.CSgitFtdcInvestorPositionField_CombPosition_set)
    __swig_setmethods__["CombLongFrozen"] = _pyctp.CSgitFtdcInvestorPositionField_CombLongFrozen_set
    __swig_getmethods__["CombLongFrozen"] = _pyctp.CSgitFtdcInvestorPositionField_CombLongFrozen_get
    if _newclass:
        CombLongFrozen = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_CombLongFrozen_get, _pyctp.CSgitFtdcInvestorPositionField_CombLongFrozen_set)
    __swig_setmethods__["CombShortFrozen"] = _pyctp.CSgitFtdcInvestorPositionField_CombShortFrozen_set
    __swig_getmethods__["CombShortFrozen"] = _pyctp.CSgitFtdcInvestorPositionField_CombShortFrozen_get
    if _newclass:
        CombShortFrozen = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_CombShortFrozen_get, _pyctp.CSgitFtdcInvestorPositionField_CombShortFrozen_set)
    __swig_setmethods__["CloseProfitByDate"] = _pyctp.CSgitFtdcInvestorPositionField_CloseProfitByDate_set
    __swig_getmethods__["CloseProfitByDate"] = _pyctp.CSgitFtdcInvestorPositionField_CloseProfitByDate_get
    if _newclass:
        CloseProfitByDate = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_CloseProfitByDate_get, _pyctp.CSgitFtdcInvestorPositionField_CloseProfitByDate_set)
    __swig_setmethods__["CloseProfitByTrade"] = _pyctp.CSgitFtdcInvestorPositionField_CloseProfitByTrade_set
    __swig_getmethods__["CloseProfitByTrade"] = _pyctp.CSgitFtdcInvestorPositionField_CloseProfitByTrade_get
    if _newclass:
        CloseProfitByTrade = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_CloseProfitByTrade_get, _pyctp.CSgitFtdcInvestorPositionField_CloseProfitByTrade_set)
    __swig_setmethods__["TodayPosition"] = _pyctp.CSgitFtdcInvestorPositionField_TodayPosition_set
    __swig_getmethods__["TodayPosition"] = _pyctp.CSgitFtdcInvestorPositionField_TodayPosition_get
    if _newclass:
        TodayPosition = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_TodayPosition_get, _pyctp.CSgitFtdcInvestorPositionField_TodayPosition_set)
    __swig_setmethods__["MarginRateByMoney"] = _pyctp.CSgitFtdcInvestorPositionField_MarginRateByMoney_set
    __swig_getmethods__["MarginRateByMoney"] = _pyctp.CSgitFtdcInvestorPositionField_MarginRateByMoney_get
    if _newclass:
        MarginRateByMoney = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_MarginRateByMoney_get, _pyctp.CSgitFtdcInvestorPositionField_MarginRateByMoney_set)
    __swig_setmethods__["MarginRateByVolume"] = _pyctp.CSgitFtdcInvestorPositionField_MarginRateByVolume_set
    __swig_getmethods__["MarginRateByVolume"] = _pyctp.CSgitFtdcInvestorPositionField_MarginRateByVolume_get
    if _newclass:
        MarginRateByVolume = _swig_property(_pyctp.CSgitFtdcInvestorPositionField_MarginRateByVolume_get, _pyctp.CSgitFtdcInvestorPositionField_MarginRateByVolume_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcInvestorPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcInvestorPositionField
    __del__ = lambda self: None
CSgitFtdcInvestorPositionField_swigregister = _pyctp.CSgitFtdcInvestorPositionField_swigregister
CSgitFtdcInvestorPositionField_swigregister(CSgitFtdcInvestorPositionField)

class CSgitFtdcInstrumentMarginRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcInstrumentMarginRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcInstrumentMarginRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcInstrumentMarginRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcInstrumentMarginRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateField_InstrumentID_get, _pyctp.CSgitFtdcInstrumentMarginRateField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CSgitFtdcInstrumentMarginRateField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CSgitFtdcInstrumentMarginRateField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateField_InvestorRange_get, _pyctp.CSgitFtdcInstrumentMarginRateField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcInstrumentMarginRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcInstrumentMarginRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateField_BrokerID_get, _pyctp.CSgitFtdcInstrumentMarginRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcInstrumentMarginRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcInstrumentMarginRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateField_InvestorID_get, _pyctp.CSgitFtdcInstrumentMarginRateField_InvestorID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CSgitFtdcInstrumentMarginRateField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CSgitFtdcInstrumentMarginRateField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateField_HedgeFlag_get, _pyctp.CSgitFtdcInstrumentMarginRateField_HedgeFlag_set)
    __swig_setmethods__["LongMarginRatioByMoney"] = _pyctp.CSgitFtdcInstrumentMarginRateField_LongMarginRatioByMoney_set
    __swig_getmethods__["LongMarginRatioByMoney"] = _pyctp.CSgitFtdcInstrumentMarginRateField_LongMarginRatioByMoney_get
    if _newclass:
        LongMarginRatioByMoney = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateField_LongMarginRatioByMoney_get, _pyctp.CSgitFtdcInstrumentMarginRateField_LongMarginRatioByMoney_set)
    __swig_setmethods__["LongMarginRatioByVolume"] = _pyctp.CSgitFtdcInstrumentMarginRateField_LongMarginRatioByVolume_set
    __swig_getmethods__["LongMarginRatioByVolume"] = _pyctp.CSgitFtdcInstrumentMarginRateField_LongMarginRatioByVolume_get
    if _newclass:
        LongMarginRatioByVolume = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateField_LongMarginRatioByVolume_get, _pyctp.CSgitFtdcInstrumentMarginRateField_LongMarginRatioByVolume_set)
    __swig_setmethods__["ShortMarginRatioByMoney"] = _pyctp.CSgitFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_set
    __swig_getmethods__["ShortMarginRatioByMoney"] = _pyctp.CSgitFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_get
    if _newclass:
        ShortMarginRatioByMoney = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_get, _pyctp.CSgitFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_set)
    __swig_setmethods__["ShortMarginRatioByVolume"] = _pyctp.CSgitFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_set
    __swig_getmethods__["ShortMarginRatioByVolume"] = _pyctp.CSgitFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_get
    if _newclass:
        ShortMarginRatioByVolume = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_get, _pyctp.CSgitFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_set)
    __swig_setmethods__["IsRelative"] = _pyctp.CSgitFtdcInstrumentMarginRateField_IsRelative_set
    __swig_getmethods__["IsRelative"] = _pyctp.CSgitFtdcInstrumentMarginRateField_IsRelative_get
    if _newclass:
        IsRelative = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateField_IsRelative_get, _pyctp.CSgitFtdcInstrumentMarginRateField_IsRelative_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcInstrumentMarginRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcInstrumentMarginRateField
    __del__ = lambda self: None
CSgitFtdcInstrumentMarginRateField_swigregister = _pyctp.CSgitFtdcInstrumentMarginRateField_swigregister
CSgitFtdcInstrumentMarginRateField_swigregister(CSgitFtdcInstrumentMarginRateField)

class CSgitFtdcInstrumentCommissionRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcInstrumentCommissionRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcInstrumentCommissionRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcInstrumentCommissionRateField_InstrumentID_get, _pyctp.CSgitFtdcInstrumentCommissionRateField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CSgitFtdcInstrumentCommissionRateField_InvestorRange_get, _pyctp.CSgitFtdcInstrumentCommissionRateField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcInstrumentCommissionRateField_BrokerID_get, _pyctp.CSgitFtdcInstrumentCommissionRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcInstrumentCommissionRateField_InvestorID_get, _pyctp.CSgitFtdcInstrumentCommissionRateField_InvestorID_set)
    __swig_setmethods__["OpenRatioByMoney"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_OpenRatioByMoney_set
    __swig_getmethods__["OpenRatioByMoney"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_OpenRatioByMoney_get
    if _newclass:
        OpenRatioByMoney = _swig_property(_pyctp.CSgitFtdcInstrumentCommissionRateField_OpenRatioByMoney_get, _pyctp.CSgitFtdcInstrumentCommissionRateField_OpenRatioByMoney_set)
    __swig_setmethods__["OpenRatioByVolume"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_OpenRatioByVolume_set
    __swig_getmethods__["OpenRatioByVolume"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_OpenRatioByVolume_get
    if _newclass:
        OpenRatioByVolume = _swig_property(_pyctp.CSgitFtdcInstrumentCommissionRateField_OpenRatioByVolume_get, _pyctp.CSgitFtdcInstrumentCommissionRateField_OpenRatioByVolume_set)
    __swig_setmethods__["CloseRatioByMoney"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_CloseRatioByMoney_set
    __swig_getmethods__["CloseRatioByMoney"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_CloseRatioByMoney_get
    if _newclass:
        CloseRatioByMoney = _swig_property(_pyctp.CSgitFtdcInstrumentCommissionRateField_CloseRatioByMoney_get, _pyctp.CSgitFtdcInstrumentCommissionRateField_CloseRatioByMoney_set)
    __swig_setmethods__["CloseRatioByVolume"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_CloseRatioByVolume_set
    __swig_getmethods__["CloseRatioByVolume"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_CloseRatioByVolume_get
    if _newclass:
        CloseRatioByVolume = _swig_property(_pyctp.CSgitFtdcInstrumentCommissionRateField_CloseRatioByVolume_get, _pyctp.CSgitFtdcInstrumentCommissionRateField_CloseRatioByVolume_set)
    __swig_setmethods__["CloseTodayRatioByMoney"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_set
    __swig_getmethods__["CloseTodayRatioByMoney"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_get
    if _newclass:
        CloseTodayRatioByMoney = _swig_property(_pyctp.CSgitFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_get, _pyctp.CSgitFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_set)
    __swig_setmethods__["CloseTodayRatioByVolume"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_set
    __swig_getmethods__["CloseTodayRatioByVolume"] = _pyctp.CSgitFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_get
    if _newclass:
        CloseTodayRatioByVolume = _swig_property(_pyctp.CSgitFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_get, _pyctp.CSgitFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcInstrumentCommissionRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcInstrumentCommissionRateField
    __del__ = lambda self: None
CSgitFtdcInstrumentCommissionRateField_swigregister = _pyctp.CSgitFtdcInstrumentCommissionRateField_swigregister
CSgitFtdcInstrumentCommissionRateField_swigregister(CSgitFtdcInstrumentCommissionRateField)

class CSgitFtdcDepthMarketDataField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcDepthMarketDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcDepthMarketDataField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcDepthMarketDataField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcDepthMarketDataField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_TradingDay_get, _pyctp.CSgitFtdcDepthMarketDataField_TradingDay_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcDepthMarketDataField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcDepthMarketDataField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_InstrumentID_get, _pyctp.CSgitFtdcDepthMarketDataField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcDepthMarketDataField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcDepthMarketDataField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_ExchangeID_get, _pyctp.CSgitFtdcDepthMarketDataField_ExchangeID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcDepthMarketDataField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcDepthMarketDataField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_ExchangeInstID_get, _pyctp.CSgitFtdcDepthMarketDataField_ExchangeInstID_set)
    __swig_setmethods__["LastPrice"] = _pyctp.CSgitFtdcDepthMarketDataField_LastPrice_set
    __swig_getmethods__["LastPrice"] = _pyctp.CSgitFtdcDepthMarketDataField_LastPrice_get
    if _newclass:
        LastPrice = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_LastPrice_get, _pyctp.CSgitFtdcDepthMarketDataField_LastPrice_set)
    __swig_setmethods__["PreSettlementPrice"] = _pyctp.CSgitFtdcDepthMarketDataField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _pyctp.CSgitFtdcDepthMarketDataField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_PreSettlementPrice_get, _pyctp.CSgitFtdcDepthMarketDataField_PreSettlementPrice_set)
    __swig_setmethods__["PreClosePrice"] = _pyctp.CSgitFtdcDepthMarketDataField_PreClosePrice_set
    __swig_getmethods__["PreClosePrice"] = _pyctp.CSgitFtdcDepthMarketDataField_PreClosePrice_get
    if _newclass:
        PreClosePrice = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_PreClosePrice_get, _pyctp.CSgitFtdcDepthMarketDataField_PreClosePrice_set)
    __swig_setmethods__["PreOpenInterest"] = _pyctp.CSgitFtdcDepthMarketDataField_PreOpenInterest_set
    __swig_getmethods__["PreOpenInterest"] = _pyctp.CSgitFtdcDepthMarketDataField_PreOpenInterest_get
    if _newclass:
        PreOpenInterest = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_PreOpenInterest_get, _pyctp.CSgitFtdcDepthMarketDataField_PreOpenInterest_set)
    __swig_setmethods__["OpenPrice"] = _pyctp.CSgitFtdcDepthMarketDataField_OpenPrice_set
    __swig_getmethods__["OpenPrice"] = _pyctp.CSgitFtdcDepthMarketDataField_OpenPrice_get
    if _newclass:
        OpenPrice = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_OpenPrice_get, _pyctp.CSgitFtdcDepthMarketDataField_OpenPrice_set)
    __swig_setmethods__["HighestPrice"] = _pyctp.CSgitFtdcDepthMarketDataField_HighestPrice_set
    __swig_getmethods__["HighestPrice"] = _pyctp.CSgitFtdcDepthMarketDataField_HighestPrice_get
    if _newclass:
        HighestPrice = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_HighestPrice_get, _pyctp.CSgitFtdcDepthMarketDataField_HighestPrice_set)
    __swig_setmethods__["LowestPrice"] = _pyctp.CSgitFtdcDepthMarketDataField_LowestPrice_set
    __swig_getmethods__["LowestPrice"] = _pyctp.CSgitFtdcDepthMarketDataField_LowestPrice_get
    if _newclass:
        LowestPrice = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_LowestPrice_get, _pyctp.CSgitFtdcDepthMarketDataField_LowestPrice_set)
    __swig_setmethods__["Volume"] = _pyctp.CSgitFtdcDepthMarketDataField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CSgitFtdcDepthMarketDataField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_Volume_get, _pyctp.CSgitFtdcDepthMarketDataField_Volume_set)
    __swig_setmethods__["Turnover"] = _pyctp.CSgitFtdcDepthMarketDataField_Turnover_set
    __swig_getmethods__["Turnover"] = _pyctp.CSgitFtdcDepthMarketDataField_Turnover_get
    if _newclass:
        Turnover = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_Turnover_get, _pyctp.CSgitFtdcDepthMarketDataField_Turnover_set)
    __swig_setmethods__["OpenInterest"] = _pyctp.CSgitFtdcDepthMarketDataField_OpenInterest_set
    __swig_getmethods__["OpenInterest"] = _pyctp.CSgitFtdcDepthMarketDataField_OpenInterest_get
    if _newclass:
        OpenInterest = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_OpenInterest_get, _pyctp.CSgitFtdcDepthMarketDataField_OpenInterest_set)
    __swig_setmethods__["ClosePrice"] = _pyctp.CSgitFtdcDepthMarketDataField_ClosePrice_set
    __swig_getmethods__["ClosePrice"] = _pyctp.CSgitFtdcDepthMarketDataField_ClosePrice_get
    if _newclass:
        ClosePrice = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_ClosePrice_get, _pyctp.CSgitFtdcDepthMarketDataField_ClosePrice_set)
    __swig_setmethods__["SettlementPrice"] = _pyctp.CSgitFtdcDepthMarketDataField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _pyctp.CSgitFtdcDepthMarketDataField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_SettlementPrice_get, _pyctp.CSgitFtdcDepthMarketDataField_SettlementPrice_set)
    __swig_setmethods__["UpperLimitPrice"] = _pyctp.CSgitFtdcDepthMarketDataField_UpperLimitPrice_set
    __swig_getmethods__["UpperLimitPrice"] = _pyctp.CSgitFtdcDepthMarketDataField_UpperLimitPrice_get
    if _newclass:
        UpperLimitPrice = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_UpperLimitPrice_get, _pyctp.CSgitFtdcDepthMarketDataField_UpperLimitPrice_set)
    __swig_setmethods__["LowerLimitPrice"] = _pyctp.CSgitFtdcDepthMarketDataField_LowerLimitPrice_set
    __swig_getmethods__["LowerLimitPrice"] = _pyctp.CSgitFtdcDepthMarketDataField_LowerLimitPrice_get
    if _newclass:
        LowerLimitPrice = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_LowerLimitPrice_get, _pyctp.CSgitFtdcDepthMarketDataField_LowerLimitPrice_set)
    __swig_setmethods__["PreDelta"] = _pyctp.CSgitFtdcDepthMarketDataField_PreDelta_set
    __swig_getmethods__["PreDelta"] = _pyctp.CSgitFtdcDepthMarketDataField_PreDelta_get
    if _newclass:
        PreDelta = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_PreDelta_get, _pyctp.CSgitFtdcDepthMarketDataField_PreDelta_set)
    __swig_setmethods__["CurrDelta"] = _pyctp.CSgitFtdcDepthMarketDataField_CurrDelta_set
    __swig_getmethods__["CurrDelta"] = _pyctp.CSgitFtdcDepthMarketDataField_CurrDelta_get
    if _newclass:
        CurrDelta = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_CurrDelta_get, _pyctp.CSgitFtdcDepthMarketDataField_CurrDelta_set)
    __swig_setmethods__["UpdateTime"] = _pyctp.CSgitFtdcDepthMarketDataField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _pyctp.CSgitFtdcDepthMarketDataField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_UpdateTime_get, _pyctp.CSgitFtdcDepthMarketDataField_UpdateTime_set)
    __swig_setmethods__["UpdateMillisec"] = _pyctp.CSgitFtdcDepthMarketDataField_UpdateMillisec_set
    __swig_getmethods__["UpdateMillisec"] = _pyctp.CSgitFtdcDepthMarketDataField_UpdateMillisec_get
    if _newclass:
        UpdateMillisec = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_UpdateMillisec_get, _pyctp.CSgitFtdcDepthMarketDataField_UpdateMillisec_set)
    __swig_setmethods__["BidPrice1"] = _pyctp.CSgitFtdcDepthMarketDataField_BidPrice1_set
    __swig_getmethods__["BidPrice1"] = _pyctp.CSgitFtdcDepthMarketDataField_BidPrice1_get
    if _newclass:
        BidPrice1 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_BidPrice1_get, _pyctp.CSgitFtdcDepthMarketDataField_BidPrice1_set)
    __swig_setmethods__["BidVolume1"] = _pyctp.CSgitFtdcDepthMarketDataField_BidVolume1_set
    __swig_getmethods__["BidVolume1"] = _pyctp.CSgitFtdcDepthMarketDataField_BidVolume1_get
    if _newclass:
        BidVolume1 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_BidVolume1_get, _pyctp.CSgitFtdcDepthMarketDataField_BidVolume1_set)
    __swig_setmethods__["AskPrice1"] = _pyctp.CSgitFtdcDepthMarketDataField_AskPrice1_set
    __swig_getmethods__["AskPrice1"] = _pyctp.CSgitFtdcDepthMarketDataField_AskPrice1_get
    if _newclass:
        AskPrice1 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_AskPrice1_get, _pyctp.CSgitFtdcDepthMarketDataField_AskPrice1_set)
    __swig_setmethods__["AskVolume1"] = _pyctp.CSgitFtdcDepthMarketDataField_AskVolume1_set
    __swig_getmethods__["AskVolume1"] = _pyctp.CSgitFtdcDepthMarketDataField_AskVolume1_get
    if _newclass:
        AskVolume1 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_AskVolume1_get, _pyctp.CSgitFtdcDepthMarketDataField_AskVolume1_set)
    __swig_setmethods__["BidPrice2"] = _pyctp.CSgitFtdcDepthMarketDataField_BidPrice2_set
    __swig_getmethods__["BidPrice2"] = _pyctp.CSgitFtdcDepthMarketDataField_BidPrice2_get
    if _newclass:
        BidPrice2 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_BidPrice2_get, _pyctp.CSgitFtdcDepthMarketDataField_BidPrice2_set)
    __swig_setmethods__["BidVolume2"] = _pyctp.CSgitFtdcDepthMarketDataField_BidVolume2_set
    __swig_getmethods__["BidVolume2"] = _pyctp.CSgitFtdcDepthMarketDataField_BidVolume2_get
    if _newclass:
        BidVolume2 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_BidVolume2_get, _pyctp.CSgitFtdcDepthMarketDataField_BidVolume2_set)
    __swig_setmethods__["AskPrice2"] = _pyctp.CSgitFtdcDepthMarketDataField_AskPrice2_set
    __swig_getmethods__["AskPrice2"] = _pyctp.CSgitFtdcDepthMarketDataField_AskPrice2_get
    if _newclass:
        AskPrice2 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_AskPrice2_get, _pyctp.CSgitFtdcDepthMarketDataField_AskPrice2_set)
    __swig_setmethods__["AskVolume2"] = _pyctp.CSgitFtdcDepthMarketDataField_AskVolume2_set
    __swig_getmethods__["AskVolume2"] = _pyctp.CSgitFtdcDepthMarketDataField_AskVolume2_get
    if _newclass:
        AskVolume2 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_AskVolume2_get, _pyctp.CSgitFtdcDepthMarketDataField_AskVolume2_set)
    __swig_setmethods__["BidPrice3"] = _pyctp.CSgitFtdcDepthMarketDataField_BidPrice3_set
    __swig_getmethods__["BidPrice3"] = _pyctp.CSgitFtdcDepthMarketDataField_BidPrice3_get
    if _newclass:
        BidPrice3 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_BidPrice3_get, _pyctp.CSgitFtdcDepthMarketDataField_BidPrice3_set)
    __swig_setmethods__["BidVolume3"] = _pyctp.CSgitFtdcDepthMarketDataField_BidVolume3_set
    __swig_getmethods__["BidVolume3"] = _pyctp.CSgitFtdcDepthMarketDataField_BidVolume3_get
    if _newclass:
        BidVolume3 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_BidVolume3_get, _pyctp.CSgitFtdcDepthMarketDataField_BidVolume3_set)
    __swig_setmethods__["AskPrice3"] = _pyctp.CSgitFtdcDepthMarketDataField_AskPrice3_set
    __swig_getmethods__["AskPrice3"] = _pyctp.CSgitFtdcDepthMarketDataField_AskPrice3_get
    if _newclass:
        AskPrice3 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_AskPrice3_get, _pyctp.CSgitFtdcDepthMarketDataField_AskPrice3_set)
    __swig_setmethods__["AskVolume3"] = _pyctp.CSgitFtdcDepthMarketDataField_AskVolume3_set
    __swig_getmethods__["AskVolume3"] = _pyctp.CSgitFtdcDepthMarketDataField_AskVolume3_get
    if _newclass:
        AskVolume3 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_AskVolume3_get, _pyctp.CSgitFtdcDepthMarketDataField_AskVolume3_set)
    __swig_setmethods__["BidPrice4"] = _pyctp.CSgitFtdcDepthMarketDataField_BidPrice4_set
    __swig_getmethods__["BidPrice4"] = _pyctp.CSgitFtdcDepthMarketDataField_BidPrice4_get
    if _newclass:
        BidPrice4 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_BidPrice4_get, _pyctp.CSgitFtdcDepthMarketDataField_BidPrice4_set)
    __swig_setmethods__["BidVolume4"] = _pyctp.CSgitFtdcDepthMarketDataField_BidVolume4_set
    __swig_getmethods__["BidVolume4"] = _pyctp.CSgitFtdcDepthMarketDataField_BidVolume4_get
    if _newclass:
        BidVolume4 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_BidVolume4_get, _pyctp.CSgitFtdcDepthMarketDataField_BidVolume4_set)
    __swig_setmethods__["AskPrice4"] = _pyctp.CSgitFtdcDepthMarketDataField_AskPrice4_set
    __swig_getmethods__["AskPrice4"] = _pyctp.CSgitFtdcDepthMarketDataField_AskPrice4_get
    if _newclass:
        AskPrice4 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_AskPrice4_get, _pyctp.CSgitFtdcDepthMarketDataField_AskPrice4_set)
    __swig_setmethods__["AskVolume4"] = _pyctp.CSgitFtdcDepthMarketDataField_AskVolume4_set
    __swig_getmethods__["AskVolume4"] = _pyctp.CSgitFtdcDepthMarketDataField_AskVolume4_get
    if _newclass:
        AskVolume4 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_AskVolume4_get, _pyctp.CSgitFtdcDepthMarketDataField_AskVolume4_set)
    __swig_setmethods__["BidPrice5"] = _pyctp.CSgitFtdcDepthMarketDataField_BidPrice5_set
    __swig_getmethods__["BidPrice5"] = _pyctp.CSgitFtdcDepthMarketDataField_BidPrice5_get
    if _newclass:
        BidPrice5 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_BidPrice5_get, _pyctp.CSgitFtdcDepthMarketDataField_BidPrice5_set)
    __swig_setmethods__["BidVolume5"] = _pyctp.CSgitFtdcDepthMarketDataField_BidVolume5_set
    __swig_getmethods__["BidVolume5"] = _pyctp.CSgitFtdcDepthMarketDataField_BidVolume5_get
    if _newclass:
        BidVolume5 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_BidVolume5_get, _pyctp.CSgitFtdcDepthMarketDataField_BidVolume5_set)
    __swig_setmethods__["AskPrice5"] = _pyctp.CSgitFtdcDepthMarketDataField_AskPrice5_set
    __swig_getmethods__["AskPrice5"] = _pyctp.CSgitFtdcDepthMarketDataField_AskPrice5_get
    if _newclass:
        AskPrice5 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_AskPrice5_get, _pyctp.CSgitFtdcDepthMarketDataField_AskPrice5_set)
    __swig_setmethods__["AskVolume5"] = _pyctp.CSgitFtdcDepthMarketDataField_AskVolume5_set
    __swig_getmethods__["AskVolume5"] = _pyctp.CSgitFtdcDepthMarketDataField_AskVolume5_get
    if _newclass:
        AskVolume5 = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_AskVolume5_get, _pyctp.CSgitFtdcDepthMarketDataField_AskVolume5_set)
    __swig_setmethods__["AveragePrice"] = _pyctp.CSgitFtdcDepthMarketDataField_AveragePrice_set
    __swig_getmethods__["AveragePrice"] = _pyctp.CSgitFtdcDepthMarketDataField_AveragePrice_get
    if _newclass:
        AveragePrice = _swig_property(_pyctp.CSgitFtdcDepthMarketDataField_AveragePrice_get, _pyctp.CSgitFtdcDepthMarketDataField_AveragePrice_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcDepthMarketDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcDepthMarketDataField
    __del__ = lambda self: None
CSgitFtdcDepthMarketDataField_swigregister = _pyctp.CSgitFtdcDepthMarketDataField_swigregister
CSgitFtdcDepthMarketDataField_swigregister(CSgitFtdcDepthMarketDataField)

class CSgitFtdcInstrumentTradingRightField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcInstrumentTradingRightField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcInstrumentTradingRightField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcInstrumentTradingRightField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcInstrumentTradingRightField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcInstrumentTradingRightField_InstrumentID_get, _pyctp.CSgitFtdcInstrumentTradingRightField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CSgitFtdcInstrumentTradingRightField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CSgitFtdcInstrumentTradingRightField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CSgitFtdcInstrumentTradingRightField_InvestorRange_get, _pyctp.CSgitFtdcInstrumentTradingRightField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcInstrumentTradingRightField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcInstrumentTradingRightField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcInstrumentTradingRightField_BrokerID_get, _pyctp.CSgitFtdcInstrumentTradingRightField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcInstrumentTradingRightField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcInstrumentTradingRightField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcInstrumentTradingRightField_InvestorID_get, _pyctp.CSgitFtdcInstrumentTradingRightField_InvestorID_set)
    __swig_setmethods__["TradingRight"] = _pyctp.CSgitFtdcInstrumentTradingRightField_TradingRight_set
    __swig_getmethods__["TradingRight"] = _pyctp.CSgitFtdcInstrumentTradingRightField_TradingRight_get
    if _newclass:
        TradingRight = _swig_property(_pyctp.CSgitFtdcInstrumentTradingRightField_TradingRight_get, _pyctp.CSgitFtdcInstrumentTradingRightField_TradingRight_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcInstrumentTradingRightField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcInstrumentTradingRightField
    __del__ = lambda self: None
CSgitFtdcInstrumentTradingRightField_swigregister = _pyctp.CSgitFtdcInstrumentTradingRightField_swigregister
CSgitFtdcInstrumentTradingRightField_swigregister(CSgitFtdcInstrumentTradingRightField)

class CSgitFtdcBrokerUserField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcBrokerUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcBrokerUserField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerUserField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerUserField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcBrokerUserField_BrokerID_get, _pyctp.CSgitFtdcBrokerUserField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcBrokerUserField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcBrokerUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcBrokerUserField_UserID_get, _pyctp.CSgitFtdcBrokerUserField_UserID_set)
    __swig_setmethods__["UserName"] = _pyctp.CSgitFtdcBrokerUserField_UserName_set
    __swig_getmethods__["UserName"] = _pyctp.CSgitFtdcBrokerUserField_UserName_get
    if _newclass:
        UserName = _swig_property(_pyctp.CSgitFtdcBrokerUserField_UserName_get, _pyctp.CSgitFtdcBrokerUserField_UserName_set)
    __swig_setmethods__["UserType"] = _pyctp.CSgitFtdcBrokerUserField_UserType_set
    __swig_getmethods__["UserType"] = _pyctp.CSgitFtdcBrokerUserField_UserType_get
    if _newclass:
        UserType = _swig_property(_pyctp.CSgitFtdcBrokerUserField_UserType_get, _pyctp.CSgitFtdcBrokerUserField_UserType_set)
    __swig_setmethods__["IsActive"] = _pyctp.CSgitFtdcBrokerUserField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CSgitFtdcBrokerUserField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CSgitFtdcBrokerUserField_IsActive_get, _pyctp.CSgitFtdcBrokerUserField_IsActive_set)
    __swig_setmethods__["IsUsingOTP"] = _pyctp.CSgitFtdcBrokerUserField_IsUsingOTP_set
    __swig_getmethods__["IsUsingOTP"] = _pyctp.CSgitFtdcBrokerUserField_IsUsingOTP_get
    if _newclass:
        IsUsingOTP = _swig_property(_pyctp.CSgitFtdcBrokerUserField_IsUsingOTP_get, _pyctp.CSgitFtdcBrokerUserField_IsUsingOTP_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcBrokerUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcBrokerUserField
    __del__ = lambda self: None
CSgitFtdcBrokerUserField_swigregister = _pyctp.CSgitFtdcBrokerUserField_swigregister
CSgitFtdcBrokerUserField_swigregister(CSgitFtdcBrokerUserField)

class CSgitFtdcBrokerUserPasswordField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcBrokerUserPasswordField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcBrokerUserPasswordField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerUserPasswordField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerUserPasswordField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcBrokerUserPasswordField_BrokerID_get, _pyctp.CSgitFtdcBrokerUserPasswordField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcBrokerUserPasswordField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcBrokerUserPasswordField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcBrokerUserPasswordField_UserID_get, _pyctp.CSgitFtdcBrokerUserPasswordField_UserID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcBrokerUserPasswordField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcBrokerUserPasswordField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcBrokerUserPasswordField_Password_get, _pyctp.CSgitFtdcBrokerUserPasswordField_Password_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcBrokerUserPasswordField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcBrokerUserPasswordField
    __del__ = lambda self: None
CSgitFtdcBrokerUserPasswordField_swigregister = _pyctp.CSgitFtdcBrokerUserPasswordField_swigregister
CSgitFtdcBrokerUserPasswordField_swigregister(CSgitFtdcBrokerUserPasswordField)

class CSgitFtdcBrokerUserFunctionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcBrokerUserFunctionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcBrokerUserFunctionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerUserFunctionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerUserFunctionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcBrokerUserFunctionField_BrokerID_get, _pyctp.CSgitFtdcBrokerUserFunctionField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcBrokerUserFunctionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcBrokerUserFunctionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcBrokerUserFunctionField_UserID_get, _pyctp.CSgitFtdcBrokerUserFunctionField_UserID_set)
    __swig_setmethods__["BrokerFunctionCode"] = _pyctp.CSgitFtdcBrokerUserFunctionField_BrokerFunctionCode_set
    __swig_getmethods__["BrokerFunctionCode"] = _pyctp.CSgitFtdcBrokerUserFunctionField_BrokerFunctionCode_get
    if _newclass:
        BrokerFunctionCode = _swig_property(_pyctp.CSgitFtdcBrokerUserFunctionField_BrokerFunctionCode_get, _pyctp.CSgitFtdcBrokerUserFunctionField_BrokerFunctionCode_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcBrokerUserFunctionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcBrokerUserFunctionField
    __del__ = lambda self: None
CSgitFtdcBrokerUserFunctionField_swigregister = _pyctp.CSgitFtdcBrokerUserFunctionField_swigregister
CSgitFtdcBrokerUserFunctionField_swigregister(CSgitFtdcBrokerUserFunctionField)

class CSgitFtdcTraderOfferField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTraderOfferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTraderOfferField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcTraderOfferField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcTraderOfferField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcTraderOfferField_ExchangeID_get, _pyctp.CSgitFtdcTraderOfferField_ExchangeID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcTraderOfferField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcTraderOfferField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcTraderOfferField_TraderID_get, _pyctp.CSgitFtdcTraderOfferField_TraderID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcTraderOfferField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcTraderOfferField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcTraderOfferField_ParticipantID_get, _pyctp.CSgitFtdcTraderOfferField_ParticipantID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcTraderOfferField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcTraderOfferField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcTraderOfferField_Password_get, _pyctp.CSgitFtdcTraderOfferField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcTraderOfferField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcTraderOfferField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcTraderOfferField_InstallID_get, _pyctp.CSgitFtdcTraderOfferField_InstallID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CSgitFtdcTraderOfferField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CSgitFtdcTraderOfferField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CSgitFtdcTraderOfferField_OrderLocalID_get, _pyctp.CSgitFtdcTraderOfferField_OrderLocalID_set)
    __swig_setmethods__["TraderConnectStatus"] = _pyctp.CSgitFtdcTraderOfferField_TraderConnectStatus_set
    __swig_getmethods__["TraderConnectStatus"] = _pyctp.CSgitFtdcTraderOfferField_TraderConnectStatus_get
    if _newclass:
        TraderConnectStatus = _swig_property(_pyctp.CSgitFtdcTraderOfferField_TraderConnectStatus_get, _pyctp.CSgitFtdcTraderOfferField_TraderConnectStatus_set)
    __swig_setmethods__["ConnectRequestDate"] = _pyctp.CSgitFtdcTraderOfferField_ConnectRequestDate_set
    __swig_getmethods__["ConnectRequestDate"] = _pyctp.CSgitFtdcTraderOfferField_ConnectRequestDate_get
    if _newclass:
        ConnectRequestDate = _swig_property(_pyctp.CSgitFtdcTraderOfferField_ConnectRequestDate_get, _pyctp.CSgitFtdcTraderOfferField_ConnectRequestDate_set)
    __swig_setmethods__["ConnectRequestTime"] = _pyctp.CSgitFtdcTraderOfferField_ConnectRequestTime_set
    __swig_getmethods__["ConnectRequestTime"] = _pyctp.CSgitFtdcTraderOfferField_ConnectRequestTime_get
    if _newclass:
        ConnectRequestTime = _swig_property(_pyctp.CSgitFtdcTraderOfferField_ConnectRequestTime_get, _pyctp.CSgitFtdcTraderOfferField_ConnectRequestTime_set)
    __swig_setmethods__["LastReportDate"] = _pyctp.CSgitFtdcTraderOfferField_LastReportDate_set
    __swig_getmethods__["LastReportDate"] = _pyctp.CSgitFtdcTraderOfferField_LastReportDate_get
    if _newclass:
        LastReportDate = _swig_property(_pyctp.CSgitFtdcTraderOfferField_LastReportDate_get, _pyctp.CSgitFtdcTraderOfferField_LastReportDate_set)
    __swig_setmethods__["LastReportTime"] = _pyctp.CSgitFtdcTraderOfferField_LastReportTime_set
    __swig_getmethods__["LastReportTime"] = _pyctp.CSgitFtdcTraderOfferField_LastReportTime_get
    if _newclass:
        LastReportTime = _swig_property(_pyctp.CSgitFtdcTraderOfferField_LastReportTime_get, _pyctp.CSgitFtdcTraderOfferField_LastReportTime_set)
    __swig_setmethods__["ConnectDate"] = _pyctp.CSgitFtdcTraderOfferField_ConnectDate_set
    __swig_getmethods__["ConnectDate"] = _pyctp.CSgitFtdcTraderOfferField_ConnectDate_get
    if _newclass:
        ConnectDate = _swig_property(_pyctp.CSgitFtdcTraderOfferField_ConnectDate_get, _pyctp.CSgitFtdcTraderOfferField_ConnectDate_set)
    __swig_setmethods__["ConnectTime"] = _pyctp.CSgitFtdcTraderOfferField_ConnectTime_set
    __swig_getmethods__["ConnectTime"] = _pyctp.CSgitFtdcTraderOfferField_ConnectTime_get
    if _newclass:
        ConnectTime = _swig_property(_pyctp.CSgitFtdcTraderOfferField_ConnectTime_get, _pyctp.CSgitFtdcTraderOfferField_ConnectTime_set)
    __swig_setmethods__["StartDate"] = _pyctp.CSgitFtdcTraderOfferField_StartDate_set
    __swig_getmethods__["StartDate"] = _pyctp.CSgitFtdcTraderOfferField_StartDate_get
    if _newclass:
        StartDate = _swig_property(_pyctp.CSgitFtdcTraderOfferField_StartDate_get, _pyctp.CSgitFtdcTraderOfferField_StartDate_set)
    __swig_setmethods__["StartTime"] = _pyctp.CSgitFtdcTraderOfferField_StartTime_set
    __swig_getmethods__["StartTime"] = _pyctp.CSgitFtdcTraderOfferField_StartTime_get
    if _newclass:
        StartTime = _swig_property(_pyctp.CSgitFtdcTraderOfferField_StartTime_get, _pyctp.CSgitFtdcTraderOfferField_StartTime_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcTraderOfferField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcTraderOfferField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcTraderOfferField_TradingDay_get, _pyctp.CSgitFtdcTraderOfferField_TradingDay_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcTraderOfferField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcTraderOfferField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcTraderOfferField_BrokerID_get, _pyctp.CSgitFtdcTraderOfferField_BrokerID_set)
    __swig_setmethods__["MaxTradeID"] = _pyctp.CSgitFtdcTraderOfferField_MaxTradeID_set
    __swig_getmethods__["MaxTradeID"] = _pyctp.CSgitFtdcTraderOfferField_MaxTradeID_get
    if _newclass:
        MaxTradeID = _swig_property(_pyctp.CSgitFtdcTraderOfferField_MaxTradeID_get, _pyctp.CSgitFtdcTraderOfferField_MaxTradeID_set)
    __swig_setmethods__["MaxOrderMessageReference"] = _pyctp.CSgitFtdcTraderOfferField_MaxOrderMessageReference_set
    __swig_getmethods__["MaxOrderMessageReference"] = _pyctp.CSgitFtdcTraderOfferField_MaxOrderMessageReference_get
    if _newclass:
        MaxOrderMessageReference = _swig_property(_pyctp.CSgitFtdcTraderOfferField_MaxOrderMessageReference_get, _pyctp.CSgitFtdcTraderOfferField_MaxOrderMessageReference_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTraderOfferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTraderOfferField
    __del__ = lambda self: None
CSgitFtdcTraderOfferField_swigregister = _pyctp.CSgitFtdcTraderOfferField_swigregister
CSgitFtdcTraderOfferField_swigregister(CSgitFtdcTraderOfferField)

class CSgitFtdcSettlementInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcSettlementInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcSettlementInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcSettlementInfoField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcSettlementInfoField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcSettlementInfoField_TradingDay_get, _pyctp.CSgitFtdcSettlementInfoField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CSgitFtdcSettlementInfoField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CSgitFtdcSettlementInfoField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CSgitFtdcSettlementInfoField_SettlementID_get, _pyctp.CSgitFtdcSettlementInfoField_SettlementID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcSettlementInfoField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcSettlementInfoField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcSettlementInfoField_BrokerID_get, _pyctp.CSgitFtdcSettlementInfoField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcSettlementInfoField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcSettlementInfoField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcSettlementInfoField_InvestorID_get, _pyctp.CSgitFtdcSettlementInfoField_InvestorID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CSgitFtdcSettlementInfoField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CSgitFtdcSettlementInfoField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CSgitFtdcSettlementInfoField_SequenceNo_get, _pyctp.CSgitFtdcSettlementInfoField_SequenceNo_set)
    __swig_setmethods__["Content"] = _pyctp.CSgitFtdcSettlementInfoField_Content_set
    __swig_getmethods__["Content"] = _pyctp.CSgitFtdcSettlementInfoField_Content_get
    if _newclass:
        Content = _swig_property(_pyctp.CSgitFtdcSettlementInfoField_Content_get, _pyctp.CSgitFtdcSettlementInfoField_Content_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcSettlementInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcSettlementInfoField
    __del__ = lambda self: None
CSgitFtdcSettlementInfoField_swigregister = _pyctp.CSgitFtdcSettlementInfoField_swigregister
CSgitFtdcSettlementInfoField_swigregister(CSgitFtdcSettlementInfoField)

class CSgitFtdcInstrumentMarginRateAdjustField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcInstrumentMarginRateAdjustField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcInstrumentMarginRateAdjustField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateAdjustField_InstrumentID_get, _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateAdjustField_InvestorRange_get, _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateAdjustField_BrokerID_get, _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateAdjustField_InvestorID_get, _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_InvestorID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateAdjustField_HedgeFlag_get, _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_HedgeFlag_set)
    __swig_setmethods__["LongMarginRatioByMoney"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_set
    __swig_getmethods__["LongMarginRatioByMoney"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_get
    if _newclass:
        LongMarginRatioByMoney = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_get, _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_set)
    __swig_setmethods__["LongMarginRatioByVolume"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_set
    __swig_getmethods__["LongMarginRatioByVolume"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_get
    if _newclass:
        LongMarginRatioByVolume = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_get, _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_set)
    __swig_setmethods__["ShortMarginRatioByMoney"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_set
    __swig_getmethods__["ShortMarginRatioByMoney"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_get
    if _newclass:
        ShortMarginRatioByMoney = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_get, _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_set)
    __swig_setmethods__["ShortMarginRatioByVolume"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_set
    __swig_getmethods__["ShortMarginRatioByVolume"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_get
    if _newclass:
        ShortMarginRatioByVolume = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_get, _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_set)
    __swig_setmethods__["IsRelative"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_IsRelative_set
    __swig_getmethods__["IsRelative"] = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_IsRelative_get
    if _newclass:
        IsRelative = _swig_property(_pyctp.CSgitFtdcInstrumentMarginRateAdjustField_IsRelative_get, _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_IsRelative_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcInstrumentMarginRateAdjustField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcInstrumentMarginRateAdjustField
    __del__ = lambda self: None
CSgitFtdcInstrumentMarginRateAdjustField_swigregister = _pyctp.CSgitFtdcInstrumentMarginRateAdjustField_swigregister
CSgitFtdcInstrumentMarginRateAdjustField_swigregister(CSgitFtdcInstrumentMarginRateAdjustField)

class CSgitFtdcExchangeMarginRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcExchangeMarginRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcExchangeMarginRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcExchangeMarginRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcExchangeMarginRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateField_BrokerID_get, _pyctp.CSgitFtdcExchangeMarginRateField_BrokerID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcExchangeMarginRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcExchangeMarginRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateField_InstrumentID_get, _pyctp.CSgitFtdcExchangeMarginRateField_InstrumentID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CSgitFtdcExchangeMarginRateField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CSgitFtdcExchangeMarginRateField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateField_HedgeFlag_get, _pyctp.CSgitFtdcExchangeMarginRateField_HedgeFlag_set)
    __swig_setmethods__["LongMarginRatioByMoney"] = _pyctp.CSgitFtdcExchangeMarginRateField_LongMarginRatioByMoney_set
    __swig_getmethods__["LongMarginRatioByMoney"] = _pyctp.CSgitFtdcExchangeMarginRateField_LongMarginRatioByMoney_get
    if _newclass:
        LongMarginRatioByMoney = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateField_LongMarginRatioByMoney_get, _pyctp.CSgitFtdcExchangeMarginRateField_LongMarginRatioByMoney_set)
    __swig_setmethods__["LongMarginRatioByVolume"] = _pyctp.CSgitFtdcExchangeMarginRateField_LongMarginRatioByVolume_set
    __swig_getmethods__["LongMarginRatioByVolume"] = _pyctp.CSgitFtdcExchangeMarginRateField_LongMarginRatioByVolume_get
    if _newclass:
        LongMarginRatioByVolume = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateField_LongMarginRatioByVolume_get, _pyctp.CSgitFtdcExchangeMarginRateField_LongMarginRatioByVolume_set)
    __swig_setmethods__["ShortMarginRatioByMoney"] = _pyctp.CSgitFtdcExchangeMarginRateField_ShortMarginRatioByMoney_set
    __swig_getmethods__["ShortMarginRatioByMoney"] = _pyctp.CSgitFtdcExchangeMarginRateField_ShortMarginRatioByMoney_get
    if _newclass:
        ShortMarginRatioByMoney = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateField_ShortMarginRatioByMoney_get, _pyctp.CSgitFtdcExchangeMarginRateField_ShortMarginRatioByMoney_set)
    __swig_setmethods__["ShortMarginRatioByVolume"] = _pyctp.CSgitFtdcExchangeMarginRateField_ShortMarginRatioByVolume_set
    __swig_getmethods__["ShortMarginRatioByVolume"] = _pyctp.CSgitFtdcExchangeMarginRateField_ShortMarginRatioByVolume_get
    if _newclass:
        ShortMarginRatioByVolume = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateField_ShortMarginRatioByVolume_get, _pyctp.CSgitFtdcExchangeMarginRateField_ShortMarginRatioByVolume_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcExchangeMarginRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcExchangeMarginRateField
    __del__ = lambda self: None
CSgitFtdcExchangeMarginRateField_swigregister = _pyctp.CSgitFtdcExchangeMarginRateField_swigregister
CSgitFtdcExchangeMarginRateField_swigregister(CSgitFtdcExchangeMarginRateField)

class CSgitFtdcExchangeMarginRateAdjustField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcExchangeMarginRateAdjustField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcExchangeMarginRateAdjustField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateAdjustField_BrokerID_get, _pyctp.CSgitFtdcExchangeMarginRateAdjustField_BrokerID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateAdjustField_InstrumentID_get, _pyctp.CSgitFtdcExchangeMarginRateAdjustField_InstrumentID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateAdjustField_HedgeFlag_get, _pyctp.CSgitFtdcExchangeMarginRateAdjustField_HedgeFlag_set)
    __swig_setmethods__["LongMarginRatioByMoney"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_set
    __swig_getmethods__["LongMarginRatioByMoney"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_get
    if _newclass:
        LongMarginRatioByMoney = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_get, _pyctp.CSgitFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_set)
    __swig_setmethods__["LongMarginRatioByVolume"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_set
    __swig_getmethods__["LongMarginRatioByVolume"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_get
    if _newclass:
        LongMarginRatioByVolume = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_get, _pyctp.CSgitFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_set)
    __swig_setmethods__["ShortMarginRatioByMoney"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_set
    __swig_getmethods__["ShortMarginRatioByMoney"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_get
    if _newclass:
        ShortMarginRatioByMoney = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_get, _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_set)
    __swig_setmethods__["ShortMarginRatioByVolume"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_set
    __swig_getmethods__["ShortMarginRatioByVolume"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_get
    if _newclass:
        ShortMarginRatioByVolume = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_get, _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_set)
    __swig_setmethods__["ExchLongMarginRatioByMoney"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_set
    __swig_getmethods__["ExchLongMarginRatioByMoney"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_get
    if _newclass:
        ExchLongMarginRatioByMoney = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_get, _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_set)
    __swig_setmethods__["ExchLongMarginRatioByVolume"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_set
    __swig_getmethods__["ExchLongMarginRatioByVolume"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_get
    if _newclass:
        ExchLongMarginRatioByVolume = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_get, _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_set)
    __swig_setmethods__["ExchShortMarginRatioByMoney"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_set
    __swig_getmethods__["ExchShortMarginRatioByMoney"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_get
    if _newclass:
        ExchShortMarginRatioByMoney = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_get, _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_set)
    __swig_setmethods__["ExchShortMarginRatioByVolume"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_set
    __swig_getmethods__["ExchShortMarginRatioByVolume"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_get
    if _newclass:
        ExchShortMarginRatioByVolume = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_get, _pyctp.CSgitFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_set)
    __swig_setmethods__["NoLongMarginRatioByMoney"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_set
    __swig_getmethods__["NoLongMarginRatioByMoney"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_get
    if _newclass:
        NoLongMarginRatioByMoney = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_get, _pyctp.CSgitFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_set)
    __swig_setmethods__["NoLongMarginRatioByVolume"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_set
    __swig_getmethods__["NoLongMarginRatioByVolume"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_get
    if _newclass:
        NoLongMarginRatioByVolume = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_get, _pyctp.CSgitFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_set)
    __swig_setmethods__["NoShortMarginRatioByMoney"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_set
    __swig_getmethods__["NoShortMarginRatioByMoney"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_get
    if _newclass:
        NoShortMarginRatioByMoney = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_get, _pyctp.CSgitFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_set)
    __swig_setmethods__["NoShortMarginRatioByVolume"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_set
    __swig_getmethods__["NoShortMarginRatioByVolume"] = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_get
    if _newclass:
        NoShortMarginRatioByVolume = _swig_property(_pyctp.CSgitFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_get, _pyctp.CSgitFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcExchangeMarginRateAdjustField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcExchangeMarginRateAdjustField
    __del__ = lambda self: None
CSgitFtdcExchangeMarginRateAdjustField_swigregister = _pyctp.CSgitFtdcExchangeMarginRateAdjustField_swigregister
CSgitFtdcExchangeMarginRateAdjustField_swigregister(CSgitFtdcExchangeMarginRateAdjustField)

class CSgitFtdcSettlementRefField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcSettlementRefField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcSettlementRefField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcSettlementRefField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcSettlementRefField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcSettlementRefField_TradingDay_get, _pyctp.CSgitFtdcSettlementRefField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CSgitFtdcSettlementRefField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CSgitFtdcSettlementRefField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CSgitFtdcSettlementRefField_SettlementID_get, _pyctp.CSgitFtdcSettlementRefField_SettlementID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcSettlementRefField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcSettlementRefField
    __del__ = lambda self: None
CSgitFtdcSettlementRefField_swigregister = _pyctp.CSgitFtdcSettlementRefField_swigregister
CSgitFtdcSettlementRefField_swigregister(CSgitFtdcSettlementRefField)

class CSgitFtdcCurrentTimeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcCurrentTimeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcCurrentTimeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["CurrDate"] = _pyctp.CSgitFtdcCurrentTimeField_CurrDate_set
    __swig_getmethods__["CurrDate"] = _pyctp.CSgitFtdcCurrentTimeField_CurrDate_get
    if _newclass:
        CurrDate = _swig_property(_pyctp.CSgitFtdcCurrentTimeField_CurrDate_get, _pyctp.CSgitFtdcCurrentTimeField_CurrDate_set)
    __swig_setmethods__["CurrTime"] = _pyctp.CSgitFtdcCurrentTimeField_CurrTime_set
    __swig_getmethods__["CurrTime"] = _pyctp.CSgitFtdcCurrentTimeField_CurrTime_get
    if _newclass:
        CurrTime = _swig_property(_pyctp.CSgitFtdcCurrentTimeField_CurrTime_get, _pyctp.CSgitFtdcCurrentTimeField_CurrTime_set)
    __swig_setmethods__["CurrMillisec"] = _pyctp.CSgitFtdcCurrentTimeField_CurrMillisec_set
    __swig_getmethods__["CurrMillisec"] = _pyctp.CSgitFtdcCurrentTimeField_CurrMillisec_get
    if _newclass:
        CurrMillisec = _swig_property(_pyctp.CSgitFtdcCurrentTimeField_CurrMillisec_get, _pyctp.CSgitFtdcCurrentTimeField_CurrMillisec_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcCurrentTimeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcCurrentTimeField
    __del__ = lambda self: None
CSgitFtdcCurrentTimeField_swigregister = _pyctp.CSgitFtdcCurrentTimeField_swigregister
CSgitFtdcCurrentTimeField_swigregister(CSgitFtdcCurrentTimeField)

class CSgitFtdcCommPhaseField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcCommPhaseField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcCommPhaseField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcCommPhaseField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcCommPhaseField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcCommPhaseField_TradingDay_get, _pyctp.CSgitFtdcCommPhaseField_TradingDay_set)
    __swig_setmethods__["CommPhaseNo"] = _pyctp.CSgitFtdcCommPhaseField_CommPhaseNo_set
    __swig_getmethods__["CommPhaseNo"] = _pyctp.CSgitFtdcCommPhaseField_CommPhaseNo_get
    if _newclass:
        CommPhaseNo = _swig_property(_pyctp.CSgitFtdcCommPhaseField_CommPhaseNo_get, _pyctp.CSgitFtdcCommPhaseField_CommPhaseNo_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcCommPhaseField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcCommPhaseField
    __del__ = lambda self: None
CSgitFtdcCommPhaseField_swigregister = _pyctp.CSgitFtdcCommPhaseField_swigregister
CSgitFtdcCommPhaseField_swigregister(CSgitFtdcCommPhaseField)

class CSgitFtdcLoginInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcLoginInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcLoginInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FrontID"] = _pyctp.CSgitFtdcLoginInfoField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CSgitFtdcLoginInfoField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CSgitFtdcLoginInfoField_FrontID_get, _pyctp.CSgitFtdcLoginInfoField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcLoginInfoField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcLoginInfoField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcLoginInfoField_SessionID_get, _pyctp.CSgitFtdcLoginInfoField_SessionID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcLoginInfoField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcLoginInfoField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcLoginInfoField_BrokerID_get, _pyctp.CSgitFtdcLoginInfoField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcLoginInfoField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcLoginInfoField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcLoginInfoField_UserID_get, _pyctp.CSgitFtdcLoginInfoField_UserID_set)
    __swig_setmethods__["LoginDate"] = _pyctp.CSgitFtdcLoginInfoField_LoginDate_set
    __swig_getmethods__["LoginDate"] = _pyctp.CSgitFtdcLoginInfoField_LoginDate_get
    if _newclass:
        LoginDate = _swig_property(_pyctp.CSgitFtdcLoginInfoField_LoginDate_get, _pyctp.CSgitFtdcLoginInfoField_LoginDate_set)
    __swig_setmethods__["LoginTime"] = _pyctp.CSgitFtdcLoginInfoField_LoginTime_set
    __swig_getmethods__["LoginTime"] = _pyctp.CSgitFtdcLoginInfoField_LoginTime_get
    if _newclass:
        LoginTime = _swig_property(_pyctp.CSgitFtdcLoginInfoField_LoginTime_get, _pyctp.CSgitFtdcLoginInfoField_LoginTime_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CSgitFtdcLoginInfoField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CSgitFtdcLoginInfoField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CSgitFtdcLoginInfoField_IPAddress_get, _pyctp.CSgitFtdcLoginInfoField_IPAddress_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CSgitFtdcLoginInfoField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CSgitFtdcLoginInfoField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CSgitFtdcLoginInfoField_UserProductInfo_get, _pyctp.CSgitFtdcLoginInfoField_UserProductInfo_set)
    __swig_setmethods__["InterfaceProductInfo"] = _pyctp.CSgitFtdcLoginInfoField_InterfaceProductInfo_set
    __swig_getmethods__["InterfaceProductInfo"] = _pyctp.CSgitFtdcLoginInfoField_InterfaceProductInfo_get
    if _newclass:
        InterfaceProductInfo = _swig_property(_pyctp.CSgitFtdcLoginInfoField_InterfaceProductInfo_get, _pyctp.CSgitFtdcLoginInfoField_InterfaceProductInfo_set)
    __swig_setmethods__["ProtocolInfo"] = _pyctp.CSgitFtdcLoginInfoField_ProtocolInfo_set
    __swig_getmethods__["ProtocolInfo"] = _pyctp.CSgitFtdcLoginInfoField_ProtocolInfo_get
    if _newclass:
        ProtocolInfo = _swig_property(_pyctp.CSgitFtdcLoginInfoField_ProtocolInfo_get, _pyctp.CSgitFtdcLoginInfoField_ProtocolInfo_set)
    __swig_setmethods__["SystemName"] = _pyctp.CSgitFtdcLoginInfoField_SystemName_set
    __swig_getmethods__["SystemName"] = _pyctp.CSgitFtdcLoginInfoField_SystemName_get
    if _newclass:
        SystemName = _swig_property(_pyctp.CSgitFtdcLoginInfoField_SystemName_get, _pyctp.CSgitFtdcLoginInfoField_SystemName_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcLoginInfoField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcLoginInfoField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcLoginInfoField_Password_get, _pyctp.CSgitFtdcLoginInfoField_Password_set)
    __swig_setmethods__["MaxOrderRef"] = _pyctp.CSgitFtdcLoginInfoField_MaxOrderRef_set
    __swig_getmethods__["MaxOrderRef"] = _pyctp.CSgitFtdcLoginInfoField_MaxOrderRef_get
    if _newclass:
        MaxOrderRef = _swig_property(_pyctp.CSgitFtdcLoginInfoField_MaxOrderRef_get, _pyctp.CSgitFtdcLoginInfoField_MaxOrderRef_set)
    __swig_setmethods__["SHFETime"] = _pyctp.CSgitFtdcLoginInfoField_SHFETime_set
    __swig_getmethods__["SHFETime"] = _pyctp.CSgitFtdcLoginInfoField_SHFETime_get
    if _newclass:
        SHFETime = _swig_property(_pyctp.CSgitFtdcLoginInfoField_SHFETime_get, _pyctp.CSgitFtdcLoginInfoField_SHFETime_set)
    __swig_setmethods__["DCETime"] = _pyctp.CSgitFtdcLoginInfoField_DCETime_set
    __swig_getmethods__["DCETime"] = _pyctp.CSgitFtdcLoginInfoField_DCETime_get
    if _newclass:
        DCETime = _swig_property(_pyctp.CSgitFtdcLoginInfoField_DCETime_get, _pyctp.CSgitFtdcLoginInfoField_DCETime_set)
    __swig_setmethods__["CZCETime"] = _pyctp.CSgitFtdcLoginInfoField_CZCETime_set
    __swig_getmethods__["CZCETime"] = _pyctp.CSgitFtdcLoginInfoField_CZCETime_get
    if _newclass:
        CZCETime = _swig_property(_pyctp.CSgitFtdcLoginInfoField_CZCETime_get, _pyctp.CSgitFtdcLoginInfoField_CZCETime_set)
    __swig_setmethods__["FFEXTime"] = _pyctp.CSgitFtdcLoginInfoField_FFEXTime_set
    __swig_getmethods__["FFEXTime"] = _pyctp.CSgitFtdcLoginInfoField_FFEXTime_get
    if _newclass:
        FFEXTime = _swig_property(_pyctp.CSgitFtdcLoginInfoField_FFEXTime_get, _pyctp.CSgitFtdcLoginInfoField_FFEXTime_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CSgitFtdcLoginInfoField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CSgitFtdcLoginInfoField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CSgitFtdcLoginInfoField_MacAddress_get, _pyctp.CSgitFtdcLoginInfoField_MacAddress_set)
    __swig_setmethods__["OneTimePassword"] = _pyctp.CSgitFtdcLoginInfoField_OneTimePassword_set
    __swig_getmethods__["OneTimePassword"] = _pyctp.CSgitFtdcLoginInfoField_OneTimePassword_get
    if _newclass:
        OneTimePassword = _swig_property(_pyctp.CSgitFtdcLoginInfoField_OneTimePassword_get, _pyctp.CSgitFtdcLoginInfoField_OneTimePassword_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcLoginInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcLoginInfoField
    __del__ = lambda self: None
CSgitFtdcLoginInfoField_swigregister = _pyctp.CSgitFtdcLoginInfoField_swigregister
CSgitFtdcLoginInfoField_swigregister(CSgitFtdcLoginInfoField)

class CSgitFtdcLogoutAllField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcLogoutAllField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcLogoutAllField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FrontID"] = _pyctp.CSgitFtdcLogoutAllField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CSgitFtdcLogoutAllField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CSgitFtdcLogoutAllField_FrontID_get, _pyctp.CSgitFtdcLogoutAllField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcLogoutAllField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcLogoutAllField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcLogoutAllField_SessionID_get, _pyctp.CSgitFtdcLogoutAllField_SessionID_set)
    __swig_setmethods__["SystemName"] = _pyctp.CSgitFtdcLogoutAllField_SystemName_set
    __swig_getmethods__["SystemName"] = _pyctp.CSgitFtdcLogoutAllField_SystemName_get
    if _newclass:
        SystemName = _swig_property(_pyctp.CSgitFtdcLogoutAllField_SystemName_get, _pyctp.CSgitFtdcLogoutAllField_SystemName_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcLogoutAllField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcLogoutAllField
    __del__ = lambda self: None
CSgitFtdcLogoutAllField_swigregister = _pyctp.CSgitFtdcLogoutAllField_swigregister
CSgitFtdcLogoutAllField_swigregister(CSgitFtdcLogoutAllField)

class CSgitFtdcFrontStatusField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcFrontStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcFrontStatusField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FrontID"] = _pyctp.CSgitFtdcFrontStatusField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CSgitFtdcFrontStatusField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CSgitFtdcFrontStatusField_FrontID_get, _pyctp.CSgitFtdcFrontStatusField_FrontID_set)
    __swig_setmethods__["LastReportDate"] = _pyctp.CSgitFtdcFrontStatusField_LastReportDate_set
    __swig_getmethods__["LastReportDate"] = _pyctp.CSgitFtdcFrontStatusField_LastReportDate_get
    if _newclass:
        LastReportDate = _swig_property(_pyctp.CSgitFtdcFrontStatusField_LastReportDate_get, _pyctp.CSgitFtdcFrontStatusField_LastReportDate_set)
    __swig_setmethods__["LastReportTime"] = _pyctp.CSgitFtdcFrontStatusField_LastReportTime_set
    __swig_getmethods__["LastReportTime"] = _pyctp.CSgitFtdcFrontStatusField_LastReportTime_get
    if _newclass:
        LastReportTime = _swig_property(_pyctp.CSgitFtdcFrontStatusField_LastReportTime_get, _pyctp.CSgitFtdcFrontStatusField_LastReportTime_set)
    __swig_setmethods__["IsActive"] = _pyctp.CSgitFtdcFrontStatusField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CSgitFtdcFrontStatusField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CSgitFtdcFrontStatusField_IsActive_get, _pyctp.CSgitFtdcFrontStatusField_IsActive_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcFrontStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcFrontStatusField
    __del__ = lambda self: None
CSgitFtdcFrontStatusField_swigregister = _pyctp.CSgitFtdcFrontStatusField_swigregister
CSgitFtdcFrontStatusField_swigregister(CSgitFtdcFrontStatusField)

class CSgitFtdcUserPasswordUpdateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcUserPasswordUpdateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcUserPasswordUpdateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcUserPasswordUpdateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcUserPasswordUpdateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcUserPasswordUpdateField_BrokerID_get, _pyctp.CSgitFtdcUserPasswordUpdateField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcUserPasswordUpdateField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcUserPasswordUpdateField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcUserPasswordUpdateField_UserID_get, _pyctp.CSgitFtdcUserPasswordUpdateField_UserID_set)
    __swig_setmethods__["OldPassword"] = _pyctp.CSgitFtdcUserPasswordUpdateField_OldPassword_set
    __swig_getmethods__["OldPassword"] = _pyctp.CSgitFtdcUserPasswordUpdateField_OldPassword_get
    if _newclass:
        OldPassword = _swig_property(_pyctp.CSgitFtdcUserPasswordUpdateField_OldPassword_get, _pyctp.CSgitFtdcUserPasswordUpdateField_OldPassword_set)
    __swig_setmethods__["NewPassword"] = _pyctp.CSgitFtdcUserPasswordUpdateField_NewPassword_set
    __swig_getmethods__["NewPassword"] = _pyctp.CSgitFtdcUserPasswordUpdateField_NewPassword_get
    if _newclass:
        NewPassword = _swig_property(_pyctp.CSgitFtdcUserPasswordUpdateField_NewPassword_get, _pyctp.CSgitFtdcUserPasswordUpdateField_NewPassword_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcUserPasswordUpdateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcUserPasswordUpdateField
    __del__ = lambda self: None
CSgitFtdcUserPasswordUpdateField_swigregister = _pyctp.CSgitFtdcUserPasswordUpdateField_swigregister
CSgitFtdcUserPasswordUpdateField_swigregister(CSgitFtdcUserPasswordUpdateField)

class CSgitFtdcInputOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcInputOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcInputOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcInputOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcInputOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcInputOrderField_BrokerID_get, _pyctp.CSgitFtdcInputOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcInputOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcInputOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcInputOrderField_InvestorID_get, _pyctp.CSgitFtdcInputOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcInputOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcInputOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcInputOrderField_InstrumentID_get, _pyctp.CSgitFtdcInputOrderField_InstrumentID_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CSgitFtdcInputOrderField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CSgitFtdcInputOrderField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CSgitFtdcInputOrderField_OrderRef_get, _pyctp.CSgitFtdcInputOrderField_OrderRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcInputOrderField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcInputOrderField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcInputOrderField_UserID_get, _pyctp.CSgitFtdcInputOrderField_UserID_set)
    __swig_setmethods__["OrderPriceType"] = _pyctp.CSgitFtdcInputOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _pyctp.CSgitFtdcInputOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_pyctp.CSgitFtdcInputOrderField_OrderPriceType_get, _pyctp.CSgitFtdcInputOrderField_OrderPriceType_set)
    __swig_setmethods__["Direction"] = _pyctp.CSgitFtdcInputOrderField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CSgitFtdcInputOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CSgitFtdcInputOrderField_Direction_get, _pyctp.CSgitFtdcInputOrderField_Direction_set)
    __swig_setmethods__["CombOffsetFlag"] = _pyctp.CSgitFtdcInputOrderField_CombOffsetFlag_set
    __swig_getmethods__["CombOffsetFlag"] = _pyctp.CSgitFtdcInputOrderField_CombOffsetFlag_get
    if _newclass:
        CombOffsetFlag = _swig_property(_pyctp.CSgitFtdcInputOrderField_CombOffsetFlag_get, _pyctp.CSgitFtdcInputOrderField_CombOffsetFlag_set)
    __swig_setmethods__["CombHedgeFlag"] = _pyctp.CSgitFtdcInputOrderField_CombHedgeFlag_set
    __swig_getmethods__["CombHedgeFlag"] = _pyctp.CSgitFtdcInputOrderField_CombHedgeFlag_get
    if _newclass:
        CombHedgeFlag = _swig_property(_pyctp.CSgitFtdcInputOrderField_CombHedgeFlag_get, _pyctp.CSgitFtdcInputOrderField_CombHedgeFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CSgitFtdcInputOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CSgitFtdcInputOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CSgitFtdcInputOrderField_LimitPrice_get, _pyctp.CSgitFtdcInputOrderField_LimitPrice_set)
    __swig_setmethods__["VolumeTotalOriginal"] = _pyctp.CSgitFtdcInputOrderField_VolumeTotalOriginal_set
    __swig_getmethods__["VolumeTotalOriginal"] = _pyctp.CSgitFtdcInputOrderField_VolumeTotalOriginal_get
    if _newclass:
        VolumeTotalOriginal = _swig_property(_pyctp.CSgitFtdcInputOrderField_VolumeTotalOriginal_get, _pyctp.CSgitFtdcInputOrderField_VolumeTotalOriginal_set)
    __swig_setmethods__["TimeCondition"] = _pyctp.CSgitFtdcInputOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _pyctp.CSgitFtdcInputOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_pyctp.CSgitFtdcInputOrderField_TimeCondition_get, _pyctp.CSgitFtdcInputOrderField_TimeCondition_set)
    __swig_setmethods__["GTDDate"] = _pyctp.CSgitFtdcInputOrderField_GTDDate_set
    __swig_getmethods__["GTDDate"] = _pyctp.CSgitFtdcInputOrderField_GTDDate_get
    if _newclass:
        GTDDate = _swig_property(_pyctp.CSgitFtdcInputOrderField_GTDDate_get, _pyctp.CSgitFtdcInputOrderField_GTDDate_set)
    __swig_setmethods__["VolumeCondition"] = _pyctp.CSgitFtdcInputOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _pyctp.CSgitFtdcInputOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_pyctp.CSgitFtdcInputOrderField_VolumeCondition_get, _pyctp.CSgitFtdcInputOrderField_VolumeCondition_set)
    __swig_setmethods__["MinVolume"] = _pyctp.CSgitFtdcInputOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _pyctp.CSgitFtdcInputOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_pyctp.CSgitFtdcInputOrderField_MinVolume_get, _pyctp.CSgitFtdcInputOrderField_MinVolume_set)
    __swig_setmethods__["ContingentCondition"] = _pyctp.CSgitFtdcInputOrderField_ContingentCondition_set
    __swig_getmethods__["ContingentCondition"] = _pyctp.CSgitFtdcInputOrderField_ContingentCondition_get
    if _newclass:
        ContingentCondition = _swig_property(_pyctp.CSgitFtdcInputOrderField_ContingentCondition_get, _pyctp.CSgitFtdcInputOrderField_ContingentCondition_set)
    __swig_setmethods__["StopPrice"] = _pyctp.CSgitFtdcInputOrderField_StopPrice_set
    __swig_getmethods__["StopPrice"] = _pyctp.CSgitFtdcInputOrderField_StopPrice_get
    if _newclass:
        StopPrice = _swig_property(_pyctp.CSgitFtdcInputOrderField_StopPrice_get, _pyctp.CSgitFtdcInputOrderField_StopPrice_set)
    __swig_setmethods__["ForceCloseReason"] = _pyctp.CSgitFtdcInputOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _pyctp.CSgitFtdcInputOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_pyctp.CSgitFtdcInputOrderField_ForceCloseReason_get, _pyctp.CSgitFtdcInputOrderField_ForceCloseReason_set)
    __swig_setmethods__["IsAutoSuspend"] = _pyctp.CSgitFtdcInputOrderField_IsAutoSuspend_set
    __swig_getmethods__["IsAutoSuspend"] = _pyctp.CSgitFtdcInputOrderField_IsAutoSuspend_get
    if _newclass:
        IsAutoSuspend = _swig_property(_pyctp.CSgitFtdcInputOrderField_IsAutoSuspend_get, _pyctp.CSgitFtdcInputOrderField_IsAutoSuspend_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CSgitFtdcInputOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CSgitFtdcInputOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CSgitFtdcInputOrderField_BusinessUnit_get, _pyctp.CSgitFtdcInputOrderField_BusinessUnit_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcInputOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcInputOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcInputOrderField_RequestID_get, _pyctp.CSgitFtdcInputOrderField_RequestID_set)
    __swig_setmethods__["UserForceClose"] = _pyctp.CSgitFtdcInputOrderField_UserForceClose_set
    __swig_getmethods__["UserForceClose"] = _pyctp.CSgitFtdcInputOrderField_UserForceClose_get
    if _newclass:
        UserForceClose = _swig_property(_pyctp.CSgitFtdcInputOrderField_UserForceClose_get, _pyctp.CSgitFtdcInputOrderField_UserForceClose_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcInputOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcInputOrderField
    __del__ = lambda self: None
CSgitFtdcInputOrderField_swigregister = _pyctp.CSgitFtdcInputOrderField_swigregister
CSgitFtdcInputOrderField_swigregister(CSgitFtdcInputOrderField)

class CSgitFtdcOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcOrderField_BrokerID_get, _pyctp.CSgitFtdcOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcOrderField_InvestorID_get, _pyctp.CSgitFtdcOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcOrderField_InstrumentID_get, _pyctp.CSgitFtdcOrderField_InstrumentID_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CSgitFtdcOrderField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CSgitFtdcOrderField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CSgitFtdcOrderField_OrderRef_get, _pyctp.CSgitFtdcOrderField_OrderRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcOrderField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcOrderField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcOrderField_UserID_get, _pyctp.CSgitFtdcOrderField_UserID_set)
    __swig_setmethods__["OrderPriceType"] = _pyctp.CSgitFtdcOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _pyctp.CSgitFtdcOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_pyctp.CSgitFtdcOrderField_OrderPriceType_get, _pyctp.CSgitFtdcOrderField_OrderPriceType_set)
    __swig_setmethods__["Direction"] = _pyctp.CSgitFtdcOrderField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CSgitFtdcOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CSgitFtdcOrderField_Direction_get, _pyctp.CSgitFtdcOrderField_Direction_set)
    __swig_setmethods__["CombOffsetFlag"] = _pyctp.CSgitFtdcOrderField_CombOffsetFlag_set
    __swig_getmethods__["CombOffsetFlag"] = _pyctp.CSgitFtdcOrderField_CombOffsetFlag_get
    if _newclass:
        CombOffsetFlag = _swig_property(_pyctp.CSgitFtdcOrderField_CombOffsetFlag_get, _pyctp.CSgitFtdcOrderField_CombOffsetFlag_set)
    __swig_setmethods__["CombHedgeFlag"] = _pyctp.CSgitFtdcOrderField_CombHedgeFlag_set
    __swig_getmethods__["CombHedgeFlag"] = _pyctp.CSgitFtdcOrderField_CombHedgeFlag_get
    if _newclass:
        CombHedgeFlag = _swig_property(_pyctp.CSgitFtdcOrderField_CombHedgeFlag_get, _pyctp.CSgitFtdcOrderField_CombHedgeFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CSgitFtdcOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CSgitFtdcOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CSgitFtdcOrderField_LimitPrice_get, _pyctp.CSgitFtdcOrderField_LimitPrice_set)
    __swig_setmethods__["VolumeTotalOriginal"] = _pyctp.CSgitFtdcOrderField_VolumeTotalOriginal_set
    __swig_getmethods__["VolumeTotalOriginal"] = _pyctp.CSgitFtdcOrderField_VolumeTotalOriginal_get
    if _newclass:
        VolumeTotalOriginal = _swig_property(_pyctp.CSgitFtdcOrderField_VolumeTotalOriginal_get, _pyctp.CSgitFtdcOrderField_VolumeTotalOriginal_set)
    __swig_setmethods__["TimeCondition"] = _pyctp.CSgitFtdcOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _pyctp.CSgitFtdcOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_pyctp.CSgitFtdcOrderField_TimeCondition_get, _pyctp.CSgitFtdcOrderField_TimeCondition_set)
    __swig_setmethods__["GTDDate"] = _pyctp.CSgitFtdcOrderField_GTDDate_set
    __swig_getmethods__["GTDDate"] = _pyctp.CSgitFtdcOrderField_GTDDate_get
    if _newclass:
        GTDDate = _swig_property(_pyctp.CSgitFtdcOrderField_GTDDate_get, _pyctp.CSgitFtdcOrderField_GTDDate_set)
    __swig_setmethods__["VolumeCondition"] = _pyctp.CSgitFtdcOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _pyctp.CSgitFtdcOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_pyctp.CSgitFtdcOrderField_VolumeCondition_get, _pyctp.CSgitFtdcOrderField_VolumeCondition_set)
    __swig_setmethods__["MinVolume"] = _pyctp.CSgitFtdcOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _pyctp.CSgitFtdcOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_pyctp.CSgitFtdcOrderField_MinVolume_get, _pyctp.CSgitFtdcOrderField_MinVolume_set)
    __swig_setmethods__["ContingentCondition"] = _pyctp.CSgitFtdcOrderField_ContingentCondition_set
    __swig_getmethods__["ContingentCondition"] = _pyctp.CSgitFtdcOrderField_ContingentCondition_get
    if _newclass:
        ContingentCondition = _swig_property(_pyctp.CSgitFtdcOrderField_ContingentCondition_get, _pyctp.CSgitFtdcOrderField_ContingentCondition_set)
    __swig_setmethods__["StopPrice"] = _pyctp.CSgitFtdcOrderField_StopPrice_set
    __swig_getmethods__["StopPrice"] = _pyctp.CSgitFtdcOrderField_StopPrice_get
    if _newclass:
        StopPrice = _swig_property(_pyctp.CSgitFtdcOrderField_StopPrice_get, _pyctp.CSgitFtdcOrderField_StopPrice_set)
    __swig_setmethods__["ForceCloseReason"] = _pyctp.CSgitFtdcOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _pyctp.CSgitFtdcOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_pyctp.CSgitFtdcOrderField_ForceCloseReason_get, _pyctp.CSgitFtdcOrderField_ForceCloseReason_set)
    __swig_setmethods__["IsAutoSuspend"] = _pyctp.CSgitFtdcOrderField_IsAutoSuspend_set
    __swig_getmethods__["IsAutoSuspend"] = _pyctp.CSgitFtdcOrderField_IsAutoSuspend_get
    if _newclass:
        IsAutoSuspend = _swig_property(_pyctp.CSgitFtdcOrderField_IsAutoSuspend_get, _pyctp.CSgitFtdcOrderField_IsAutoSuspend_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CSgitFtdcOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CSgitFtdcOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CSgitFtdcOrderField_BusinessUnit_get, _pyctp.CSgitFtdcOrderField_BusinessUnit_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcOrderField_RequestID_get, _pyctp.CSgitFtdcOrderField_RequestID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CSgitFtdcOrderField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CSgitFtdcOrderField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CSgitFtdcOrderField_OrderLocalID_get, _pyctp.CSgitFtdcOrderField_OrderLocalID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcOrderField_ExchangeID_get, _pyctp.CSgitFtdcOrderField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcOrderField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcOrderField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcOrderField_ParticipantID_get, _pyctp.CSgitFtdcOrderField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CSgitFtdcOrderField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CSgitFtdcOrderField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CSgitFtdcOrderField_ClientID_get, _pyctp.CSgitFtdcOrderField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcOrderField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcOrderField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CSgitFtdcOrderField_ExchangeInstID_get, _pyctp.CSgitFtdcOrderField_ExchangeInstID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcOrderField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcOrderField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcOrderField_TraderID_get, _pyctp.CSgitFtdcOrderField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcOrderField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcOrderField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcOrderField_InstallID_get, _pyctp.CSgitFtdcOrderField_InstallID_set)
    __swig_setmethods__["OrderSubmitStatus"] = _pyctp.CSgitFtdcOrderField_OrderSubmitStatus_set
    __swig_getmethods__["OrderSubmitStatus"] = _pyctp.CSgitFtdcOrderField_OrderSubmitStatus_get
    if _newclass:
        OrderSubmitStatus = _swig_property(_pyctp.CSgitFtdcOrderField_OrderSubmitStatus_get, _pyctp.CSgitFtdcOrderField_OrderSubmitStatus_set)
    __swig_setmethods__["NotifySequence"] = _pyctp.CSgitFtdcOrderField_NotifySequence_set
    __swig_getmethods__["NotifySequence"] = _pyctp.CSgitFtdcOrderField_NotifySequence_get
    if _newclass:
        NotifySequence = _swig_property(_pyctp.CSgitFtdcOrderField_NotifySequence_get, _pyctp.CSgitFtdcOrderField_NotifySequence_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcOrderField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcOrderField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcOrderField_TradingDay_get, _pyctp.CSgitFtdcOrderField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CSgitFtdcOrderField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CSgitFtdcOrderField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CSgitFtdcOrderField_SettlementID_get, _pyctp.CSgitFtdcOrderField_SettlementID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CSgitFtdcOrderField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CSgitFtdcOrderField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CSgitFtdcOrderField_OrderSysID_get, _pyctp.CSgitFtdcOrderField_OrderSysID_set)
    __swig_setmethods__["OrderSource"] = _pyctp.CSgitFtdcOrderField_OrderSource_set
    __swig_getmethods__["OrderSource"] = _pyctp.CSgitFtdcOrderField_OrderSource_get
    if _newclass:
        OrderSource = _swig_property(_pyctp.CSgitFtdcOrderField_OrderSource_get, _pyctp.CSgitFtdcOrderField_OrderSource_set)
    __swig_setmethods__["OrderStatus"] = _pyctp.CSgitFtdcOrderField_OrderStatus_set
    __swig_getmethods__["OrderStatus"] = _pyctp.CSgitFtdcOrderField_OrderStatus_get
    if _newclass:
        OrderStatus = _swig_property(_pyctp.CSgitFtdcOrderField_OrderStatus_get, _pyctp.CSgitFtdcOrderField_OrderStatus_set)
    __swig_setmethods__["OrderType"] = _pyctp.CSgitFtdcOrderField_OrderType_set
    __swig_getmethods__["OrderType"] = _pyctp.CSgitFtdcOrderField_OrderType_get
    if _newclass:
        OrderType = _swig_property(_pyctp.CSgitFtdcOrderField_OrderType_get, _pyctp.CSgitFtdcOrderField_OrderType_set)
    __swig_setmethods__["VolumeTraded"] = _pyctp.CSgitFtdcOrderField_VolumeTraded_set
    __swig_getmethods__["VolumeTraded"] = _pyctp.CSgitFtdcOrderField_VolumeTraded_get
    if _newclass:
        VolumeTraded = _swig_property(_pyctp.CSgitFtdcOrderField_VolumeTraded_get, _pyctp.CSgitFtdcOrderField_VolumeTraded_set)
    __swig_setmethods__["VolumeTotal"] = _pyctp.CSgitFtdcOrderField_VolumeTotal_set
    __swig_getmethods__["VolumeTotal"] = _pyctp.CSgitFtdcOrderField_VolumeTotal_get
    if _newclass:
        VolumeTotal = _swig_property(_pyctp.CSgitFtdcOrderField_VolumeTotal_get, _pyctp.CSgitFtdcOrderField_VolumeTotal_set)
    __swig_setmethods__["InsertDate"] = _pyctp.CSgitFtdcOrderField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _pyctp.CSgitFtdcOrderField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_pyctp.CSgitFtdcOrderField_InsertDate_get, _pyctp.CSgitFtdcOrderField_InsertDate_set)
    __swig_setmethods__["InsertTime"] = _pyctp.CSgitFtdcOrderField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _pyctp.CSgitFtdcOrderField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_pyctp.CSgitFtdcOrderField_InsertTime_get, _pyctp.CSgitFtdcOrderField_InsertTime_set)
    __swig_setmethods__["ActiveTime"] = _pyctp.CSgitFtdcOrderField_ActiveTime_set
    __swig_getmethods__["ActiveTime"] = _pyctp.CSgitFtdcOrderField_ActiveTime_get
    if _newclass:
        ActiveTime = _swig_property(_pyctp.CSgitFtdcOrderField_ActiveTime_get, _pyctp.CSgitFtdcOrderField_ActiveTime_set)
    __swig_setmethods__["SuspendTime"] = _pyctp.CSgitFtdcOrderField_SuspendTime_set
    __swig_getmethods__["SuspendTime"] = _pyctp.CSgitFtdcOrderField_SuspendTime_get
    if _newclass:
        SuspendTime = _swig_property(_pyctp.CSgitFtdcOrderField_SuspendTime_get, _pyctp.CSgitFtdcOrderField_SuspendTime_set)
    __swig_setmethods__["UpdateTime"] = _pyctp.CSgitFtdcOrderField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _pyctp.CSgitFtdcOrderField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_pyctp.CSgitFtdcOrderField_UpdateTime_get, _pyctp.CSgitFtdcOrderField_UpdateTime_set)
    __swig_setmethods__["CancelTime"] = _pyctp.CSgitFtdcOrderField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _pyctp.CSgitFtdcOrderField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_pyctp.CSgitFtdcOrderField_CancelTime_get, _pyctp.CSgitFtdcOrderField_CancelTime_set)
    __swig_setmethods__["ActiveTraderID"] = _pyctp.CSgitFtdcOrderField_ActiveTraderID_set
    __swig_getmethods__["ActiveTraderID"] = _pyctp.CSgitFtdcOrderField_ActiveTraderID_get
    if _newclass:
        ActiveTraderID = _swig_property(_pyctp.CSgitFtdcOrderField_ActiveTraderID_get, _pyctp.CSgitFtdcOrderField_ActiveTraderID_set)
    __swig_setmethods__["ClearingPartID"] = _pyctp.CSgitFtdcOrderField_ClearingPartID_set
    __swig_getmethods__["ClearingPartID"] = _pyctp.CSgitFtdcOrderField_ClearingPartID_get
    if _newclass:
        ClearingPartID = _swig_property(_pyctp.CSgitFtdcOrderField_ClearingPartID_get, _pyctp.CSgitFtdcOrderField_ClearingPartID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CSgitFtdcOrderField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CSgitFtdcOrderField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CSgitFtdcOrderField_SequenceNo_get, _pyctp.CSgitFtdcOrderField_SequenceNo_set)
    __swig_setmethods__["FrontID"] = _pyctp.CSgitFtdcOrderField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CSgitFtdcOrderField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CSgitFtdcOrderField_FrontID_get, _pyctp.CSgitFtdcOrderField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcOrderField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcOrderField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcOrderField_SessionID_get, _pyctp.CSgitFtdcOrderField_SessionID_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CSgitFtdcOrderField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CSgitFtdcOrderField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CSgitFtdcOrderField_UserProductInfo_get, _pyctp.CSgitFtdcOrderField_UserProductInfo_set)
    __swig_setmethods__["StatusMsg"] = _pyctp.CSgitFtdcOrderField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _pyctp.CSgitFtdcOrderField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_pyctp.CSgitFtdcOrderField_StatusMsg_get, _pyctp.CSgitFtdcOrderField_StatusMsg_set)
    __swig_setmethods__["UserForceClose"] = _pyctp.CSgitFtdcOrderField_UserForceClose_set
    __swig_getmethods__["UserForceClose"] = _pyctp.CSgitFtdcOrderField_UserForceClose_get
    if _newclass:
        UserForceClose = _swig_property(_pyctp.CSgitFtdcOrderField_UserForceClose_get, _pyctp.CSgitFtdcOrderField_UserForceClose_set)
    __swig_setmethods__["ActiveUserID"] = _pyctp.CSgitFtdcOrderField_ActiveUserID_set
    __swig_getmethods__["ActiveUserID"] = _pyctp.CSgitFtdcOrderField_ActiveUserID_get
    if _newclass:
        ActiveUserID = _swig_property(_pyctp.CSgitFtdcOrderField_ActiveUserID_get, _pyctp.CSgitFtdcOrderField_ActiveUserID_set)
    __swig_setmethods__["BrokerOrderSeq"] = _pyctp.CSgitFtdcOrderField_BrokerOrderSeq_set
    __swig_getmethods__["BrokerOrderSeq"] = _pyctp.CSgitFtdcOrderField_BrokerOrderSeq_get
    if _newclass:
        BrokerOrderSeq = _swig_property(_pyctp.CSgitFtdcOrderField_BrokerOrderSeq_get, _pyctp.CSgitFtdcOrderField_BrokerOrderSeq_set)
    __swig_setmethods__["RelativeOrderSysID"] = _pyctp.CSgitFtdcOrderField_RelativeOrderSysID_set
    __swig_getmethods__["RelativeOrderSysID"] = _pyctp.CSgitFtdcOrderField_RelativeOrderSysID_get
    if _newclass:
        RelativeOrderSysID = _swig_property(_pyctp.CSgitFtdcOrderField_RelativeOrderSysID_get, _pyctp.CSgitFtdcOrderField_RelativeOrderSysID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcOrderField
    __del__ = lambda self: None
CSgitFtdcOrderField_swigregister = _pyctp.CSgitFtdcOrderField_swigregister
CSgitFtdcOrderField_swigregister(CSgitFtdcOrderField)

class CSgitFtdcExchangeOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcExchangeOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcExchangeOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["OrderPriceType"] = _pyctp.CSgitFtdcExchangeOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _pyctp.CSgitFtdcExchangeOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_OrderPriceType_get, _pyctp.CSgitFtdcExchangeOrderField_OrderPriceType_set)
    __swig_setmethods__["Direction"] = _pyctp.CSgitFtdcExchangeOrderField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CSgitFtdcExchangeOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_Direction_get, _pyctp.CSgitFtdcExchangeOrderField_Direction_set)
    __swig_setmethods__["CombOffsetFlag"] = _pyctp.CSgitFtdcExchangeOrderField_CombOffsetFlag_set
    __swig_getmethods__["CombOffsetFlag"] = _pyctp.CSgitFtdcExchangeOrderField_CombOffsetFlag_get
    if _newclass:
        CombOffsetFlag = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_CombOffsetFlag_get, _pyctp.CSgitFtdcExchangeOrderField_CombOffsetFlag_set)
    __swig_setmethods__["CombHedgeFlag"] = _pyctp.CSgitFtdcExchangeOrderField_CombHedgeFlag_set
    __swig_getmethods__["CombHedgeFlag"] = _pyctp.CSgitFtdcExchangeOrderField_CombHedgeFlag_get
    if _newclass:
        CombHedgeFlag = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_CombHedgeFlag_get, _pyctp.CSgitFtdcExchangeOrderField_CombHedgeFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CSgitFtdcExchangeOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CSgitFtdcExchangeOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_LimitPrice_get, _pyctp.CSgitFtdcExchangeOrderField_LimitPrice_set)
    __swig_setmethods__["VolumeTotalOriginal"] = _pyctp.CSgitFtdcExchangeOrderField_VolumeTotalOriginal_set
    __swig_getmethods__["VolumeTotalOriginal"] = _pyctp.CSgitFtdcExchangeOrderField_VolumeTotalOriginal_get
    if _newclass:
        VolumeTotalOriginal = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_VolumeTotalOriginal_get, _pyctp.CSgitFtdcExchangeOrderField_VolumeTotalOriginal_set)
    __swig_setmethods__["TimeCondition"] = _pyctp.CSgitFtdcExchangeOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _pyctp.CSgitFtdcExchangeOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_TimeCondition_get, _pyctp.CSgitFtdcExchangeOrderField_TimeCondition_set)
    __swig_setmethods__["GTDDate"] = _pyctp.CSgitFtdcExchangeOrderField_GTDDate_set
    __swig_getmethods__["GTDDate"] = _pyctp.CSgitFtdcExchangeOrderField_GTDDate_get
    if _newclass:
        GTDDate = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_GTDDate_get, _pyctp.CSgitFtdcExchangeOrderField_GTDDate_set)
    __swig_setmethods__["VolumeCondition"] = _pyctp.CSgitFtdcExchangeOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _pyctp.CSgitFtdcExchangeOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_VolumeCondition_get, _pyctp.CSgitFtdcExchangeOrderField_VolumeCondition_set)
    __swig_setmethods__["MinVolume"] = _pyctp.CSgitFtdcExchangeOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _pyctp.CSgitFtdcExchangeOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_MinVolume_get, _pyctp.CSgitFtdcExchangeOrderField_MinVolume_set)
    __swig_setmethods__["ContingentCondition"] = _pyctp.CSgitFtdcExchangeOrderField_ContingentCondition_set
    __swig_getmethods__["ContingentCondition"] = _pyctp.CSgitFtdcExchangeOrderField_ContingentCondition_get
    if _newclass:
        ContingentCondition = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_ContingentCondition_get, _pyctp.CSgitFtdcExchangeOrderField_ContingentCondition_set)
    __swig_setmethods__["StopPrice"] = _pyctp.CSgitFtdcExchangeOrderField_StopPrice_set
    __swig_getmethods__["StopPrice"] = _pyctp.CSgitFtdcExchangeOrderField_StopPrice_get
    if _newclass:
        StopPrice = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_StopPrice_get, _pyctp.CSgitFtdcExchangeOrderField_StopPrice_set)
    __swig_setmethods__["ForceCloseReason"] = _pyctp.CSgitFtdcExchangeOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _pyctp.CSgitFtdcExchangeOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_ForceCloseReason_get, _pyctp.CSgitFtdcExchangeOrderField_ForceCloseReason_set)
    __swig_setmethods__["IsAutoSuspend"] = _pyctp.CSgitFtdcExchangeOrderField_IsAutoSuspend_set
    __swig_getmethods__["IsAutoSuspend"] = _pyctp.CSgitFtdcExchangeOrderField_IsAutoSuspend_get
    if _newclass:
        IsAutoSuspend = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_IsAutoSuspend_get, _pyctp.CSgitFtdcExchangeOrderField_IsAutoSuspend_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CSgitFtdcExchangeOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CSgitFtdcExchangeOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_BusinessUnit_get, _pyctp.CSgitFtdcExchangeOrderField_BusinessUnit_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcExchangeOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcExchangeOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_RequestID_get, _pyctp.CSgitFtdcExchangeOrderField_RequestID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CSgitFtdcExchangeOrderField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CSgitFtdcExchangeOrderField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_OrderLocalID_get, _pyctp.CSgitFtdcExchangeOrderField_OrderLocalID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcExchangeOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcExchangeOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_ExchangeID_get, _pyctp.CSgitFtdcExchangeOrderField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcExchangeOrderField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcExchangeOrderField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_ParticipantID_get, _pyctp.CSgitFtdcExchangeOrderField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CSgitFtdcExchangeOrderField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CSgitFtdcExchangeOrderField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_ClientID_get, _pyctp.CSgitFtdcExchangeOrderField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcExchangeOrderField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcExchangeOrderField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_ExchangeInstID_get, _pyctp.CSgitFtdcExchangeOrderField_ExchangeInstID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcExchangeOrderField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcExchangeOrderField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_TraderID_get, _pyctp.CSgitFtdcExchangeOrderField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcExchangeOrderField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcExchangeOrderField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_InstallID_get, _pyctp.CSgitFtdcExchangeOrderField_InstallID_set)
    __swig_setmethods__["OrderSubmitStatus"] = _pyctp.CSgitFtdcExchangeOrderField_OrderSubmitStatus_set
    __swig_getmethods__["OrderSubmitStatus"] = _pyctp.CSgitFtdcExchangeOrderField_OrderSubmitStatus_get
    if _newclass:
        OrderSubmitStatus = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_OrderSubmitStatus_get, _pyctp.CSgitFtdcExchangeOrderField_OrderSubmitStatus_set)
    __swig_setmethods__["NotifySequence"] = _pyctp.CSgitFtdcExchangeOrderField_NotifySequence_set
    __swig_getmethods__["NotifySequence"] = _pyctp.CSgitFtdcExchangeOrderField_NotifySequence_get
    if _newclass:
        NotifySequence = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_NotifySequence_get, _pyctp.CSgitFtdcExchangeOrderField_NotifySequence_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcExchangeOrderField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcExchangeOrderField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_TradingDay_get, _pyctp.CSgitFtdcExchangeOrderField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CSgitFtdcExchangeOrderField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CSgitFtdcExchangeOrderField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_SettlementID_get, _pyctp.CSgitFtdcExchangeOrderField_SettlementID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CSgitFtdcExchangeOrderField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CSgitFtdcExchangeOrderField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_OrderSysID_get, _pyctp.CSgitFtdcExchangeOrderField_OrderSysID_set)
    __swig_setmethods__["OrderSource"] = _pyctp.CSgitFtdcExchangeOrderField_OrderSource_set
    __swig_getmethods__["OrderSource"] = _pyctp.CSgitFtdcExchangeOrderField_OrderSource_get
    if _newclass:
        OrderSource = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_OrderSource_get, _pyctp.CSgitFtdcExchangeOrderField_OrderSource_set)
    __swig_setmethods__["OrderStatus"] = _pyctp.CSgitFtdcExchangeOrderField_OrderStatus_set
    __swig_getmethods__["OrderStatus"] = _pyctp.CSgitFtdcExchangeOrderField_OrderStatus_get
    if _newclass:
        OrderStatus = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_OrderStatus_get, _pyctp.CSgitFtdcExchangeOrderField_OrderStatus_set)
    __swig_setmethods__["OrderType"] = _pyctp.CSgitFtdcExchangeOrderField_OrderType_set
    __swig_getmethods__["OrderType"] = _pyctp.CSgitFtdcExchangeOrderField_OrderType_get
    if _newclass:
        OrderType = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_OrderType_get, _pyctp.CSgitFtdcExchangeOrderField_OrderType_set)
    __swig_setmethods__["VolumeTraded"] = _pyctp.CSgitFtdcExchangeOrderField_VolumeTraded_set
    __swig_getmethods__["VolumeTraded"] = _pyctp.CSgitFtdcExchangeOrderField_VolumeTraded_get
    if _newclass:
        VolumeTraded = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_VolumeTraded_get, _pyctp.CSgitFtdcExchangeOrderField_VolumeTraded_set)
    __swig_setmethods__["VolumeTotal"] = _pyctp.CSgitFtdcExchangeOrderField_VolumeTotal_set
    __swig_getmethods__["VolumeTotal"] = _pyctp.CSgitFtdcExchangeOrderField_VolumeTotal_get
    if _newclass:
        VolumeTotal = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_VolumeTotal_get, _pyctp.CSgitFtdcExchangeOrderField_VolumeTotal_set)
    __swig_setmethods__["InsertDate"] = _pyctp.CSgitFtdcExchangeOrderField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _pyctp.CSgitFtdcExchangeOrderField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_InsertDate_get, _pyctp.CSgitFtdcExchangeOrderField_InsertDate_set)
    __swig_setmethods__["InsertTime"] = _pyctp.CSgitFtdcExchangeOrderField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _pyctp.CSgitFtdcExchangeOrderField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_InsertTime_get, _pyctp.CSgitFtdcExchangeOrderField_InsertTime_set)
    __swig_setmethods__["ActiveTime"] = _pyctp.CSgitFtdcExchangeOrderField_ActiveTime_set
    __swig_getmethods__["ActiveTime"] = _pyctp.CSgitFtdcExchangeOrderField_ActiveTime_get
    if _newclass:
        ActiveTime = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_ActiveTime_get, _pyctp.CSgitFtdcExchangeOrderField_ActiveTime_set)
    __swig_setmethods__["SuspendTime"] = _pyctp.CSgitFtdcExchangeOrderField_SuspendTime_set
    __swig_getmethods__["SuspendTime"] = _pyctp.CSgitFtdcExchangeOrderField_SuspendTime_get
    if _newclass:
        SuspendTime = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_SuspendTime_get, _pyctp.CSgitFtdcExchangeOrderField_SuspendTime_set)
    __swig_setmethods__["UpdateTime"] = _pyctp.CSgitFtdcExchangeOrderField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _pyctp.CSgitFtdcExchangeOrderField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_UpdateTime_get, _pyctp.CSgitFtdcExchangeOrderField_UpdateTime_set)
    __swig_setmethods__["CancelTime"] = _pyctp.CSgitFtdcExchangeOrderField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _pyctp.CSgitFtdcExchangeOrderField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_CancelTime_get, _pyctp.CSgitFtdcExchangeOrderField_CancelTime_set)
    __swig_setmethods__["ActiveTraderID"] = _pyctp.CSgitFtdcExchangeOrderField_ActiveTraderID_set
    __swig_getmethods__["ActiveTraderID"] = _pyctp.CSgitFtdcExchangeOrderField_ActiveTraderID_get
    if _newclass:
        ActiveTraderID = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_ActiveTraderID_get, _pyctp.CSgitFtdcExchangeOrderField_ActiveTraderID_set)
    __swig_setmethods__["ClearingPartID"] = _pyctp.CSgitFtdcExchangeOrderField_ClearingPartID_set
    __swig_getmethods__["ClearingPartID"] = _pyctp.CSgitFtdcExchangeOrderField_ClearingPartID_get
    if _newclass:
        ClearingPartID = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_ClearingPartID_get, _pyctp.CSgitFtdcExchangeOrderField_ClearingPartID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CSgitFtdcExchangeOrderField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CSgitFtdcExchangeOrderField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CSgitFtdcExchangeOrderField_SequenceNo_get, _pyctp.CSgitFtdcExchangeOrderField_SequenceNo_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcExchangeOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcExchangeOrderField
    __del__ = lambda self: None
CSgitFtdcExchangeOrderField_swigregister = _pyctp.CSgitFtdcExchangeOrderField_swigregister
CSgitFtdcExchangeOrderField_swigregister(CSgitFtdcExchangeOrderField)

class CSgitFtdcExchangeOrderInsertErrorField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcExchangeOrderInsertErrorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcExchangeOrderInsertErrorField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcExchangeOrderInsertErrorField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcExchangeOrderInsertErrorField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcExchangeOrderInsertErrorField_ExchangeID_get, _pyctp.CSgitFtdcExchangeOrderInsertErrorField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcExchangeOrderInsertErrorField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcExchangeOrderInsertErrorField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcExchangeOrderInsertErrorField_ParticipantID_get, _pyctp.CSgitFtdcExchangeOrderInsertErrorField_ParticipantID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcExchangeOrderInsertErrorField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcExchangeOrderInsertErrorField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcExchangeOrderInsertErrorField_TraderID_get, _pyctp.CSgitFtdcExchangeOrderInsertErrorField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcExchangeOrderInsertErrorField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcExchangeOrderInsertErrorField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcExchangeOrderInsertErrorField_InstallID_get, _pyctp.CSgitFtdcExchangeOrderInsertErrorField_InstallID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CSgitFtdcExchangeOrderInsertErrorField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CSgitFtdcExchangeOrderInsertErrorField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CSgitFtdcExchangeOrderInsertErrorField_OrderLocalID_get, _pyctp.CSgitFtdcExchangeOrderInsertErrorField_OrderLocalID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcExchangeOrderInsertErrorField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcExchangeOrderInsertErrorField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcExchangeOrderInsertErrorField_ErrorID_get, _pyctp.CSgitFtdcExchangeOrderInsertErrorField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcExchangeOrderInsertErrorField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcExchangeOrderInsertErrorField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcExchangeOrderInsertErrorField_ErrorMsg_get, _pyctp.CSgitFtdcExchangeOrderInsertErrorField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcExchangeOrderInsertErrorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcExchangeOrderInsertErrorField
    __del__ = lambda self: None
CSgitFtdcExchangeOrderInsertErrorField_swigregister = _pyctp.CSgitFtdcExchangeOrderInsertErrorField_swigregister
CSgitFtdcExchangeOrderInsertErrorField_swigregister(CSgitFtdcExchangeOrderInsertErrorField)

class CSgitFtdcInputOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcInputOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcInputOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcInputOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcInputOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcInputOrderActionField_BrokerID_get, _pyctp.CSgitFtdcInputOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcInputOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcInputOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcInputOrderActionField_InvestorID_get, _pyctp.CSgitFtdcInputOrderActionField_InvestorID_set)
    __swig_setmethods__["OrderActionRef"] = _pyctp.CSgitFtdcInputOrderActionField_OrderActionRef_set
    __swig_getmethods__["OrderActionRef"] = _pyctp.CSgitFtdcInputOrderActionField_OrderActionRef_get
    if _newclass:
        OrderActionRef = _swig_property(_pyctp.CSgitFtdcInputOrderActionField_OrderActionRef_get, _pyctp.CSgitFtdcInputOrderActionField_OrderActionRef_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CSgitFtdcInputOrderActionField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CSgitFtdcInputOrderActionField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CSgitFtdcInputOrderActionField_OrderRef_get, _pyctp.CSgitFtdcInputOrderActionField_OrderRef_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcInputOrderActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcInputOrderActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcInputOrderActionField_RequestID_get, _pyctp.CSgitFtdcInputOrderActionField_RequestID_set)
    __swig_setmethods__["FrontID"] = _pyctp.CSgitFtdcInputOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CSgitFtdcInputOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CSgitFtdcInputOrderActionField_FrontID_get, _pyctp.CSgitFtdcInputOrderActionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcInputOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcInputOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcInputOrderActionField_SessionID_get, _pyctp.CSgitFtdcInputOrderActionField_SessionID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcInputOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcInputOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcInputOrderActionField_ExchangeID_get, _pyctp.CSgitFtdcInputOrderActionField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CSgitFtdcInputOrderActionField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CSgitFtdcInputOrderActionField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CSgitFtdcInputOrderActionField_OrderSysID_get, _pyctp.CSgitFtdcInputOrderActionField_OrderSysID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CSgitFtdcInputOrderActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CSgitFtdcInputOrderActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CSgitFtdcInputOrderActionField_ActionFlag_get, _pyctp.CSgitFtdcInputOrderActionField_ActionFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CSgitFtdcInputOrderActionField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CSgitFtdcInputOrderActionField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CSgitFtdcInputOrderActionField_LimitPrice_get, _pyctp.CSgitFtdcInputOrderActionField_LimitPrice_set)
    __swig_setmethods__["VolumeChange"] = _pyctp.CSgitFtdcInputOrderActionField_VolumeChange_set
    __swig_getmethods__["VolumeChange"] = _pyctp.CSgitFtdcInputOrderActionField_VolumeChange_get
    if _newclass:
        VolumeChange = _swig_property(_pyctp.CSgitFtdcInputOrderActionField_VolumeChange_get, _pyctp.CSgitFtdcInputOrderActionField_VolumeChange_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcInputOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcInputOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcInputOrderActionField_UserID_get, _pyctp.CSgitFtdcInputOrderActionField_UserID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcInputOrderActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcInputOrderActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcInputOrderActionField_InstrumentID_get, _pyctp.CSgitFtdcInputOrderActionField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcInputOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcInputOrderActionField
    __del__ = lambda self: None
CSgitFtdcInputOrderActionField_swigregister = _pyctp.CSgitFtdcInputOrderActionField_swigregister
CSgitFtdcInputOrderActionField_swigregister(CSgitFtdcInputOrderActionField)

class CSgitFtdcOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcOrderActionField_BrokerID_get, _pyctp.CSgitFtdcOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcOrderActionField_InvestorID_get, _pyctp.CSgitFtdcOrderActionField_InvestorID_set)
    __swig_setmethods__["OrderActionRef"] = _pyctp.CSgitFtdcOrderActionField_OrderActionRef_set
    __swig_getmethods__["OrderActionRef"] = _pyctp.CSgitFtdcOrderActionField_OrderActionRef_get
    if _newclass:
        OrderActionRef = _swig_property(_pyctp.CSgitFtdcOrderActionField_OrderActionRef_get, _pyctp.CSgitFtdcOrderActionField_OrderActionRef_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CSgitFtdcOrderActionField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CSgitFtdcOrderActionField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CSgitFtdcOrderActionField_OrderRef_get, _pyctp.CSgitFtdcOrderActionField_OrderRef_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcOrderActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcOrderActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcOrderActionField_RequestID_get, _pyctp.CSgitFtdcOrderActionField_RequestID_set)
    __swig_setmethods__["FrontID"] = _pyctp.CSgitFtdcOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CSgitFtdcOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CSgitFtdcOrderActionField_FrontID_get, _pyctp.CSgitFtdcOrderActionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcOrderActionField_SessionID_get, _pyctp.CSgitFtdcOrderActionField_SessionID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcOrderActionField_ExchangeID_get, _pyctp.CSgitFtdcOrderActionField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CSgitFtdcOrderActionField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CSgitFtdcOrderActionField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CSgitFtdcOrderActionField_OrderSysID_get, _pyctp.CSgitFtdcOrderActionField_OrderSysID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CSgitFtdcOrderActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CSgitFtdcOrderActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CSgitFtdcOrderActionField_ActionFlag_get, _pyctp.CSgitFtdcOrderActionField_ActionFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CSgitFtdcOrderActionField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CSgitFtdcOrderActionField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CSgitFtdcOrderActionField_LimitPrice_get, _pyctp.CSgitFtdcOrderActionField_LimitPrice_set)
    __swig_setmethods__["VolumeChange"] = _pyctp.CSgitFtdcOrderActionField_VolumeChange_set
    __swig_getmethods__["VolumeChange"] = _pyctp.CSgitFtdcOrderActionField_VolumeChange_get
    if _newclass:
        VolumeChange = _swig_property(_pyctp.CSgitFtdcOrderActionField_VolumeChange_get, _pyctp.CSgitFtdcOrderActionField_VolumeChange_set)
    __swig_setmethods__["ActionDate"] = _pyctp.CSgitFtdcOrderActionField_ActionDate_set
    __swig_getmethods__["ActionDate"] = _pyctp.CSgitFtdcOrderActionField_ActionDate_get
    if _newclass:
        ActionDate = _swig_property(_pyctp.CSgitFtdcOrderActionField_ActionDate_get, _pyctp.CSgitFtdcOrderActionField_ActionDate_set)
    __swig_setmethods__["ActionTime"] = _pyctp.CSgitFtdcOrderActionField_ActionTime_set
    __swig_getmethods__["ActionTime"] = _pyctp.CSgitFtdcOrderActionField_ActionTime_get
    if _newclass:
        ActionTime = _swig_property(_pyctp.CSgitFtdcOrderActionField_ActionTime_get, _pyctp.CSgitFtdcOrderActionField_ActionTime_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcOrderActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcOrderActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcOrderActionField_TraderID_get, _pyctp.CSgitFtdcOrderActionField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcOrderActionField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcOrderActionField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcOrderActionField_InstallID_get, _pyctp.CSgitFtdcOrderActionField_InstallID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CSgitFtdcOrderActionField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CSgitFtdcOrderActionField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CSgitFtdcOrderActionField_OrderLocalID_get, _pyctp.CSgitFtdcOrderActionField_OrderLocalID_set)
    __swig_setmethods__["ActionLocalID"] = _pyctp.CSgitFtdcOrderActionField_ActionLocalID_set
    __swig_getmethods__["ActionLocalID"] = _pyctp.CSgitFtdcOrderActionField_ActionLocalID_get
    if _newclass:
        ActionLocalID = _swig_property(_pyctp.CSgitFtdcOrderActionField_ActionLocalID_get, _pyctp.CSgitFtdcOrderActionField_ActionLocalID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcOrderActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcOrderActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcOrderActionField_ParticipantID_get, _pyctp.CSgitFtdcOrderActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CSgitFtdcOrderActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CSgitFtdcOrderActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CSgitFtdcOrderActionField_ClientID_get, _pyctp.CSgitFtdcOrderActionField_ClientID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CSgitFtdcOrderActionField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CSgitFtdcOrderActionField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CSgitFtdcOrderActionField_BusinessUnit_get, _pyctp.CSgitFtdcOrderActionField_BusinessUnit_set)
    __swig_setmethods__["OrderActionStatus"] = _pyctp.CSgitFtdcOrderActionField_OrderActionStatus_set
    __swig_getmethods__["OrderActionStatus"] = _pyctp.CSgitFtdcOrderActionField_OrderActionStatus_get
    if _newclass:
        OrderActionStatus = _swig_property(_pyctp.CSgitFtdcOrderActionField_OrderActionStatus_get, _pyctp.CSgitFtdcOrderActionField_OrderActionStatus_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcOrderActionField_UserID_get, _pyctp.CSgitFtdcOrderActionField_UserID_set)
    __swig_setmethods__["StatusMsg"] = _pyctp.CSgitFtdcOrderActionField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _pyctp.CSgitFtdcOrderActionField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_pyctp.CSgitFtdcOrderActionField_StatusMsg_get, _pyctp.CSgitFtdcOrderActionField_StatusMsg_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcOrderActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcOrderActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcOrderActionField_InstrumentID_get, _pyctp.CSgitFtdcOrderActionField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcOrderActionField
    __del__ = lambda self: None
CSgitFtdcOrderActionField_swigregister = _pyctp.CSgitFtdcOrderActionField_swigregister
CSgitFtdcOrderActionField_swigregister(CSgitFtdcOrderActionField)

class CSgitFtdcExchangeOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcExchangeOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcExchangeOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcExchangeOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcExchangeOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionField_ExchangeID_get, _pyctp.CSgitFtdcExchangeOrderActionField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CSgitFtdcExchangeOrderActionField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CSgitFtdcExchangeOrderActionField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionField_OrderSysID_get, _pyctp.CSgitFtdcExchangeOrderActionField_OrderSysID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CSgitFtdcExchangeOrderActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CSgitFtdcExchangeOrderActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionField_ActionFlag_get, _pyctp.CSgitFtdcExchangeOrderActionField_ActionFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CSgitFtdcExchangeOrderActionField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CSgitFtdcExchangeOrderActionField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionField_LimitPrice_get, _pyctp.CSgitFtdcExchangeOrderActionField_LimitPrice_set)
    __swig_setmethods__["VolumeChange"] = _pyctp.CSgitFtdcExchangeOrderActionField_VolumeChange_set
    __swig_getmethods__["VolumeChange"] = _pyctp.CSgitFtdcExchangeOrderActionField_VolumeChange_get
    if _newclass:
        VolumeChange = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionField_VolumeChange_get, _pyctp.CSgitFtdcExchangeOrderActionField_VolumeChange_set)
    __swig_setmethods__["ActionDate"] = _pyctp.CSgitFtdcExchangeOrderActionField_ActionDate_set
    __swig_getmethods__["ActionDate"] = _pyctp.CSgitFtdcExchangeOrderActionField_ActionDate_get
    if _newclass:
        ActionDate = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionField_ActionDate_get, _pyctp.CSgitFtdcExchangeOrderActionField_ActionDate_set)
    __swig_setmethods__["ActionTime"] = _pyctp.CSgitFtdcExchangeOrderActionField_ActionTime_set
    __swig_getmethods__["ActionTime"] = _pyctp.CSgitFtdcExchangeOrderActionField_ActionTime_get
    if _newclass:
        ActionTime = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionField_ActionTime_get, _pyctp.CSgitFtdcExchangeOrderActionField_ActionTime_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcExchangeOrderActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcExchangeOrderActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionField_TraderID_get, _pyctp.CSgitFtdcExchangeOrderActionField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcExchangeOrderActionField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcExchangeOrderActionField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionField_InstallID_get, _pyctp.CSgitFtdcExchangeOrderActionField_InstallID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CSgitFtdcExchangeOrderActionField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CSgitFtdcExchangeOrderActionField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionField_OrderLocalID_get, _pyctp.CSgitFtdcExchangeOrderActionField_OrderLocalID_set)
    __swig_setmethods__["ActionLocalID"] = _pyctp.CSgitFtdcExchangeOrderActionField_ActionLocalID_set
    __swig_getmethods__["ActionLocalID"] = _pyctp.CSgitFtdcExchangeOrderActionField_ActionLocalID_get
    if _newclass:
        ActionLocalID = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionField_ActionLocalID_get, _pyctp.CSgitFtdcExchangeOrderActionField_ActionLocalID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcExchangeOrderActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcExchangeOrderActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionField_ParticipantID_get, _pyctp.CSgitFtdcExchangeOrderActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CSgitFtdcExchangeOrderActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CSgitFtdcExchangeOrderActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionField_ClientID_get, _pyctp.CSgitFtdcExchangeOrderActionField_ClientID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CSgitFtdcExchangeOrderActionField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CSgitFtdcExchangeOrderActionField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionField_BusinessUnit_get, _pyctp.CSgitFtdcExchangeOrderActionField_BusinessUnit_set)
    __swig_setmethods__["OrderActionStatus"] = _pyctp.CSgitFtdcExchangeOrderActionField_OrderActionStatus_set
    __swig_getmethods__["OrderActionStatus"] = _pyctp.CSgitFtdcExchangeOrderActionField_OrderActionStatus_get
    if _newclass:
        OrderActionStatus = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionField_OrderActionStatus_get, _pyctp.CSgitFtdcExchangeOrderActionField_OrderActionStatus_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcExchangeOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcExchangeOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionField_UserID_get, _pyctp.CSgitFtdcExchangeOrderActionField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcExchangeOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcExchangeOrderActionField
    __del__ = lambda self: None
CSgitFtdcExchangeOrderActionField_swigregister = _pyctp.CSgitFtdcExchangeOrderActionField_swigregister
CSgitFtdcExchangeOrderActionField_swigregister(CSgitFtdcExchangeOrderActionField)

class CSgitFtdcExchangeOrderActionErrorField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcExchangeOrderActionErrorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcExchangeOrderActionErrorField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcExchangeOrderActionErrorField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcExchangeOrderActionErrorField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionErrorField_ExchangeID_get, _pyctp.CSgitFtdcExchangeOrderActionErrorField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CSgitFtdcExchangeOrderActionErrorField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CSgitFtdcExchangeOrderActionErrorField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionErrorField_OrderSysID_get, _pyctp.CSgitFtdcExchangeOrderActionErrorField_OrderSysID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcExchangeOrderActionErrorField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcExchangeOrderActionErrorField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionErrorField_TraderID_get, _pyctp.CSgitFtdcExchangeOrderActionErrorField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcExchangeOrderActionErrorField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcExchangeOrderActionErrorField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionErrorField_InstallID_get, _pyctp.CSgitFtdcExchangeOrderActionErrorField_InstallID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CSgitFtdcExchangeOrderActionErrorField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CSgitFtdcExchangeOrderActionErrorField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionErrorField_OrderLocalID_get, _pyctp.CSgitFtdcExchangeOrderActionErrorField_OrderLocalID_set)
    __swig_setmethods__["ActionLocalID"] = _pyctp.CSgitFtdcExchangeOrderActionErrorField_ActionLocalID_set
    __swig_getmethods__["ActionLocalID"] = _pyctp.CSgitFtdcExchangeOrderActionErrorField_ActionLocalID_get
    if _newclass:
        ActionLocalID = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionErrorField_ActionLocalID_get, _pyctp.CSgitFtdcExchangeOrderActionErrorField_ActionLocalID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcExchangeOrderActionErrorField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcExchangeOrderActionErrorField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionErrorField_ErrorID_get, _pyctp.CSgitFtdcExchangeOrderActionErrorField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcExchangeOrderActionErrorField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcExchangeOrderActionErrorField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcExchangeOrderActionErrorField_ErrorMsg_get, _pyctp.CSgitFtdcExchangeOrderActionErrorField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcExchangeOrderActionErrorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcExchangeOrderActionErrorField
    __del__ = lambda self: None
CSgitFtdcExchangeOrderActionErrorField_swigregister = _pyctp.CSgitFtdcExchangeOrderActionErrorField_swigregister
CSgitFtdcExchangeOrderActionErrorField_swigregister(CSgitFtdcExchangeOrderActionErrorField)

class CSgitFtdcExchangeTradeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcExchangeTradeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcExchangeTradeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcExchangeTradeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcExchangeTradeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_ExchangeID_get, _pyctp.CSgitFtdcExchangeTradeField_ExchangeID_set)
    __swig_setmethods__["TradeID"] = _pyctp.CSgitFtdcExchangeTradeField_TradeID_set
    __swig_getmethods__["TradeID"] = _pyctp.CSgitFtdcExchangeTradeField_TradeID_get
    if _newclass:
        TradeID = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_TradeID_get, _pyctp.CSgitFtdcExchangeTradeField_TradeID_set)
    __swig_setmethods__["Direction"] = _pyctp.CSgitFtdcExchangeTradeField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CSgitFtdcExchangeTradeField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_Direction_get, _pyctp.CSgitFtdcExchangeTradeField_Direction_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CSgitFtdcExchangeTradeField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CSgitFtdcExchangeTradeField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_OrderSysID_get, _pyctp.CSgitFtdcExchangeTradeField_OrderSysID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcExchangeTradeField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcExchangeTradeField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_ParticipantID_get, _pyctp.CSgitFtdcExchangeTradeField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CSgitFtdcExchangeTradeField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CSgitFtdcExchangeTradeField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_ClientID_get, _pyctp.CSgitFtdcExchangeTradeField_ClientID_set)
    __swig_setmethods__["TradingRole"] = _pyctp.CSgitFtdcExchangeTradeField_TradingRole_set
    __swig_getmethods__["TradingRole"] = _pyctp.CSgitFtdcExchangeTradeField_TradingRole_get
    if _newclass:
        TradingRole = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_TradingRole_get, _pyctp.CSgitFtdcExchangeTradeField_TradingRole_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcExchangeTradeField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcExchangeTradeField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_ExchangeInstID_get, _pyctp.CSgitFtdcExchangeTradeField_ExchangeInstID_set)
    __swig_setmethods__["OffsetFlag"] = _pyctp.CSgitFtdcExchangeTradeField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _pyctp.CSgitFtdcExchangeTradeField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_OffsetFlag_get, _pyctp.CSgitFtdcExchangeTradeField_OffsetFlag_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CSgitFtdcExchangeTradeField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CSgitFtdcExchangeTradeField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_HedgeFlag_get, _pyctp.CSgitFtdcExchangeTradeField_HedgeFlag_set)
    __swig_setmethods__["Price"] = _pyctp.CSgitFtdcExchangeTradeField_Price_set
    __swig_getmethods__["Price"] = _pyctp.CSgitFtdcExchangeTradeField_Price_get
    if _newclass:
        Price = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_Price_get, _pyctp.CSgitFtdcExchangeTradeField_Price_set)
    __swig_setmethods__["Volume"] = _pyctp.CSgitFtdcExchangeTradeField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CSgitFtdcExchangeTradeField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_Volume_get, _pyctp.CSgitFtdcExchangeTradeField_Volume_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcExchangeTradeField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcExchangeTradeField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_TradeDate_get, _pyctp.CSgitFtdcExchangeTradeField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcExchangeTradeField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcExchangeTradeField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_TradeTime_get, _pyctp.CSgitFtdcExchangeTradeField_TradeTime_set)
    __swig_setmethods__["TradeType"] = _pyctp.CSgitFtdcExchangeTradeField_TradeType_set
    __swig_getmethods__["TradeType"] = _pyctp.CSgitFtdcExchangeTradeField_TradeType_get
    if _newclass:
        TradeType = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_TradeType_get, _pyctp.CSgitFtdcExchangeTradeField_TradeType_set)
    __swig_setmethods__["PriceSource"] = _pyctp.CSgitFtdcExchangeTradeField_PriceSource_set
    __swig_getmethods__["PriceSource"] = _pyctp.CSgitFtdcExchangeTradeField_PriceSource_get
    if _newclass:
        PriceSource = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_PriceSource_get, _pyctp.CSgitFtdcExchangeTradeField_PriceSource_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcExchangeTradeField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcExchangeTradeField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_TraderID_get, _pyctp.CSgitFtdcExchangeTradeField_TraderID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CSgitFtdcExchangeTradeField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CSgitFtdcExchangeTradeField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_OrderLocalID_get, _pyctp.CSgitFtdcExchangeTradeField_OrderLocalID_set)
    __swig_setmethods__["ClearingPartID"] = _pyctp.CSgitFtdcExchangeTradeField_ClearingPartID_set
    __swig_getmethods__["ClearingPartID"] = _pyctp.CSgitFtdcExchangeTradeField_ClearingPartID_get
    if _newclass:
        ClearingPartID = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_ClearingPartID_get, _pyctp.CSgitFtdcExchangeTradeField_ClearingPartID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CSgitFtdcExchangeTradeField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CSgitFtdcExchangeTradeField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_BusinessUnit_get, _pyctp.CSgitFtdcExchangeTradeField_BusinessUnit_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CSgitFtdcExchangeTradeField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CSgitFtdcExchangeTradeField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_SequenceNo_get, _pyctp.CSgitFtdcExchangeTradeField_SequenceNo_set)
    __swig_setmethods__["TradeSource"] = _pyctp.CSgitFtdcExchangeTradeField_TradeSource_set
    __swig_getmethods__["TradeSource"] = _pyctp.CSgitFtdcExchangeTradeField_TradeSource_get
    if _newclass:
        TradeSource = _swig_property(_pyctp.CSgitFtdcExchangeTradeField_TradeSource_get, _pyctp.CSgitFtdcExchangeTradeField_TradeSource_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcExchangeTradeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcExchangeTradeField
    __del__ = lambda self: None
CSgitFtdcExchangeTradeField_swigregister = _pyctp.CSgitFtdcExchangeTradeField_swigregister
CSgitFtdcExchangeTradeField_swigregister(CSgitFtdcExchangeTradeField)

class CSgitFtdcTradeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTradeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTradeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcTradeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcTradeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcTradeField_BrokerID_get, _pyctp.CSgitFtdcTradeField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcTradeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcTradeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcTradeField_InvestorID_get, _pyctp.CSgitFtdcTradeField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcTradeField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcTradeField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcTradeField_InstrumentID_get, _pyctp.CSgitFtdcTradeField_InstrumentID_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CSgitFtdcTradeField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CSgitFtdcTradeField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CSgitFtdcTradeField_OrderRef_get, _pyctp.CSgitFtdcTradeField_OrderRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcTradeField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcTradeField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcTradeField_UserID_get, _pyctp.CSgitFtdcTradeField_UserID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcTradeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcTradeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcTradeField_ExchangeID_get, _pyctp.CSgitFtdcTradeField_ExchangeID_set)
    __swig_setmethods__["TradeID"] = _pyctp.CSgitFtdcTradeField_TradeID_set
    __swig_getmethods__["TradeID"] = _pyctp.CSgitFtdcTradeField_TradeID_get
    if _newclass:
        TradeID = _swig_property(_pyctp.CSgitFtdcTradeField_TradeID_get, _pyctp.CSgitFtdcTradeField_TradeID_set)
    __swig_setmethods__["Direction"] = _pyctp.CSgitFtdcTradeField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CSgitFtdcTradeField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CSgitFtdcTradeField_Direction_get, _pyctp.CSgitFtdcTradeField_Direction_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CSgitFtdcTradeField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CSgitFtdcTradeField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CSgitFtdcTradeField_OrderSysID_get, _pyctp.CSgitFtdcTradeField_OrderSysID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcTradeField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcTradeField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcTradeField_ParticipantID_get, _pyctp.CSgitFtdcTradeField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CSgitFtdcTradeField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CSgitFtdcTradeField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CSgitFtdcTradeField_ClientID_get, _pyctp.CSgitFtdcTradeField_ClientID_set)
    __swig_setmethods__["TradingRole"] = _pyctp.CSgitFtdcTradeField_TradingRole_set
    __swig_getmethods__["TradingRole"] = _pyctp.CSgitFtdcTradeField_TradingRole_get
    if _newclass:
        TradingRole = _swig_property(_pyctp.CSgitFtdcTradeField_TradingRole_get, _pyctp.CSgitFtdcTradeField_TradingRole_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcTradeField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcTradeField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CSgitFtdcTradeField_ExchangeInstID_get, _pyctp.CSgitFtdcTradeField_ExchangeInstID_set)
    __swig_setmethods__["OffsetFlag"] = _pyctp.CSgitFtdcTradeField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _pyctp.CSgitFtdcTradeField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_pyctp.CSgitFtdcTradeField_OffsetFlag_get, _pyctp.CSgitFtdcTradeField_OffsetFlag_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CSgitFtdcTradeField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CSgitFtdcTradeField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CSgitFtdcTradeField_HedgeFlag_get, _pyctp.CSgitFtdcTradeField_HedgeFlag_set)
    __swig_setmethods__["Price"] = _pyctp.CSgitFtdcTradeField_Price_set
    __swig_getmethods__["Price"] = _pyctp.CSgitFtdcTradeField_Price_get
    if _newclass:
        Price = _swig_property(_pyctp.CSgitFtdcTradeField_Price_get, _pyctp.CSgitFtdcTradeField_Price_set)
    __swig_setmethods__["Volume"] = _pyctp.CSgitFtdcTradeField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CSgitFtdcTradeField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CSgitFtdcTradeField_Volume_get, _pyctp.CSgitFtdcTradeField_Volume_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcTradeField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcTradeField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcTradeField_TradeDate_get, _pyctp.CSgitFtdcTradeField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcTradeField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcTradeField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcTradeField_TradeTime_get, _pyctp.CSgitFtdcTradeField_TradeTime_set)
    __swig_setmethods__["TradeType"] = _pyctp.CSgitFtdcTradeField_TradeType_set
    __swig_getmethods__["TradeType"] = _pyctp.CSgitFtdcTradeField_TradeType_get
    if _newclass:
        TradeType = _swig_property(_pyctp.CSgitFtdcTradeField_TradeType_get, _pyctp.CSgitFtdcTradeField_TradeType_set)
    __swig_setmethods__["PriceSource"] = _pyctp.CSgitFtdcTradeField_PriceSource_set
    __swig_getmethods__["PriceSource"] = _pyctp.CSgitFtdcTradeField_PriceSource_get
    if _newclass:
        PriceSource = _swig_property(_pyctp.CSgitFtdcTradeField_PriceSource_get, _pyctp.CSgitFtdcTradeField_PriceSource_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcTradeField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcTradeField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcTradeField_TraderID_get, _pyctp.CSgitFtdcTradeField_TraderID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CSgitFtdcTradeField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CSgitFtdcTradeField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CSgitFtdcTradeField_OrderLocalID_get, _pyctp.CSgitFtdcTradeField_OrderLocalID_set)
    __swig_setmethods__["ClearingPartID"] = _pyctp.CSgitFtdcTradeField_ClearingPartID_set
    __swig_getmethods__["ClearingPartID"] = _pyctp.CSgitFtdcTradeField_ClearingPartID_get
    if _newclass:
        ClearingPartID = _swig_property(_pyctp.CSgitFtdcTradeField_ClearingPartID_get, _pyctp.CSgitFtdcTradeField_ClearingPartID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CSgitFtdcTradeField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CSgitFtdcTradeField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CSgitFtdcTradeField_BusinessUnit_get, _pyctp.CSgitFtdcTradeField_BusinessUnit_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CSgitFtdcTradeField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CSgitFtdcTradeField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CSgitFtdcTradeField_SequenceNo_get, _pyctp.CSgitFtdcTradeField_SequenceNo_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcTradeField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcTradeField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcTradeField_TradingDay_get, _pyctp.CSgitFtdcTradeField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CSgitFtdcTradeField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CSgitFtdcTradeField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CSgitFtdcTradeField_SettlementID_get, _pyctp.CSgitFtdcTradeField_SettlementID_set)
    __swig_setmethods__["BrokerOrderSeq"] = _pyctp.CSgitFtdcTradeField_BrokerOrderSeq_set
    __swig_getmethods__["BrokerOrderSeq"] = _pyctp.CSgitFtdcTradeField_BrokerOrderSeq_get
    if _newclass:
        BrokerOrderSeq = _swig_property(_pyctp.CSgitFtdcTradeField_BrokerOrderSeq_get, _pyctp.CSgitFtdcTradeField_BrokerOrderSeq_set)
    __swig_setmethods__["TradeSource"] = _pyctp.CSgitFtdcTradeField_TradeSource_set
    __swig_getmethods__["TradeSource"] = _pyctp.CSgitFtdcTradeField_TradeSource_get
    if _newclass:
        TradeSource = _swig_property(_pyctp.CSgitFtdcTradeField_TradeSource_get, _pyctp.CSgitFtdcTradeField_TradeSource_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTradeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTradeField
    __del__ = lambda self: None
CSgitFtdcTradeField_swigregister = _pyctp.CSgitFtdcTradeField_swigregister
CSgitFtdcTradeField_swigregister(CSgitFtdcTradeField)

class CSgitFtdcUserSessionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcUserSessionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcUserSessionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FrontID"] = _pyctp.CSgitFtdcUserSessionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CSgitFtdcUserSessionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CSgitFtdcUserSessionField_FrontID_get, _pyctp.CSgitFtdcUserSessionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcUserSessionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcUserSessionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcUserSessionField_SessionID_get, _pyctp.CSgitFtdcUserSessionField_SessionID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcUserSessionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcUserSessionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcUserSessionField_BrokerID_get, _pyctp.CSgitFtdcUserSessionField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcUserSessionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcUserSessionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcUserSessionField_UserID_get, _pyctp.CSgitFtdcUserSessionField_UserID_set)
    __swig_setmethods__["LoginDate"] = _pyctp.CSgitFtdcUserSessionField_LoginDate_set
    __swig_getmethods__["LoginDate"] = _pyctp.CSgitFtdcUserSessionField_LoginDate_get
    if _newclass:
        LoginDate = _swig_property(_pyctp.CSgitFtdcUserSessionField_LoginDate_get, _pyctp.CSgitFtdcUserSessionField_LoginDate_set)
    __swig_setmethods__["LoginTime"] = _pyctp.CSgitFtdcUserSessionField_LoginTime_set
    __swig_getmethods__["LoginTime"] = _pyctp.CSgitFtdcUserSessionField_LoginTime_get
    if _newclass:
        LoginTime = _swig_property(_pyctp.CSgitFtdcUserSessionField_LoginTime_get, _pyctp.CSgitFtdcUserSessionField_LoginTime_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CSgitFtdcUserSessionField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CSgitFtdcUserSessionField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CSgitFtdcUserSessionField_IPAddress_get, _pyctp.CSgitFtdcUserSessionField_IPAddress_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CSgitFtdcUserSessionField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CSgitFtdcUserSessionField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CSgitFtdcUserSessionField_UserProductInfo_get, _pyctp.CSgitFtdcUserSessionField_UserProductInfo_set)
    __swig_setmethods__["InterfaceProductInfo"] = _pyctp.CSgitFtdcUserSessionField_InterfaceProductInfo_set
    __swig_getmethods__["InterfaceProductInfo"] = _pyctp.CSgitFtdcUserSessionField_InterfaceProductInfo_get
    if _newclass:
        InterfaceProductInfo = _swig_property(_pyctp.CSgitFtdcUserSessionField_InterfaceProductInfo_get, _pyctp.CSgitFtdcUserSessionField_InterfaceProductInfo_set)
    __swig_setmethods__["ProtocolInfo"] = _pyctp.CSgitFtdcUserSessionField_ProtocolInfo_set
    __swig_getmethods__["ProtocolInfo"] = _pyctp.CSgitFtdcUserSessionField_ProtocolInfo_get
    if _newclass:
        ProtocolInfo = _swig_property(_pyctp.CSgitFtdcUserSessionField_ProtocolInfo_get, _pyctp.CSgitFtdcUserSessionField_ProtocolInfo_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CSgitFtdcUserSessionField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CSgitFtdcUserSessionField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CSgitFtdcUserSessionField_MacAddress_get, _pyctp.CSgitFtdcUserSessionField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcUserSessionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcUserSessionField
    __del__ = lambda self: None
CSgitFtdcUserSessionField_swigregister = _pyctp.CSgitFtdcUserSessionField_swigregister
CSgitFtdcUserSessionField_swigregister(CSgitFtdcUserSessionField)

class CSgitFtdcQueryMaxOrderVolumeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQueryMaxOrderVolumeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQueryMaxOrderVolumeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQueryMaxOrderVolumeField_BrokerID_get, _pyctp.CSgitFtdcQueryMaxOrderVolumeField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQueryMaxOrderVolumeField_InvestorID_get, _pyctp.CSgitFtdcQueryMaxOrderVolumeField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcQueryMaxOrderVolumeField_InstrumentID_get, _pyctp.CSgitFtdcQueryMaxOrderVolumeField_InstrumentID_set)
    __swig_setmethods__["Direction"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CSgitFtdcQueryMaxOrderVolumeField_Direction_get, _pyctp.CSgitFtdcQueryMaxOrderVolumeField_Direction_set)
    __swig_setmethods__["OffsetFlag"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_pyctp.CSgitFtdcQueryMaxOrderVolumeField_OffsetFlag_get, _pyctp.CSgitFtdcQueryMaxOrderVolumeField_OffsetFlag_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CSgitFtdcQueryMaxOrderVolumeField_HedgeFlag_get, _pyctp.CSgitFtdcQueryMaxOrderVolumeField_HedgeFlag_set)
    __swig_setmethods__["MaxVolume"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeField_MaxVolume_set
    __swig_getmethods__["MaxVolume"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeField_MaxVolume_get
    if _newclass:
        MaxVolume = _swig_property(_pyctp.CSgitFtdcQueryMaxOrderVolumeField_MaxVolume_get, _pyctp.CSgitFtdcQueryMaxOrderVolumeField_MaxVolume_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQueryMaxOrderVolumeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQueryMaxOrderVolumeField
    __del__ = lambda self: None
CSgitFtdcQueryMaxOrderVolumeField_swigregister = _pyctp.CSgitFtdcQueryMaxOrderVolumeField_swigregister
CSgitFtdcQueryMaxOrderVolumeField_swigregister(CSgitFtdcQueryMaxOrderVolumeField)

class CSgitFtdcSettlementInfoConfirmField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcSettlementInfoConfirmField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcSettlementInfoConfirmField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcSettlementInfoConfirmField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcSettlementInfoConfirmField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcSettlementInfoConfirmField_BrokerID_get, _pyctp.CSgitFtdcSettlementInfoConfirmField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcSettlementInfoConfirmField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcSettlementInfoConfirmField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcSettlementInfoConfirmField_InvestorID_get, _pyctp.CSgitFtdcSettlementInfoConfirmField_InvestorID_set)
    __swig_setmethods__["ConfirmDate"] = _pyctp.CSgitFtdcSettlementInfoConfirmField_ConfirmDate_set
    __swig_getmethods__["ConfirmDate"] = _pyctp.CSgitFtdcSettlementInfoConfirmField_ConfirmDate_get
    if _newclass:
        ConfirmDate = _swig_property(_pyctp.CSgitFtdcSettlementInfoConfirmField_ConfirmDate_get, _pyctp.CSgitFtdcSettlementInfoConfirmField_ConfirmDate_set)
    __swig_setmethods__["ConfirmTime"] = _pyctp.CSgitFtdcSettlementInfoConfirmField_ConfirmTime_set
    __swig_getmethods__["ConfirmTime"] = _pyctp.CSgitFtdcSettlementInfoConfirmField_ConfirmTime_get
    if _newclass:
        ConfirmTime = _swig_property(_pyctp.CSgitFtdcSettlementInfoConfirmField_ConfirmTime_get, _pyctp.CSgitFtdcSettlementInfoConfirmField_ConfirmTime_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcSettlementInfoConfirmField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcSettlementInfoConfirmField
    __del__ = lambda self: None
CSgitFtdcSettlementInfoConfirmField_swigregister = _pyctp.CSgitFtdcSettlementInfoConfirmField_swigregister
CSgitFtdcSettlementInfoConfirmField_swigregister(CSgitFtdcSettlementInfoConfirmField)

class CSgitFtdcSyncDepositField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcSyncDepositField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcSyncDepositField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["DepositSeqNo"] = _pyctp.CSgitFtdcSyncDepositField_DepositSeqNo_set
    __swig_getmethods__["DepositSeqNo"] = _pyctp.CSgitFtdcSyncDepositField_DepositSeqNo_get
    if _newclass:
        DepositSeqNo = _swig_property(_pyctp.CSgitFtdcSyncDepositField_DepositSeqNo_get, _pyctp.CSgitFtdcSyncDepositField_DepositSeqNo_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncDepositField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncDepositField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcSyncDepositField_BrokerID_get, _pyctp.CSgitFtdcSyncDepositField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcSyncDepositField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcSyncDepositField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcSyncDepositField_InvestorID_get, _pyctp.CSgitFtdcSyncDepositField_InvestorID_set)
    __swig_setmethods__["Deposit"] = _pyctp.CSgitFtdcSyncDepositField_Deposit_set
    __swig_getmethods__["Deposit"] = _pyctp.CSgitFtdcSyncDepositField_Deposit_get
    if _newclass:
        Deposit = _swig_property(_pyctp.CSgitFtdcSyncDepositField_Deposit_get, _pyctp.CSgitFtdcSyncDepositField_Deposit_set)
    __swig_setmethods__["IsForce"] = _pyctp.CSgitFtdcSyncDepositField_IsForce_set
    __swig_getmethods__["IsForce"] = _pyctp.CSgitFtdcSyncDepositField_IsForce_get
    if _newclass:
        IsForce = _swig_property(_pyctp.CSgitFtdcSyncDepositField_IsForce_get, _pyctp.CSgitFtdcSyncDepositField_IsForce_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcSyncDepositField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcSyncDepositField
    __del__ = lambda self: None
CSgitFtdcSyncDepositField_swigregister = _pyctp.CSgitFtdcSyncDepositField_swigregister
CSgitFtdcSyncDepositField_swigregister(CSgitFtdcSyncDepositField)

class CSgitFtdcBrokerSyncField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcBrokerSyncField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcBrokerSyncField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerSyncField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerSyncField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcBrokerSyncField_BrokerID_get, _pyctp.CSgitFtdcBrokerSyncField_BrokerID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcBrokerSyncField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcBrokerSyncField
    __del__ = lambda self: None
CSgitFtdcBrokerSyncField_swigregister = _pyctp.CSgitFtdcBrokerSyncField_swigregister
CSgitFtdcBrokerSyncField_swigregister(CSgitFtdcBrokerSyncField)

class CSgitFtdcSyncingInvestorField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcSyncingInvestorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcSyncingInvestorField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcSyncingInvestorField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcSyncingInvestorField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcSyncingInvestorField_InvestorID_get, _pyctp.CSgitFtdcSyncingInvestorField_InvestorID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncingInvestorField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncingInvestorField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcSyncingInvestorField_BrokerID_get, _pyctp.CSgitFtdcSyncingInvestorField_BrokerID_set)
    __swig_setmethods__["InvestorGroupID"] = _pyctp.CSgitFtdcSyncingInvestorField_InvestorGroupID_set
    __swig_getmethods__["InvestorGroupID"] = _pyctp.CSgitFtdcSyncingInvestorField_InvestorGroupID_get
    if _newclass:
        InvestorGroupID = _swig_property(_pyctp.CSgitFtdcSyncingInvestorField_InvestorGroupID_get, _pyctp.CSgitFtdcSyncingInvestorField_InvestorGroupID_set)
    __swig_setmethods__["InvestorName"] = _pyctp.CSgitFtdcSyncingInvestorField_InvestorName_set
    __swig_getmethods__["InvestorName"] = _pyctp.CSgitFtdcSyncingInvestorField_InvestorName_get
    if _newclass:
        InvestorName = _swig_property(_pyctp.CSgitFtdcSyncingInvestorField_InvestorName_get, _pyctp.CSgitFtdcSyncingInvestorField_InvestorName_set)
    __swig_setmethods__["IdentifiedCardType"] = _pyctp.CSgitFtdcSyncingInvestorField_IdentifiedCardType_set
    __swig_getmethods__["IdentifiedCardType"] = _pyctp.CSgitFtdcSyncingInvestorField_IdentifiedCardType_get
    if _newclass:
        IdentifiedCardType = _swig_property(_pyctp.CSgitFtdcSyncingInvestorField_IdentifiedCardType_get, _pyctp.CSgitFtdcSyncingInvestorField_IdentifiedCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcSyncingInvestorField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcSyncingInvestorField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcSyncingInvestorField_IdentifiedCardNo_get, _pyctp.CSgitFtdcSyncingInvestorField_IdentifiedCardNo_set)
    __swig_setmethods__["IsActive"] = _pyctp.CSgitFtdcSyncingInvestorField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CSgitFtdcSyncingInvestorField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CSgitFtdcSyncingInvestorField_IsActive_get, _pyctp.CSgitFtdcSyncingInvestorField_IsActive_set)
    __swig_setmethods__["Telephone"] = _pyctp.CSgitFtdcSyncingInvestorField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CSgitFtdcSyncingInvestorField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CSgitFtdcSyncingInvestorField_Telephone_get, _pyctp.CSgitFtdcSyncingInvestorField_Telephone_set)
    __swig_setmethods__["Address"] = _pyctp.CSgitFtdcSyncingInvestorField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CSgitFtdcSyncingInvestorField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CSgitFtdcSyncingInvestorField_Address_get, _pyctp.CSgitFtdcSyncingInvestorField_Address_set)
    __swig_setmethods__["OpenDate"] = _pyctp.CSgitFtdcSyncingInvestorField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _pyctp.CSgitFtdcSyncingInvestorField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_pyctp.CSgitFtdcSyncingInvestorField_OpenDate_get, _pyctp.CSgitFtdcSyncingInvestorField_OpenDate_set)
    __swig_setmethods__["Mobile"] = _pyctp.CSgitFtdcSyncingInvestorField_Mobile_set
    __swig_getmethods__["Mobile"] = _pyctp.CSgitFtdcSyncingInvestorField_Mobile_get
    if _newclass:
        Mobile = _swig_property(_pyctp.CSgitFtdcSyncingInvestorField_Mobile_get, _pyctp.CSgitFtdcSyncingInvestorField_Mobile_set)
    __swig_setmethods__["CommModelID"] = _pyctp.CSgitFtdcSyncingInvestorField_CommModelID_set
    __swig_getmethods__["CommModelID"] = _pyctp.CSgitFtdcSyncingInvestorField_CommModelID_get
    if _newclass:
        CommModelID = _swig_property(_pyctp.CSgitFtdcSyncingInvestorField_CommModelID_get, _pyctp.CSgitFtdcSyncingInvestorField_CommModelID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcSyncingInvestorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcSyncingInvestorField
    __del__ = lambda self: None
CSgitFtdcSyncingInvestorField_swigregister = _pyctp.CSgitFtdcSyncingInvestorField_swigregister
CSgitFtdcSyncingInvestorField_swigregister(CSgitFtdcSyncingInvestorField)

class CSgitFtdcSyncingTradingCodeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcSyncingTradingCodeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcSyncingTradingCodeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcSyncingTradingCodeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcSyncingTradingCodeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcSyncingTradingCodeField_InvestorID_get, _pyctp.CSgitFtdcSyncingTradingCodeField_InvestorID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncingTradingCodeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncingTradingCodeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcSyncingTradingCodeField_BrokerID_get, _pyctp.CSgitFtdcSyncingTradingCodeField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcSyncingTradingCodeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcSyncingTradingCodeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcSyncingTradingCodeField_ExchangeID_get, _pyctp.CSgitFtdcSyncingTradingCodeField_ExchangeID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CSgitFtdcSyncingTradingCodeField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CSgitFtdcSyncingTradingCodeField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CSgitFtdcSyncingTradingCodeField_ClientID_get, _pyctp.CSgitFtdcSyncingTradingCodeField_ClientID_set)
    __swig_setmethods__["IsActive"] = _pyctp.CSgitFtdcSyncingTradingCodeField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CSgitFtdcSyncingTradingCodeField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CSgitFtdcSyncingTradingCodeField_IsActive_get, _pyctp.CSgitFtdcSyncingTradingCodeField_IsActive_set)
    __swig_setmethods__["ClientIDType"] = _pyctp.CSgitFtdcSyncingTradingCodeField_ClientIDType_set
    __swig_getmethods__["ClientIDType"] = _pyctp.CSgitFtdcSyncingTradingCodeField_ClientIDType_get
    if _newclass:
        ClientIDType = _swig_property(_pyctp.CSgitFtdcSyncingTradingCodeField_ClientIDType_get, _pyctp.CSgitFtdcSyncingTradingCodeField_ClientIDType_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcSyncingTradingCodeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcSyncingTradingCodeField
    __del__ = lambda self: None
CSgitFtdcSyncingTradingCodeField_swigregister = _pyctp.CSgitFtdcSyncingTradingCodeField_swigregister
CSgitFtdcSyncingTradingCodeField_swigregister(CSgitFtdcSyncingTradingCodeField)

class CSgitFtdcSyncingInvestorGroupField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcSyncingInvestorGroupField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcSyncingInvestorGroupField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncingInvestorGroupField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncingInvestorGroupField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcSyncingInvestorGroupField_BrokerID_get, _pyctp.CSgitFtdcSyncingInvestorGroupField_BrokerID_set)
    __swig_setmethods__["InvestorGroupID"] = _pyctp.CSgitFtdcSyncingInvestorGroupField_InvestorGroupID_set
    __swig_getmethods__["InvestorGroupID"] = _pyctp.CSgitFtdcSyncingInvestorGroupField_InvestorGroupID_get
    if _newclass:
        InvestorGroupID = _swig_property(_pyctp.CSgitFtdcSyncingInvestorGroupField_InvestorGroupID_get, _pyctp.CSgitFtdcSyncingInvestorGroupField_InvestorGroupID_set)
    __swig_setmethods__["InvestorGroupName"] = _pyctp.CSgitFtdcSyncingInvestorGroupField_InvestorGroupName_set
    __swig_getmethods__["InvestorGroupName"] = _pyctp.CSgitFtdcSyncingInvestorGroupField_InvestorGroupName_get
    if _newclass:
        InvestorGroupName = _swig_property(_pyctp.CSgitFtdcSyncingInvestorGroupField_InvestorGroupName_get, _pyctp.CSgitFtdcSyncingInvestorGroupField_InvestorGroupName_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcSyncingInvestorGroupField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcSyncingInvestorGroupField
    __del__ = lambda self: None
CSgitFtdcSyncingInvestorGroupField_swigregister = _pyctp.CSgitFtdcSyncingInvestorGroupField_swigregister
CSgitFtdcSyncingInvestorGroupField_swigregister(CSgitFtdcSyncingInvestorGroupField)

class CSgitFtdcSyncingTradingAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcSyncingTradingAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcSyncingTradingAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncingTradingAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncingTradingAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_BrokerID_get, _pyctp.CSgitFtdcSyncingTradingAccountField_BrokerID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcSyncingTradingAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcSyncingTradingAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_AccountID_get, _pyctp.CSgitFtdcSyncingTradingAccountField_AccountID_set)
    __swig_setmethods__["PreMortgage"] = _pyctp.CSgitFtdcSyncingTradingAccountField_PreMortgage_set
    __swig_getmethods__["PreMortgage"] = _pyctp.CSgitFtdcSyncingTradingAccountField_PreMortgage_get
    if _newclass:
        PreMortgage = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_PreMortgage_get, _pyctp.CSgitFtdcSyncingTradingAccountField_PreMortgage_set)
    __swig_setmethods__["PreCredit"] = _pyctp.CSgitFtdcSyncingTradingAccountField_PreCredit_set
    __swig_getmethods__["PreCredit"] = _pyctp.CSgitFtdcSyncingTradingAccountField_PreCredit_get
    if _newclass:
        PreCredit = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_PreCredit_get, _pyctp.CSgitFtdcSyncingTradingAccountField_PreCredit_set)
    __swig_setmethods__["PreDeposit"] = _pyctp.CSgitFtdcSyncingTradingAccountField_PreDeposit_set
    __swig_getmethods__["PreDeposit"] = _pyctp.CSgitFtdcSyncingTradingAccountField_PreDeposit_get
    if _newclass:
        PreDeposit = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_PreDeposit_get, _pyctp.CSgitFtdcSyncingTradingAccountField_PreDeposit_set)
    __swig_setmethods__["PreBalance"] = _pyctp.CSgitFtdcSyncingTradingAccountField_PreBalance_set
    __swig_getmethods__["PreBalance"] = _pyctp.CSgitFtdcSyncingTradingAccountField_PreBalance_get
    if _newclass:
        PreBalance = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_PreBalance_get, _pyctp.CSgitFtdcSyncingTradingAccountField_PreBalance_set)
    __swig_setmethods__["PreMargin"] = _pyctp.CSgitFtdcSyncingTradingAccountField_PreMargin_set
    __swig_getmethods__["PreMargin"] = _pyctp.CSgitFtdcSyncingTradingAccountField_PreMargin_get
    if _newclass:
        PreMargin = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_PreMargin_get, _pyctp.CSgitFtdcSyncingTradingAccountField_PreMargin_set)
    __swig_setmethods__["InterestBase"] = _pyctp.CSgitFtdcSyncingTradingAccountField_InterestBase_set
    __swig_getmethods__["InterestBase"] = _pyctp.CSgitFtdcSyncingTradingAccountField_InterestBase_get
    if _newclass:
        InterestBase = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_InterestBase_get, _pyctp.CSgitFtdcSyncingTradingAccountField_InterestBase_set)
    __swig_setmethods__["Interest"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Interest_set
    __swig_getmethods__["Interest"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Interest_get
    if _newclass:
        Interest = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_Interest_get, _pyctp.CSgitFtdcSyncingTradingAccountField_Interest_set)
    __swig_setmethods__["Deposit"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Deposit_set
    __swig_getmethods__["Deposit"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Deposit_get
    if _newclass:
        Deposit = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_Deposit_get, _pyctp.CSgitFtdcSyncingTradingAccountField_Deposit_set)
    __swig_setmethods__["Withdraw"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Withdraw_set
    __swig_getmethods__["Withdraw"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Withdraw_get
    if _newclass:
        Withdraw = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_Withdraw_get, _pyctp.CSgitFtdcSyncingTradingAccountField_Withdraw_set)
    __swig_setmethods__["FrozenMargin"] = _pyctp.CSgitFtdcSyncingTradingAccountField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _pyctp.CSgitFtdcSyncingTradingAccountField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_FrozenMargin_get, _pyctp.CSgitFtdcSyncingTradingAccountField_FrozenMargin_set)
    __swig_setmethods__["FrozenCash"] = _pyctp.CSgitFtdcSyncingTradingAccountField_FrozenCash_set
    __swig_getmethods__["FrozenCash"] = _pyctp.CSgitFtdcSyncingTradingAccountField_FrozenCash_get
    if _newclass:
        FrozenCash = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_FrozenCash_get, _pyctp.CSgitFtdcSyncingTradingAccountField_FrozenCash_set)
    __swig_setmethods__["FrozenCommission"] = _pyctp.CSgitFtdcSyncingTradingAccountField_FrozenCommission_set
    __swig_getmethods__["FrozenCommission"] = _pyctp.CSgitFtdcSyncingTradingAccountField_FrozenCommission_get
    if _newclass:
        FrozenCommission = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_FrozenCommission_get, _pyctp.CSgitFtdcSyncingTradingAccountField_FrozenCommission_set)
    __swig_setmethods__["CurrMargin"] = _pyctp.CSgitFtdcSyncingTradingAccountField_CurrMargin_set
    __swig_getmethods__["CurrMargin"] = _pyctp.CSgitFtdcSyncingTradingAccountField_CurrMargin_get
    if _newclass:
        CurrMargin = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_CurrMargin_get, _pyctp.CSgitFtdcSyncingTradingAccountField_CurrMargin_set)
    __swig_setmethods__["CashIn"] = _pyctp.CSgitFtdcSyncingTradingAccountField_CashIn_set
    __swig_getmethods__["CashIn"] = _pyctp.CSgitFtdcSyncingTradingAccountField_CashIn_get
    if _newclass:
        CashIn = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_CashIn_get, _pyctp.CSgitFtdcSyncingTradingAccountField_CashIn_set)
    __swig_setmethods__["Commission"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Commission_set
    __swig_getmethods__["Commission"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Commission_get
    if _newclass:
        Commission = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_Commission_get, _pyctp.CSgitFtdcSyncingTradingAccountField_Commission_set)
    __swig_setmethods__["CloseProfit"] = _pyctp.CSgitFtdcSyncingTradingAccountField_CloseProfit_set
    __swig_getmethods__["CloseProfit"] = _pyctp.CSgitFtdcSyncingTradingAccountField_CloseProfit_get
    if _newclass:
        CloseProfit = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_CloseProfit_get, _pyctp.CSgitFtdcSyncingTradingAccountField_CloseProfit_set)
    __swig_setmethods__["PositionProfit"] = _pyctp.CSgitFtdcSyncingTradingAccountField_PositionProfit_set
    __swig_getmethods__["PositionProfit"] = _pyctp.CSgitFtdcSyncingTradingAccountField_PositionProfit_get
    if _newclass:
        PositionProfit = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_PositionProfit_get, _pyctp.CSgitFtdcSyncingTradingAccountField_PositionProfit_set)
    __swig_setmethods__["Balance"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Balance_set
    __swig_getmethods__["Balance"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Balance_get
    if _newclass:
        Balance = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_Balance_get, _pyctp.CSgitFtdcSyncingTradingAccountField_Balance_set)
    __swig_setmethods__["Available"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Available_set
    __swig_getmethods__["Available"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Available_get
    if _newclass:
        Available = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_Available_get, _pyctp.CSgitFtdcSyncingTradingAccountField_Available_set)
    __swig_setmethods__["WithdrawQuota"] = _pyctp.CSgitFtdcSyncingTradingAccountField_WithdrawQuota_set
    __swig_getmethods__["WithdrawQuota"] = _pyctp.CSgitFtdcSyncingTradingAccountField_WithdrawQuota_get
    if _newclass:
        WithdrawQuota = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_WithdrawQuota_get, _pyctp.CSgitFtdcSyncingTradingAccountField_WithdrawQuota_set)
    __swig_setmethods__["Reserve"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Reserve_set
    __swig_getmethods__["Reserve"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Reserve_get
    if _newclass:
        Reserve = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_Reserve_get, _pyctp.CSgitFtdcSyncingTradingAccountField_Reserve_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcSyncingTradingAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcSyncingTradingAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_TradingDay_get, _pyctp.CSgitFtdcSyncingTradingAccountField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CSgitFtdcSyncingTradingAccountField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CSgitFtdcSyncingTradingAccountField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_SettlementID_get, _pyctp.CSgitFtdcSyncingTradingAccountField_SettlementID_set)
    __swig_setmethods__["Credit"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Credit_set
    __swig_getmethods__["Credit"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Credit_get
    if _newclass:
        Credit = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_Credit_get, _pyctp.CSgitFtdcSyncingTradingAccountField_Credit_set)
    __swig_setmethods__["Mortgage"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Mortgage_set
    __swig_getmethods__["Mortgage"] = _pyctp.CSgitFtdcSyncingTradingAccountField_Mortgage_get
    if _newclass:
        Mortgage = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_Mortgage_get, _pyctp.CSgitFtdcSyncingTradingAccountField_Mortgage_set)
    __swig_setmethods__["ExchangeMargin"] = _pyctp.CSgitFtdcSyncingTradingAccountField_ExchangeMargin_set
    __swig_getmethods__["ExchangeMargin"] = _pyctp.CSgitFtdcSyncingTradingAccountField_ExchangeMargin_get
    if _newclass:
        ExchangeMargin = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_ExchangeMargin_get, _pyctp.CSgitFtdcSyncingTradingAccountField_ExchangeMargin_set)
    __swig_setmethods__["DeliveryMargin"] = _pyctp.CSgitFtdcSyncingTradingAccountField_DeliveryMargin_set
    __swig_getmethods__["DeliveryMargin"] = _pyctp.CSgitFtdcSyncingTradingAccountField_DeliveryMargin_get
    if _newclass:
        DeliveryMargin = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_DeliveryMargin_get, _pyctp.CSgitFtdcSyncingTradingAccountField_DeliveryMargin_set)
    __swig_setmethods__["ExchangeDeliveryMargin"] = _pyctp.CSgitFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_set
    __swig_getmethods__["ExchangeDeliveryMargin"] = _pyctp.CSgitFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_get
    if _newclass:
        ExchangeDeliveryMargin = _swig_property(_pyctp.CSgitFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_get, _pyctp.CSgitFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcSyncingTradingAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcSyncingTradingAccountField
    __del__ = lambda self: None
CSgitFtdcSyncingTradingAccountField_swigregister = _pyctp.CSgitFtdcSyncingTradingAccountField_swigregister
CSgitFtdcSyncingTradingAccountField_swigregister(CSgitFtdcSyncingTradingAccountField)

class CSgitFtdcSyncingInvestorPositionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcSyncingInvestorPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcSyncingInvestorPositionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_InstrumentID_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_InstrumentID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_BrokerID_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_InvestorID_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_InvestorID_set)
    __swig_setmethods__["PosiDirection"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_PosiDirection_set
    __swig_getmethods__["PosiDirection"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_PosiDirection_get
    if _newclass:
        PosiDirection = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_PosiDirection_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_PosiDirection_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_HedgeFlag_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_HedgeFlag_set)
    __swig_setmethods__["PositionDate"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_PositionDate_set
    __swig_getmethods__["PositionDate"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_PositionDate_get
    if _newclass:
        PositionDate = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_PositionDate_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_PositionDate_set)
    __swig_setmethods__["YdPosition"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_YdPosition_set
    __swig_getmethods__["YdPosition"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_YdPosition_get
    if _newclass:
        YdPosition = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_YdPosition_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_YdPosition_set)
    __swig_setmethods__["Position"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_Position_set
    __swig_getmethods__["Position"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_Position_get
    if _newclass:
        Position = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_Position_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_Position_set)
    __swig_setmethods__["LongFrozen"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_LongFrozen_set
    __swig_getmethods__["LongFrozen"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_LongFrozen_get
    if _newclass:
        LongFrozen = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_LongFrozen_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_LongFrozen_set)
    __swig_setmethods__["ShortFrozen"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_ShortFrozen_set
    __swig_getmethods__["ShortFrozen"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_ShortFrozen_get
    if _newclass:
        ShortFrozen = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_ShortFrozen_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_ShortFrozen_set)
    __swig_setmethods__["LongFrozenAmount"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_LongFrozenAmount_set
    __swig_getmethods__["LongFrozenAmount"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_LongFrozenAmount_get
    if _newclass:
        LongFrozenAmount = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_LongFrozenAmount_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_LongFrozenAmount_set)
    __swig_setmethods__["ShortFrozenAmount"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_ShortFrozenAmount_set
    __swig_getmethods__["ShortFrozenAmount"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_ShortFrozenAmount_get
    if _newclass:
        ShortFrozenAmount = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_ShortFrozenAmount_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_ShortFrozenAmount_set)
    __swig_setmethods__["OpenVolume"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_OpenVolume_set
    __swig_getmethods__["OpenVolume"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_OpenVolume_get
    if _newclass:
        OpenVolume = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_OpenVolume_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_OpenVolume_set)
    __swig_setmethods__["CloseVolume"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CloseVolume_set
    __swig_getmethods__["CloseVolume"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CloseVolume_get
    if _newclass:
        CloseVolume = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_CloseVolume_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_CloseVolume_set)
    __swig_setmethods__["OpenAmount"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_OpenAmount_set
    __swig_getmethods__["OpenAmount"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_OpenAmount_get
    if _newclass:
        OpenAmount = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_OpenAmount_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_OpenAmount_set)
    __swig_setmethods__["CloseAmount"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CloseAmount_set
    __swig_getmethods__["CloseAmount"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CloseAmount_get
    if _newclass:
        CloseAmount = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_CloseAmount_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_CloseAmount_set)
    __swig_setmethods__["PositionCost"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_PositionCost_set
    __swig_getmethods__["PositionCost"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_PositionCost_get
    if _newclass:
        PositionCost = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_PositionCost_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_PositionCost_set)
    __swig_setmethods__["PreMargin"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_PreMargin_set
    __swig_getmethods__["PreMargin"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_PreMargin_get
    if _newclass:
        PreMargin = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_PreMargin_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_PreMargin_set)
    __swig_setmethods__["UseMargin"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_UseMargin_set
    __swig_getmethods__["UseMargin"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_UseMargin_get
    if _newclass:
        UseMargin = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_UseMargin_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_UseMargin_set)
    __swig_setmethods__["FrozenMargin"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_FrozenMargin_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_FrozenMargin_set)
    __swig_setmethods__["FrozenCash"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_FrozenCash_set
    __swig_getmethods__["FrozenCash"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_FrozenCash_get
    if _newclass:
        FrozenCash = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_FrozenCash_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_FrozenCash_set)
    __swig_setmethods__["FrozenCommission"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_FrozenCommission_set
    __swig_getmethods__["FrozenCommission"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_FrozenCommission_get
    if _newclass:
        FrozenCommission = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_FrozenCommission_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_FrozenCommission_set)
    __swig_setmethods__["CashIn"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CashIn_set
    __swig_getmethods__["CashIn"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CashIn_get
    if _newclass:
        CashIn = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_CashIn_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_CashIn_set)
    __swig_setmethods__["Commission"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_Commission_set
    __swig_getmethods__["Commission"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_Commission_get
    if _newclass:
        Commission = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_Commission_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_Commission_set)
    __swig_setmethods__["CloseProfit"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CloseProfit_set
    __swig_getmethods__["CloseProfit"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CloseProfit_get
    if _newclass:
        CloseProfit = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_CloseProfit_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_CloseProfit_set)
    __swig_setmethods__["PositionProfit"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_PositionProfit_set
    __swig_getmethods__["PositionProfit"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_PositionProfit_get
    if _newclass:
        PositionProfit = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_PositionProfit_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_PositionProfit_set)
    __swig_setmethods__["PreSettlementPrice"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_PreSettlementPrice_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_PreSettlementPrice_set)
    __swig_setmethods__["SettlementPrice"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_SettlementPrice_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_SettlementPrice_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_TradingDay_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_SettlementID_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_SettlementID_set)
    __swig_setmethods__["OpenCost"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_OpenCost_set
    __swig_getmethods__["OpenCost"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_OpenCost_get
    if _newclass:
        OpenCost = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_OpenCost_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_OpenCost_set)
    __swig_setmethods__["ExchangeMargin"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_ExchangeMargin_set
    __swig_getmethods__["ExchangeMargin"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_ExchangeMargin_get
    if _newclass:
        ExchangeMargin = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_ExchangeMargin_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_ExchangeMargin_set)
    __swig_setmethods__["CombPosition"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CombPosition_set
    __swig_getmethods__["CombPosition"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CombPosition_get
    if _newclass:
        CombPosition = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_CombPosition_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_CombPosition_set)
    __swig_setmethods__["CombLongFrozen"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CombLongFrozen_set
    __swig_getmethods__["CombLongFrozen"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CombLongFrozen_get
    if _newclass:
        CombLongFrozen = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_CombLongFrozen_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_CombLongFrozen_set)
    __swig_setmethods__["CombShortFrozen"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CombShortFrozen_set
    __swig_getmethods__["CombShortFrozen"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CombShortFrozen_get
    if _newclass:
        CombShortFrozen = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_CombShortFrozen_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_CombShortFrozen_set)
    __swig_setmethods__["CloseProfitByDate"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CloseProfitByDate_set
    __swig_getmethods__["CloseProfitByDate"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CloseProfitByDate_get
    if _newclass:
        CloseProfitByDate = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_CloseProfitByDate_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_CloseProfitByDate_set)
    __swig_setmethods__["CloseProfitByTrade"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CloseProfitByTrade_set
    __swig_getmethods__["CloseProfitByTrade"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_CloseProfitByTrade_get
    if _newclass:
        CloseProfitByTrade = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_CloseProfitByTrade_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_CloseProfitByTrade_set)
    __swig_setmethods__["TodayPosition"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_TodayPosition_set
    __swig_getmethods__["TodayPosition"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_TodayPosition_get
    if _newclass:
        TodayPosition = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_TodayPosition_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_TodayPosition_set)
    __swig_setmethods__["MarginRateByMoney"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_MarginRateByMoney_set
    __swig_getmethods__["MarginRateByMoney"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_MarginRateByMoney_get
    if _newclass:
        MarginRateByMoney = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_MarginRateByMoney_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_MarginRateByMoney_set)
    __swig_setmethods__["MarginRateByVolume"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_MarginRateByVolume_set
    __swig_getmethods__["MarginRateByVolume"] = _pyctp.CSgitFtdcSyncingInvestorPositionField_MarginRateByVolume_get
    if _newclass:
        MarginRateByVolume = _swig_property(_pyctp.CSgitFtdcSyncingInvestorPositionField_MarginRateByVolume_get, _pyctp.CSgitFtdcSyncingInvestorPositionField_MarginRateByVolume_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcSyncingInvestorPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcSyncingInvestorPositionField
    __del__ = lambda self: None
CSgitFtdcSyncingInvestorPositionField_swigregister = _pyctp.CSgitFtdcSyncingInvestorPositionField_swigregister
CSgitFtdcSyncingInvestorPositionField_swigregister(CSgitFtdcSyncingInvestorPositionField)

class CSgitFtdcSyncingInstrumentMarginRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcSyncingInstrumentMarginRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcSyncingInstrumentMarginRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentMarginRateField_InstrumentID_get, _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentMarginRateField_InvestorRange_get, _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentMarginRateField_BrokerID_get, _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentMarginRateField_InvestorID_get, _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_InvestorID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentMarginRateField_HedgeFlag_get, _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_HedgeFlag_set)
    __swig_setmethods__["LongMarginRatioByMoney"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_set
    __swig_getmethods__["LongMarginRatioByMoney"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_get
    if _newclass:
        LongMarginRatioByMoney = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_get, _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_set)
    __swig_setmethods__["LongMarginRatioByVolume"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_set
    __swig_getmethods__["LongMarginRatioByVolume"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_get
    if _newclass:
        LongMarginRatioByVolume = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_get, _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_set)
    __swig_setmethods__["ShortMarginRatioByMoney"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_set
    __swig_getmethods__["ShortMarginRatioByMoney"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_get
    if _newclass:
        ShortMarginRatioByMoney = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_get, _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_set)
    __swig_setmethods__["ShortMarginRatioByVolume"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_set
    __swig_getmethods__["ShortMarginRatioByVolume"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_get
    if _newclass:
        ShortMarginRatioByVolume = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_get, _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_set)
    __swig_setmethods__["IsRelative"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_IsRelative_set
    __swig_getmethods__["IsRelative"] = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_IsRelative_get
    if _newclass:
        IsRelative = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentMarginRateField_IsRelative_get, _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_IsRelative_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcSyncingInstrumentMarginRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcSyncingInstrumentMarginRateField
    __del__ = lambda self: None
CSgitFtdcSyncingInstrumentMarginRateField_swigregister = _pyctp.CSgitFtdcSyncingInstrumentMarginRateField_swigregister
CSgitFtdcSyncingInstrumentMarginRateField_swigregister(CSgitFtdcSyncingInstrumentMarginRateField)

class CSgitFtdcSyncingInstrumentCommissionRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcSyncingInstrumentCommissionRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcSyncingInstrumentCommissionRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_InstrumentID_get, _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_InvestorRange_get, _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_BrokerID_get, _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_InvestorID_get, _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_InvestorID_set)
    __swig_setmethods__["OpenRatioByMoney"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_set
    __swig_getmethods__["OpenRatioByMoney"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_get
    if _newclass:
        OpenRatioByMoney = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_get, _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_set)
    __swig_setmethods__["OpenRatioByVolume"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_set
    __swig_getmethods__["OpenRatioByVolume"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_get
    if _newclass:
        OpenRatioByVolume = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_get, _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_set)
    __swig_setmethods__["CloseRatioByMoney"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_set
    __swig_getmethods__["CloseRatioByMoney"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_get
    if _newclass:
        CloseRatioByMoney = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_get, _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_set)
    __swig_setmethods__["CloseRatioByVolume"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_set
    __swig_getmethods__["CloseRatioByVolume"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_get
    if _newclass:
        CloseRatioByVolume = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_get, _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_set)
    __swig_setmethods__["CloseTodayRatioByMoney"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_set
    __swig_getmethods__["CloseTodayRatioByMoney"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_get
    if _newclass:
        CloseTodayRatioByMoney = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_get, _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_set)
    __swig_setmethods__["CloseTodayRatioByVolume"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_set
    __swig_getmethods__["CloseTodayRatioByVolume"] = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_get
    if _newclass:
        CloseTodayRatioByVolume = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_get, _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcSyncingInstrumentCommissionRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcSyncingInstrumentCommissionRateField
    __del__ = lambda self: None
CSgitFtdcSyncingInstrumentCommissionRateField_swigregister = _pyctp.CSgitFtdcSyncingInstrumentCommissionRateField_swigregister
CSgitFtdcSyncingInstrumentCommissionRateField_swigregister(CSgitFtdcSyncingInstrumentCommissionRateField)

class CSgitFtdcSyncingInstrumentTradingRightField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcSyncingInstrumentTradingRightField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcSyncingInstrumentTradingRightField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcSyncingInstrumentTradingRightField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcSyncingInstrumentTradingRightField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentTradingRightField_InstrumentID_get, _pyctp.CSgitFtdcSyncingInstrumentTradingRightField_InstrumentID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CSgitFtdcSyncingInstrumentTradingRightField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CSgitFtdcSyncingInstrumentTradingRightField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentTradingRightField_InvestorRange_get, _pyctp.CSgitFtdcSyncingInstrumentTradingRightField_InvestorRange_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncingInstrumentTradingRightField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcSyncingInstrumentTradingRightField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentTradingRightField_BrokerID_get, _pyctp.CSgitFtdcSyncingInstrumentTradingRightField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcSyncingInstrumentTradingRightField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcSyncingInstrumentTradingRightField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentTradingRightField_InvestorID_get, _pyctp.CSgitFtdcSyncingInstrumentTradingRightField_InvestorID_set)
    __swig_setmethods__["TradingRight"] = _pyctp.CSgitFtdcSyncingInstrumentTradingRightField_TradingRight_set
    __swig_getmethods__["TradingRight"] = _pyctp.CSgitFtdcSyncingInstrumentTradingRightField_TradingRight_get
    if _newclass:
        TradingRight = _swig_property(_pyctp.CSgitFtdcSyncingInstrumentTradingRightField_TradingRight_get, _pyctp.CSgitFtdcSyncingInstrumentTradingRightField_TradingRight_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcSyncingInstrumentTradingRightField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcSyncingInstrumentTradingRightField
    __del__ = lambda self: None
CSgitFtdcSyncingInstrumentTradingRightField_swigregister = _pyctp.CSgitFtdcSyncingInstrumentTradingRightField_swigregister
CSgitFtdcSyncingInstrumentTradingRightField_swigregister(CSgitFtdcSyncingInstrumentTradingRightField)

class CSgitFtdcQryOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryOrderField_BrokerID_get, _pyctp.CSgitFtdcQryOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryOrderField_InvestorID_get, _pyctp.CSgitFtdcQryOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcQryOrderField_InstrumentID_get, _pyctp.CSgitFtdcQryOrderField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryOrderField_ExchangeID_get, _pyctp.CSgitFtdcQryOrderField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CSgitFtdcQryOrderField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CSgitFtdcQryOrderField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CSgitFtdcQryOrderField_OrderSysID_get, _pyctp.CSgitFtdcQryOrderField_OrderSysID_set)
    __swig_setmethods__["InsertTimeStart"] = _pyctp.CSgitFtdcQryOrderField_InsertTimeStart_set
    __swig_getmethods__["InsertTimeStart"] = _pyctp.CSgitFtdcQryOrderField_InsertTimeStart_get
    if _newclass:
        InsertTimeStart = _swig_property(_pyctp.CSgitFtdcQryOrderField_InsertTimeStart_get, _pyctp.CSgitFtdcQryOrderField_InsertTimeStart_set)
    __swig_setmethods__["InsertTimeEnd"] = _pyctp.CSgitFtdcQryOrderField_InsertTimeEnd_set
    __swig_getmethods__["InsertTimeEnd"] = _pyctp.CSgitFtdcQryOrderField_InsertTimeEnd_get
    if _newclass:
        InsertTimeEnd = _swig_property(_pyctp.CSgitFtdcQryOrderField_InsertTimeEnd_get, _pyctp.CSgitFtdcQryOrderField_InsertTimeEnd_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryOrderField
    __del__ = lambda self: None
CSgitFtdcQryOrderField_swigregister = _pyctp.CSgitFtdcQryOrderField_swigregister
CSgitFtdcQryOrderField_swigregister(CSgitFtdcQryOrderField)

class CSgitFtdcQryTradeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryTradeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryTradeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryTradeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryTradeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryTradeField_BrokerID_get, _pyctp.CSgitFtdcQryTradeField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryTradeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryTradeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryTradeField_InvestorID_get, _pyctp.CSgitFtdcQryTradeField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryTradeField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryTradeField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcQryTradeField_InstrumentID_get, _pyctp.CSgitFtdcQryTradeField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryTradeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryTradeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryTradeField_ExchangeID_get, _pyctp.CSgitFtdcQryTradeField_ExchangeID_set)
    __swig_setmethods__["TradeID"] = _pyctp.CSgitFtdcQryTradeField_TradeID_set
    __swig_getmethods__["TradeID"] = _pyctp.CSgitFtdcQryTradeField_TradeID_get
    if _newclass:
        TradeID = _swig_property(_pyctp.CSgitFtdcQryTradeField_TradeID_get, _pyctp.CSgitFtdcQryTradeField_TradeID_set)
    __swig_setmethods__["TradeTimeStart"] = _pyctp.CSgitFtdcQryTradeField_TradeTimeStart_set
    __swig_getmethods__["TradeTimeStart"] = _pyctp.CSgitFtdcQryTradeField_TradeTimeStart_get
    if _newclass:
        TradeTimeStart = _swig_property(_pyctp.CSgitFtdcQryTradeField_TradeTimeStart_get, _pyctp.CSgitFtdcQryTradeField_TradeTimeStart_set)
    __swig_setmethods__["TradeTimeEnd"] = _pyctp.CSgitFtdcQryTradeField_TradeTimeEnd_set
    __swig_getmethods__["TradeTimeEnd"] = _pyctp.CSgitFtdcQryTradeField_TradeTimeEnd_get
    if _newclass:
        TradeTimeEnd = _swig_property(_pyctp.CSgitFtdcQryTradeField_TradeTimeEnd_get, _pyctp.CSgitFtdcQryTradeField_TradeTimeEnd_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryTradeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryTradeField
    __del__ = lambda self: None
CSgitFtdcQryTradeField_swigregister = _pyctp.CSgitFtdcQryTradeField_swigregister
CSgitFtdcQryTradeField_swigregister(CSgitFtdcQryTradeField)

class CSgitFtdcQryInvestorPositionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryInvestorPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryInvestorPositionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryInvestorPositionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryInvestorPositionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryInvestorPositionField_BrokerID_get, _pyctp.CSgitFtdcQryInvestorPositionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryInvestorPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryInvestorPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryInvestorPositionField_InvestorID_get, _pyctp.CSgitFtdcQryInvestorPositionField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryInvestorPositionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryInvestorPositionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcQryInvestorPositionField_InstrumentID_get, _pyctp.CSgitFtdcQryInvestorPositionField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryInvestorPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryInvestorPositionField
    __del__ = lambda self: None
CSgitFtdcQryInvestorPositionField_swigregister = _pyctp.CSgitFtdcQryInvestorPositionField_swigregister
CSgitFtdcQryInvestorPositionField_swigregister(CSgitFtdcQryInvestorPositionField)

class CSgitFtdcQryTradingAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryTradingAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryTradingAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryTradingAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryTradingAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryTradingAccountField_BrokerID_get, _pyctp.CSgitFtdcQryTradingAccountField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryTradingAccountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryTradingAccountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryTradingAccountField_InvestorID_get, _pyctp.CSgitFtdcQryTradingAccountField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryTradingAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryTradingAccountField
    __del__ = lambda self: None
CSgitFtdcQryTradingAccountField_swigregister = _pyctp.CSgitFtdcQryTradingAccountField_swigregister
CSgitFtdcQryTradingAccountField_swigregister(CSgitFtdcQryTradingAccountField)

class CSgitFtdcQryInvestorField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryInvestorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryInvestorField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryInvestorField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryInvestorField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryInvestorField_BrokerID_get, _pyctp.CSgitFtdcQryInvestorField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryInvestorField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryInvestorField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryInvestorField_InvestorID_get, _pyctp.CSgitFtdcQryInvestorField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryInvestorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryInvestorField
    __del__ = lambda self: None
CSgitFtdcQryInvestorField_swigregister = _pyctp.CSgitFtdcQryInvestorField_swigregister
CSgitFtdcQryInvestorField_swigregister(CSgitFtdcQryInvestorField)

class CSgitFtdcQryTradingCodeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryTradingCodeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryTradingCodeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryTradingCodeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryTradingCodeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryTradingCodeField_BrokerID_get, _pyctp.CSgitFtdcQryTradingCodeField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryTradingCodeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryTradingCodeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryTradingCodeField_InvestorID_get, _pyctp.CSgitFtdcQryTradingCodeField_InvestorID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryTradingCodeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryTradingCodeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryTradingCodeField_ExchangeID_get, _pyctp.CSgitFtdcQryTradingCodeField_ExchangeID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CSgitFtdcQryTradingCodeField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CSgitFtdcQryTradingCodeField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CSgitFtdcQryTradingCodeField_ClientID_get, _pyctp.CSgitFtdcQryTradingCodeField_ClientID_set)
    __swig_setmethods__["ClientIDType"] = _pyctp.CSgitFtdcQryTradingCodeField_ClientIDType_set
    __swig_getmethods__["ClientIDType"] = _pyctp.CSgitFtdcQryTradingCodeField_ClientIDType_get
    if _newclass:
        ClientIDType = _swig_property(_pyctp.CSgitFtdcQryTradingCodeField_ClientIDType_get, _pyctp.CSgitFtdcQryTradingCodeField_ClientIDType_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryTradingCodeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryTradingCodeField
    __del__ = lambda self: None
CSgitFtdcQryTradingCodeField_swigregister = _pyctp.CSgitFtdcQryTradingCodeField_swigregister
CSgitFtdcQryTradingCodeField_swigregister(CSgitFtdcQryTradingCodeField)

class CSgitFtdcQryInvestorGroupField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryInvestorGroupField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryInvestorGroupField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryInvestorGroupField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryInvestorGroupField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryInvestorGroupField_BrokerID_get, _pyctp.CSgitFtdcQryInvestorGroupField_BrokerID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryInvestorGroupField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryInvestorGroupField
    __del__ = lambda self: None
CSgitFtdcQryInvestorGroupField_swigregister = _pyctp.CSgitFtdcQryInvestorGroupField_swigregister
CSgitFtdcQryInvestorGroupField_swigregister(CSgitFtdcQryInvestorGroupField)

class CSgitFtdcQryInstrumentMarginRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryInstrumentMarginRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryInstrumentMarginRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryInstrumentMarginRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryInstrumentMarginRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryInstrumentMarginRateField_BrokerID_get, _pyctp.CSgitFtdcQryInstrumentMarginRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryInstrumentMarginRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryInstrumentMarginRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryInstrumentMarginRateField_InvestorID_get, _pyctp.CSgitFtdcQryInstrumentMarginRateField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryInstrumentMarginRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryInstrumentMarginRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcQryInstrumentMarginRateField_InstrumentID_get, _pyctp.CSgitFtdcQryInstrumentMarginRateField_InstrumentID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CSgitFtdcQryInstrumentMarginRateField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CSgitFtdcQryInstrumentMarginRateField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CSgitFtdcQryInstrumentMarginRateField_HedgeFlag_get, _pyctp.CSgitFtdcQryInstrumentMarginRateField_HedgeFlag_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryInstrumentMarginRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryInstrumentMarginRateField
    __del__ = lambda self: None
CSgitFtdcQryInstrumentMarginRateField_swigregister = _pyctp.CSgitFtdcQryInstrumentMarginRateField_swigregister
CSgitFtdcQryInstrumentMarginRateField_swigregister(CSgitFtdcQryInstrumentMarginRateField)

class CSgitFtdcQryInstrumentCommissionRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryInstrumentCommissionRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryInstrumentCommissionRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryInstrumentCommissionRateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryInstrumentCommissionRateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryInstrumentCommissionRateField_BrokerID_get, _pyctp.CSgitFtdcQryInstrumentCommissionRateField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryInstrumentCommissionRateField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryInstrumentCommissionRateField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryInstrumentCommissionRateField_InvestorID_get, _pyctp.CSgitFtdcQryInstrumentCommissionRateField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryInstrumentCommissionRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryInstrumentCommissionRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcQryInstrumentCommissionRateField_InstrumentID_get, _pyctp.CSgitFtdcQryInstrumentCommissionRateField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryInstrumentCommissionRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryInstrumentCommissionRateField
    __del__ = lambda self: None
CSgitFtdcQryInstrumentCommissionRateField_swigregister = _pyctp.CSgitFtdcQryInstrumentCommissionRateField_swigregister
CSgitFtdcQryInstrumentCommissionRateField_swigregister(CSgitFtdcQryInstrumentCommissionRateField)

class CSgitFtdcQryInstrumentTradingRightField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryInstrumentTradingRightField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryInstrumentTradingRightField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryInstrumentTradingRightField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryInstrumentTradingRightField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryInstrumentTradingRightField_BrokerID_get, _pyctp.CSgitFtdcQryInstrumentTradingRightField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryInstrumentTradingRightField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryInstrumentTradingRightField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryInstrumentTradingRightField_InvestorID_get, _pyctp.CSgitFtdcQryInstrumentTradingRightField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryInstrumentTradingRightField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryInstrumentTradingRightField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcQryInstrumentTradingRightField_InstrumentID_get, _pyctp.CSgitFtdcQryInstrumentTradingRightField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryInstrumentTradingRightField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryInstrumentTradingRightField
    __del__ = lambda self: None
CSgitFtdcQryInstrumentTradingRightField_swigregister = _pyctp.CSgitFtdcQryInstrumentTradingRightField_swigregister
CSgitFtdcQryInstrumentTradingRightField_swigregister(CSgitFtdcQryInstrumentTradingRightField)

class CSgitFtdcQryBrokerField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryBrokerField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryBrokerField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryBrokerField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryBrokerField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryBrokerField_BrokerID_get, _pyctp.CSgitFtdcQryBrokerField_BrokerID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryBrokerField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryBrokerField
    __del__ = lambda self: None
CSgitFtdcQryBrokerField_swigregister = _pyctp.CSgitFtdcQryBrokerField_swigregister
CSgitFtdcQryBrokerField_swigregister(CSgitFtdcQryBrokerField)

class CSgitFtdcQryTraderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryTraderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryTraderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryTraderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryTraderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryTraderField_ExchangeID_get, _pyctp.CSgitFtdcQryTraderField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcQryTraderField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcQryTraderField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcQryTraderField_ParticipantID_get, _pyctp.CSgitFtdcQryTraderField_ParticipantID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcQryTraderField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcQryTraderField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcQryTraderField_TraderID_get, _pyctp.CSgitFtdcQryTraderField_TraderID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryTraderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryTraderField
    __del__ = lambda self: None
CSgitFtdcQryTraderField_swigregister = _pyctp.CSgitFtdcQryTraderField_swigregister
CSgitFtdcQryTraderField_swigregister(CSgitFtdcQryTraderField)

class CSgitFtdcQryPartBrokerField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryPartBrokerField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryPartBrokerField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryPartBrokerField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryPartBrokerField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryPartBrokerField_ExchangeID_get, _pyctp.CSgitFtdcQryPartBrokerField_ExchangeID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryPartBrokerField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryPartBrokerField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryPartBrokerField_BrokerID_get, _pyctp.CSgitFtdcQryPartBrokerField_BrokerID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcQryPartBrokerField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcQryPartBrokerField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcQryPartBrokerField_ParticipantID_get, _pyctp.CSgitFtdcQryPartBrokerField_ParticipantID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryPartBrokerField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryPartBrokerField
    __del__ = lambda self: None
CSgitFtdcQryPartBrokerField_swigregister = _pyctp.CSgitFtdcQryPartBrokerField_swigregister
CSgitFtdcQryPartBrokerField_swigregister(CSgitFtdcQryPartBrokerField)

class CSgitFtdcQrySuperUserFunctionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQrySuperUserFunctionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQrySuperUserFunctionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcQrySuperUserFunctionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcQrySuperUserFunctionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcQrySuperUserFunctionField_UserID_get, _pyctp.CSgitFtdcQrySuperUserFunctionField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQrySuperUserFunctionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQrySuperUserFunctionField
    __del__ = lambda self: None
CSgitFtdcQrySuperUserFunctionField_swigregister = _pyctp.CSgitFtdcQrySuperUserFunctionField_swigregister
CSgitFtdcQrySuperUserFunctionField_swigregister(CSgitFtdcQrySuperUserFunctionField)

class CSgitFtdcQryUserSessionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryUserSessionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryUserSessionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FrontID"] = _pyctp.CSgitFtdcQryUserSessionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CSgitFtdcQryUserSessionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CSgitFtdcQryUserSessionField_FrontID_get, _pyctp.CSgitFtdcQryUserSessionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcQryUserSessionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcQryUserSessionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcQryUserSessionField_SessionID_get, _pyctp.CSgitFtdcQryUserSessionField_SessionID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryUserSessionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryUserSessionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryUserSessionField_BrokerID_get, _pyctp.CSgitFtdcQryUserSessionField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcQryUserSessionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcQryUserSessionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcQryUserSessionField_UserID_get, _pyctp.CSgitFtdcQryUserSessionField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryUserSessionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryUserSessionField
    __del__ = lambda self: None
CSgitFtdcQryUserSessionField_swigregister = _pyctp.CSgitFtdcQryUserSessionField_swigregister
CSgitFtdcQryUserSessionField_swigregister(CSgitFtdcQryUserSessionField)

class CSgitFtdcQryFrontStatusField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryFrontStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryFrontStatusField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["FrontID"] = _pyctp.CSgitFtdcQryFrontStatusField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CSgitFtdcQryFrontStatusField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CSgitFtdcQryFrontStatusField_FrontID_get, _pyctp.CSgitFtdcQryFrontStatusField_FrontID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryFrontStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryFrontStatusField
    __del__ = lambda self: None
CSgitFtdcQryFrontStatusField_swigregister = _pyctp.CSgitFtdcQryFrontStatusField_swigregister
CSgitFtdcQryFrontStatusField_swigregister(CSgitFtdcQryFrontStatusField)

class CSgitFtdcQryExchangeOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryExchangeOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryExchangeOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcQryExchangeOrderField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcQryExchangeOrderField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcQryExchangeOrderField_ParticipantID_get, _pyctp.CSgitFtdcQryExchangeOrderField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CSgitFtdcQryExchangeOrderField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CSgitFtdcQryExchangeOrderField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CSgitFtdcQryExchangeOrderField_ClientID_get, _pyctp.CSgitFtdcQryExchangeOrderField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcQryExchangeOrderField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcQryExchangeOrderField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CSgitFtdcQryExchangeOrderField_ExchangeInstID_get, _pyctp.CSgitFtdcQryExchangeOrderField_ExchangeInstID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryExchangeOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryExchangeOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryExchangeOrderField_ExchangeID_get, _pyctp.CSgitFtdcQryExchangeOrderField_ExchangeID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcQryExchangeOrderField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcQryExchangeOrderField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcQryExchangeOrderField_TraderID_get, _pyctp.CSgitFtdcQryExchangeOrderField_TraderID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryExchangeOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryExchangeOrderField
    __del__ = lambda self: None
CSgitFtdcQryExchangeOrderField_swigregister = _pyctp.CSgitFtdcQryExchangeOrderField_swigregister
CSgitFtdcQryExchangeOrderField_swigregister(CSgitFtdcQryExchangeOrderField)

class CSgitFtdcQryOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryOrderActionField_BrokerID_get, _pyctp.CSgitFtdcQryOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryOrderActionField_InvestorID_get, _pyctp.CSgitFtdcQryOrderActionField_InvestorID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryOrderActionField_ExchangeID_get, _pyctp.CSgitFtdcQryOrderActionField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryOrderActionField
    __del__ = lambda self: None
CSgitFtdcQryOrderActionField_swigregister = _pyctp.CSgitFtdcQryOrderActionField_swigregister
CSgitFtdcQryOrderActionField_swigregister(CSgitFtdcQryOrderActionField)

class CSgitFtdcQryExchangeOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryExchangeOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryExchangeOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcQryExchangeOrderActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcQryExchangeOrderActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcQryExchangeOrderActionField_ParticipantID_get, _pyctp.CSgitFtdcQryExchangeOrderActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CSgitFtdcQryExchangeOrderActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CSgitFtdcQryExchangeOrderActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CSgitFtdcQryExchangeOrderActionField_ClientID_get, _pyctp.CSgitFtdcQryExchangeOrderActionField_ClientID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryExchangeOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryExchangeOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryExchangeOrderActionField_ExchangeID_get, _pyctp.CSgitFtdcQryExchangeOrderActionField_ExchangeID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcQryExchangeOrderActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcQryExchangeOrderActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcQryExchangeOrderActionField_TraderID_get, _pyctp.CSgitFtdcQryExchangeOrderActionField_TraderID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryExchangeOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryExchangeOrderActionField
    __del__ = lambda self: None
CSgitFtdcQryExchangeOrderActionField_swigregister = _pyctp.CSgitFtdcQryExchangeOrderActionField_swigregister
CSgitFtdcQryExchangeOrderActionField_swigregister(CSgitFtdcQryExchangeOrderActionField)

class CSgitFtdcQrySuperUserField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQrySuperUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQrySuperUserField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcQrySuperUserField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcQrySuperUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcQrySuperUserField_UserID_get, _pyctp.CSgitFtdcQrySuperUserField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQrySuperUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQrySuperUserField
    __del__ = lambda self: None
CSgitFtdcQrySuperUserField_swigregister = _pyctp.CSgitFtdcQrySuperUserField_swigregister
CSgitFtdcQrySuperUserField_swigregister(CSgitFtdcQrySuperUserField)

class CSgitFtdcQryExchangeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryExchangeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryExchangeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryExchangeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryExchangeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryExchangeField_ExchangeID_get, _pyctp.CSgitFtdcQryExchangeField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryExchangeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryExchangeField
    __del__ = lambda self: None
CSgitFtdcQryExchangeField_swigregister = _pyctp.CSgitFtdcQryExchangeField_swigregister
CSgitFtdcQryExchangeField_swigregister(CSgitFtdcQryExchangeField)

class CSgitFtdcQryProductField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryProductField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryProductField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ProductID"] = _pyctp.CSgitFtdcQryProductField_ProductID_set
    __swig_getmethods__["ProductID"] = _pyctp.CSgitFtdcQryProductField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_pyctp.CSgitFtdcQryProductField_ProductID_get, _pyctp.CSgitFtdcQryProductField_ProductID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryProductField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryProductField
    __del__ = lambda self: None
CSgitFtdcQryProductField_swigregister = _pyctp.CSgitFtdcQryProductField_swigregister
CSgitFtdcQryProductField_swigregister(CSgitFtdcQryProductField)

class CSgitFtdcQryInstrumentField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryInstrumentField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryInstrumentField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryInstrumentField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryInstrumentField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcQryInstrumentField_InstrumentID_get, _pyctp.CSgitFtdcQryInstrumentField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryInstrumentField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryInstrumentField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryInstrumentField_ExchangeID_get, _pyctp.CSgitFtdcQryInstrumentField_ExchangeID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcQryInstrumentField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcQryInstrumentField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CSgitFtdcQryInstrumentField_ExchangeInstID_get, _pyctp.CSgitFtdcQryInstrumentField_ExchangeInstID_set)
    __swig_setmethods__["ProductID"] = _pyctp.CSgitFtdcQryInstrumentField_ProductID_set
    __swig_getmethods__["ProductID"] = _pyctp.CSgitFtdcQryInstrumentField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_pyctp.CSgitFtdcQryInstrumentField_ProductID_get, _pyctp.CSgitFtdcQryInstrumentField_ProductID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryInstrumentField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryInstrumentField
    __del__ = lambda self: None
CSgitFtdcQryInstrumentField_swigregister = _pyctp.CSgitFtdcQryInstrumentField_swigregister
CSgitFtdcQryInstrumentField_swigregister(CSgitFtdcQryInstrumentField)

class CSgitFtdcQryDepthMarketDataField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryDepthMarketDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryDepthMarketDataField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryDepthMarketDataField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryDepthMarketDataField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcQryDepthMarketDataField_InstrumentID_get, _pyctp.CSgitFtdcQryDepthMarketDataField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryDepthMarketDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryDepthMarketDataField
    __del__ = lambda self: None
CSgitFtdcQryDepthMarketDataField_swigregister = _pyctp.CSgitFtdcQryDepthMarketDataField_swigregister
CSgitFtdcQryDepthMarketDataField_swigregister(CSgitFtdcQryDepthMarketDataField)

class CSgitFtdcQryBrokerUserField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryBrokerUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryBrokerUserField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryBrokerUserField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryBrokerUserField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryBrokerUserField_BrokerID_get, _pyctp.CSgitFtdcQryBrokerUserField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcQryBrokerUserField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcQryBrokerUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcQryBrokerUserField_UserID_get, _pyctp.CSgitFtdcQryBrokerUserField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryBrokerUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryBrokerUserField
    __del__ = lambda self: None
CSgitFtdcQryBrokerUserField_swigregister = _pyctp.CSgitFtdcQryBrokerUserField_swigregister
CSgitFtdcQryBrokerUserField_swigregister(CSgitFtdcQryBrokerUserField)

class CSgitFtdcQryBrokerUserFunctionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryBrokerUserFunctionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryBrokerUserFunctionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryBrokerUserFunctionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryBrokerUserFunctionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryBrokerUserFunctionField_BrokerID_get, _pyctp.CSgitFtdcQryBrokerUserFunctionField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcQryBrokerUserFunctionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcQryBrokerUserFunctionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcQryBrokerUserFunctionField_UserID_get, _pyctp.CSgitFtdcQryBrokerUserFunctionField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryBrokerUserFunctionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryBrokerUserFunctionField
    __del__ = lambda self: None
CSgitFtdcQryBrokerUserFunctionField_swigregister = _pyctp.CSgitFtdcQryBrokerUserFunctionField_swigregister
CSgitFtdcQryBrokerUserFunctionField_swigregister(CSgitFtdcQryBrokerUserFunctionField)

class CSgitFtdcQryTraderOfferField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryTraderOfferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryTraderOfferField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryTraderOfferField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryTraderOfferField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryTraderOfferField_ExchangeID_get, _pyctp.CSgitFtdcQryTraderOfferField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcQryTraderOfferField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcQryTraderOfferField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcQryTraderOfferField_ParticipantID_get, _pyctp.CSgitFtdcQryTraderOfferField_ParticipantID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcQryTraderOfferField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcQryTraderOfferField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcQryTraderOfferField_TraderID_get, _pyctp.CSgitFtdcQryTraderOfferField_TraderID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryTraderOfferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryTraderOfferField
    __del__ = lambda self: None
CSgitFtdcQryTraderOfferField_swigregister = _pyctp.CSgitFtdcQryTraderOfferField_swigregister
CSgitFtdcQryTraderOfferField_swigregister(CSgitFtdcQryTraderOfferField)

class CSgitFtdcQrySyncDepositField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQrySyncDepositField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQrySyncDepositField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQrySyncDepositField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQrySyncDepositField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQrySyncDepositField_BrokerID_get, _pyctp.CSgitFtdcQrySyncDepositField_BrokerID_set)
    __swig_setmethods__["DepositSeqNo"] = _pyctp.CSgitFtdcQrySyncDepositField_DepositSeqNo_set
    __swig_getmethods__["DepositSeqNo"] = _pyctp.CSgitFtdcQrySyncDepositField_DepositSeqNo_get
    if _newclass:
        DepositSeqNo = _swig_property(_pyctp.CSgitFtdcQrySyncDepositField_DepositSeqNo_get, _pyctp.CSgitFtdcQrySyncDepositField_DepositSeqNo_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQrySyncDepositField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQrySyncDepositField
    __del__ = lambda self: None
CSgitFtdcQrySyncDepositField_swigregister = _pyctp.CSgitFtdcQrySyncDepositField_swigregister
CSgitFtdcQrySyncDepositField_swigregister(CSgitFtdcQrySyncDepositField)

class CSgitFtdcQrySettlementInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQrySettlementInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQrySettlementInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQrySettlementInfoField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQrySettlementInfoField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQrySettlementInfoField_BrokerID_get, _pyctp.CSgitFtdcQrySettlementInfoField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQrySettlementInfoField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQrySettlementInfoField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQrySettlementInfoField_InvestorID_get, _pyctp.CSgitFtdcQrySettlementInfoField_InvestorID_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcQrySettlementInfoField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcQrySettlementInfoField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcQrySettlementInfoField_TradingDay_get, _pyctp.CSgitFtdcQrySettlementInfoField_TradingDay_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQrySettlementInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQrySettlementInfoField
    __del__ = lambda self: None
CSgitFtdcQrySettlementInfoField_swigregister = _pyctp.CSgitFtdcQrySettlementInfoField_swigregister
CSgitFtdcQrySettlementInfoField_swigregister(CSgitFtdcQrySettlementInfoField)

class CSgitFtdcQryHisOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryHisOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryHisOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryHisOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryHisOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryHisOrderField_BrokerID_get, _pyctp.CSgitFtdcQryHisOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryHisOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryHisOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryHisOrderField_InvestorID_get, _pyctp.CSgitFtdcQryHisOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryHisOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryHisOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcQryHisOrderField_InstrumentID_get, _pyctp.CSgitFtdcQryHisOrderField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryHisOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryHisOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryHisOrderField_ExchangeID_get, _pyctp.CSgitFtdcQryHisOrderField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CSgitFtdcQryHisOrderField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CSgitFtdcQryHisOrderField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CSgitFtdcQryHisOrderField_OrderSysID_get, _pyctp.CSgitFtdcQryHisOrderField_OrderSysID_set)
    __swig_setmethods__["InsertTimeStart"] = _pyctp.CSgitFtdcQryHisOrderField_InsertTimeStart_set
    __swig_getmethods__["InsertTimeStart"] = _pyctp.CSgitFtdcQryHisOrderField_InsertTimeStart_get
    if _newclass:
        InsertTimeStart = _swig_property(_pyctp.CSgitFtdcQryHisOrderField_InsertTimeStart_get, _pyctp.CSgitFtdcQryHisOrderField_InsertTimeStart_set)
    __swig_setmethods__["InsertTimeEnd"] = _pyctp.CSgitFtdcQryHisOrderField_InsertTimeEnd_set
    __swig_getmethods__["InsertTimeEnd"] = _pyctp.CSgitFtdcQryHisOrderField_InsertTimeEnd_get
    if _newclass:
        InsertTimeEnd = _swig_property(_pyctp.CSgitFtdcQryHisOrderField_InsertTimeEnd_get, _pyctp.CSgitFtdcQryHisOrderField_InsertTimeEnd_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcQryHisOrderField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcQryHisOrderField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcQryHisOrderField_TradingDay_get, _pyctp.CSgitFtdcQryHisOrderField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CSgitFtdcQryHisOrderField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CSgitFtdcQryHisOrderField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CSgitFtdcQryHisOrderField_SettlementID_get, _pyctp.CSgitFtdcQryHisOrderField_SettlementID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryHisOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryHisOrderField
    __del__ = lambda self: None
CSgitFtdcQryHisOrderField_swigregister = _pyctp.CSgitFtdcQryHisOrderField_swigregister
CSgitFtdcQryHisOrderField_swigregister(CSgitFtdcQryHisOrderField)

class CSgitFtdcMarketDataField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcMarketDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcMarketDataField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcMarketDataField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcMarketDataField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcMarketDataField_TradingDay_get, _pyctp.CSgitFtdcMarketDataField_TradingDay_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcMarketDataField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcMarketDataField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcMarketDataField_InstrumentID_get, _pyctp.CSgitFtdcMarketDataField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcMarketDataField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcMarketDataField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcMarketDataField_ExchangeID_get, _pyctp.CSgitFtdcMarketDataField_ExchangeID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcMarketDataField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcMarketDataField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CSgitFtdcMarketDataField_ExchangeInstID_get, _pyctp.CSgitFtdcMarketDataField_ExchangeInstID_set)
    __swig_setmethods__["LastPrice"] = _pyctp.CSgitFtdcMarketDataField_LastPrice_set
    __swig_getmethods__["LastPrice"] = _pyctp.CSgitFtdcMarketDataField_LastPrice_get
    if _newclass:
        LastPrice = _swig_property(_pyctp.CSgitFtdcMarketDataField_LastPrice_get, _pyctp.CSgitFtdcMarketDataField_LastPrice_set)
    __swig_setmethods__["PreSettlementPrice"] = _pyctp.CSgitFtdcMarketDataField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _pyctp.CSgitFtdcMarketDataField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_pyctp.CSgitFtdcMarketDataField_PreSettlementPrice_get, _pyctp.CSgitFtdcMarketDataField_PreSettlementPrice_set)
    __swig_setmethods__["PreClosePrice"] = _pyctp.CSgitFtdcMarketDataField_PreClosePrice_set
    __swig_getmethods__["PreClosePrice"] = _pyctp.CSgitFtdcMarketDataField_PreClosePrice_get
    if _newclass:
        PreClosePrice = _swig_property(_pyctp.CSgitFtdcMarketDataField_PreClosePrice_get, _pyctp.CSgitFtdcMarketDataField_PreClosePrice_set)
    __swig_setmethods__["PreOpenInterest"] = _pyctp.CSgitFtdcMarketDataField_PreOpenInterest_set
    __swig_getmethods__["PreOpenInterest"] = _pyctp.CSgitFtdcMarketDataField_PreOpenInterest_get
    if _newclass:
        PreOpenInterest = _swig_property(_pyctp.CSgitFtdcMarketDataField_PreOpenInterest_get, _pyctp.CSgitFtdcMarketDataField_PreOpenInterest_set)
    __swig_setmethods__["OpenPrice"] = _pyctp.CSgitFtdcMarketDataField_OpenPrice_set
    __swig_getmethods__["OpenPrice"] = _pyctp.CSgitFtdcMarketDataField_OpenPrice_get
    if _newclass:
        OpenPrice = _swig_property(_pyctp.CSgitFtdcMarketDataField_OpenPrice_get, _pyctp.CSgitFtdcMarketDataField_OpenPrice_set)
    __swig_setmethods__["HighestPrice"] = _pyctp.CSgitFtdcMarketDataField_HighestPrice_set
    __swig_getmethods__["HighestPrice"] = _pyctp.CSgitFtdcMarketDataField_HighestPrice_get
    if _newclass:
        HighestPrice = _swig_property(_pyctp.CSgitFtdcMarketDataField_HighestPrice_get, _pyctp.CSgitFtdcMarketDataField_HighestPrice_set)
    __swig_setmethods__["LowestPrice"] = _pyctp.CSgitFtdcMarketDataField_LowestPrice_set
    __swig_getmethods__["LowestPrice"] = _pyctp.CSgitFtdcMarketDataField_LowestPrice_get
    if _newclass:
        LowestPrice = _swig_property(_pyctp.CSgitFtdcMarketDataField_LowestPrice_get, _pyctp.CSgitFtdcMarketDataField_LowestPrice_set)
    __swig_setmethods__["Volume"] = _pyctp.CSgitFtdcMarketDataField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CSgitFtdcMarketDataField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CSgitFtdcMarketDataField_Volume_get, _pyctp.CSgitFtdcMarketDataField_Volume_set)
    __swig_setmethods__["Turnover"] = _pyctp.CSgitFtdcMarketDataField_Turnover_set
    __swig_getmethods__["Turnover"] = _pyctp.CSgitFtdcMarketDataField_Turnover_get
    if _newclass:
        Turnover = _swig_property(_pyctp.CSgitFtdcMarketDataField_Turnover_get, _pyctp.CSgitFtdcMarketDataField_Turnover_set)
    __swig_setmethods__["OpenInterest"] = _pyctp.CSgitFtdcMarketDataField_OpenInterest_set
    __swig_getmethods__["OpenInterest"] = _pyctp.CSgitFtdcMarketDataField_OpenInterest_get
    if _newclass:
        OpenInterest = _swig_property(_pyctp.CSgitFtdcMarketDataField_OpenInterest_get, _pyctp.CSgitFtdcMarketDataField_OpenInterest_set)
    __swig_setmethods__["ClosePrice"] = _pyctp.CSgitFtdcMarketDataField_ClosePrice_set
    __swig_getmethods__["ClosePrice"] = _pyctp.CSgitFtdcMarketDataField_ClosePrice_get
    if _newclass:
        ClosePrice = _swig_property(_pyctp.CSgitFtdcMarketDataField_ClosePrice_get, _pyctp.CSgitFtdcMarketDataField_ClosePrice_set)
    __swig_setmethods__["SettlementPrice"] = _pyctp.CSgitFtdcMarketDataField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _pyctp.CSgitFtdcMarketDataField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_pyctp.CSgitFtdcMarketDataField_SettlementPrice_get, _pyctp.CSgitFtdcMarketDataField_SettlementPrice_set)
    __swig_setmethods__["UpperLimitPrice"] = _pyctp.CSgitFtdcMarketDataField_UpperLimitPrice_set
    __swig_getmethods__["UpperLimitPrice"] = _pyctp.CSgitFtdcMarketDataField_UpperLimitPrice_get
    if _newclass:
        UpperLimitPrice = _swig_property(_pyctp.CSgitFtdcMarketDataField_UpperLimitPrice_get, _pyctp.CSgitFtdcMarketDataField_UpperLimitPrice_set)
    __swig_setmethods__["LowerLimitPrice"] = _pyctp.CSgitFtdcMarketDataField_LowerLimitPrice_set
    __swig_getmethods__["LowerLimitPrice"] = _pyctp.CSgitFtdcMarketDataField_LowerLimitPrice_get
    if _newclass:
        LowerLimitPrice = _swig_property(_pyctp.CSgitFtdcMarketDataField_LowerLimitPrice_get, _pyctp.CSgitFtdcMarketDataField_LowerLimitPrice_set)
    __swig_setmethods__["PreDelta"] = _pyctp.CSgitFtdcMarketDataField_PreDelta_set
    __swig_getmethods__["PreDelta"] = _pyctp.CSgitFtdcMarketDataField_PreDelta_get
    if _newclass:
        PreDelta = _swig_property(_pyctp.CSgitFtdcMarketDataField_PreDelta_get, _pyctp.CSgitFtdcMarketDataField_PreDelta_set)
    __swig_setmethods__["CurrDelta"] = _pyctp.CSgitFtdcMarketDataField_CurrDelta_set
    __swig_getmethods__["CurrDelta"] = _pyctp.CSgitFtdcMarketDataField_CurrDelta_get
    if _newclass:
        CurrDelta = _swig_property(_pyctp.CSgitFtdcMarketDataField_CurrDelta_get, _pyctp.CSgitFtdcMarketDataField_CurrDelta_set)
    __swig_setmethods__["UpdateTime"] = _pyctp.CSgitFtdcMarketDataField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _pyctp.CSgitFtdcMarketDataField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_pyctp.CSgitFtdcMarketDataField_UpdateTime_get, _pyctp.CSgitFtdcMarketDataField_UpdateTime_set)
    __swig_setmethods__["UpdateMillisec"] = _pyctp.CSgitFtdcMarketDataField_UpdateMillisec_set
    __swig_getmethods__["UpdateMillisec"] = _pyctp.CSgitFtdcMarketDataField_UpdateMillisec_get
    if _newclass:
        UpdateMillisec = _swig_property(_pyctp.CSgitFtdcMarketDataField_UpdateMillisec_get, _pyctp.CSgitFtdcMarketDataField_UpdateMillisec_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcMarketDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcMarketDataField
    __del__ = lambda self: None
CSgitFtdcMarketDataField_swigregister = _pyctp.CSgitFtdcMarketDataField_swigregister
CSgitFtdcMarketDataField_swigregister(CSgitFtdcMarketDataField)

class CSgitFtdcMarketDataBaseField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcMarketDataBaseField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcMarketDataBaseField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcMarketDataBaseField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcMarketDataBaseField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcMarketDataBaseField_TradingDay_get, _pyctp.CSgitFtdcMarketDataBaseField_TradingDay_set)
    __swig_setmethods__["PreSettlementPrice"] = _pyctp.CSgitFtdcMarketDataBaseField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _pyctp.CSgitFtdcMarketDataBaseField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_pyctp.CSgitFtdcMarketDataBaseField_PreSettlementPrice_get, _pyctp.CSgitFtdcMarketDataBaseField_PreSettlementPrice_set)
    __swig_setmethods__["PreClosePrice"] = _pyctp.CSgitFtdcMarketDataBaseField_PreClosePrice_set
    __swig_getmethods__["PreClosePrice"] = _pyctp.CSgitFtdcMarketDataBaseField_PreClosePrice_get
    if _newclass:
        PreClosePrice = _swig_property(_pyctp.CSgitFtdcMarketDataBaseField_PreClosePrice_get, _pyctp.CSgitFtdcMarketDataBaseField_PreClosePrice_set)
    __swig_setmethods__["PreOpenInterest"] = _pyctp.CSgitFtdcMarketDataBaseField_PreOpenInterest_set
    __swig_getmethods__["PreOpenInterest"] = _pyctp.CSgitFtdcMarketDataBaseField_PreOpenInterest_get
    if _newclass:
        PreOpenInterest = _swig_property(_pyctp.CSgitFtdcMarketDataBaseField_PreOpenInterest_get, _pyctp.CSgitFtdcMarketDataBaseField_PreOpenInterest_set)
    __swig_setmethods__["PreDelta"] = _pyctp.CSgitFtdcMarketDataBaseField_PreDelta_set
    __swig_getmethods__["PreDelta"] = _pyctp.CSgitFtdcMarketDataBaseField_PreDelta_get
    if _newclass:
        PreDelta = _swig_property(_pyctp.CSgitFtdcMarketDataBaseField_PreDelta_get, _pyctp.CSgitFtdcMarketDataBaseField_PreDelta_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcMarketDataBaseField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcMarketDataBaseField
    __del__ = lambda self: None
CSgitFtdcMarketDataBaseField_swigregister = _pyctp.CSgitFtdcMarketDataBaseField_swigregister
CSgitFtdcMarketDataBaseField_swigregister(CSgitFtdcMarketDataBaseField)

class CSgitFtdcMarketDataStaticField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcMarketDataStaticField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcMarketDataStaticField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["OpenPrice"] = _pyctp.CSgitFtdcMarketDataStaticField_OpenPrice_set
    __swig_getmethods__["OpenPrice"] = _pyctp.CSgitFtdcMarketDataStaticField_OpenPrice_get
    if _newclass:
        OpenPrice = _swig_property(_pyctp.CSgitFtdcMarketDataStaticField_OpenPrice_get, _pyctp.CSgitFtdcMarketDataStaticField_OpenPrice_set)
    __swig_setmethods__["HighestPrice"] = _pyctp.CSgitFtdcMarketDataStaticField_HighestPrice_set
    __swig_getmethods__["HighestPrice"] = _pyctp.CSgitFtdcMarketDataStaticField_HighestPrice_get
    if _newclass:
        HighestPrice = _swig_property(_pyctp.CSgitFtdcMarketDataStaticField_HighestPrice_get, _pyctp.CSgitFtdcMarketDataStaticField_HighestPrice_set)
    __swig_setmethods__["LowestPrice"] = _pyctp.CSgitFtdcMarketDataStaticField_LowestPrice_set
    __swig_getmethods__["LowestPrice"] = _pyctp.CSgitFtdcMarketDataStaticField_LowestPrice_get
    if _newclass:
        LowestPrice = _swig_property(_pyctp.CSgitFtdcMarketDataStaticField_LowestPrice_get, _pyctp.CSgitFtdcMarketDataStaticField_LowestPrice_set)
    __swig_setmethods__["ClosePrice"] = _pyctp.CSgitFtdcMarketDataStaticField_ClosePrice_set
    __swig_getmethods__["ClosePrice"] = _pyctp.CSgitFtdcMarketDataStaticField_ClosePrice_get
    if _newclass:
        ClosePrice = _swig_property(_pyctp.CSgitFtdcMarketDataStaticField_ClosePrice_get, _pyctp.CSgitFtdcMarketDataStaticField_ClosePrice_set)
    __swig_setmethods__["UpperLimitPrice"] = _pyctp.CSgitFtdcMarketDataStaticField_UpperLimitPrice_set
    __swig_getmethods__["UpperLimitPrice"] = _pyctp.CSgitFtdcMarketDataStaticField_UpperLimitPrice_get
    if _newclass:
        UpperLimitPrice = _swig_property(_pyctp.CSgitFtdcMarketDataStaticField_UpperLimitPrice_get, _pyctp.CSgitFtdcMarketDataStaticField_UpperLimitPrice_set)
    __swig_setmethods__["LowerLimitPrice"] = _pyctp.CSgitFtdcMarketDataStaticField_LowerLimitPrice_set
    __swig_getmethods__["LowerLimitPrice"] = _pyctp.CSgitFtdcMarketDataStaticField_LowerLimitPrice_get
    if _newclass:
        LowerLimitPrice = _swig_property(_pyctp.CSgitFtdcMarketDataStaticField_LowerLimitPrice_get, _pyctp.CSgitFtdcMarketDataStaticField_LowerLimitPrice_set)
    __swig_setmethods__["SettlementPrice"] = _pyctp.CSgitFtdcMarketDataStaticField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _pyctp.CSgitFtdcMarketDataStaticField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_pyctp.CSgitFtdcMarketDataStaticField_SettlementPrice_get, _pyctp.CSgitFtdcMarketDataStaticField_SettlementPrice_set)
    __swig_setmethods__["CurrDelta"] = _pyctp.CSgitFtdcMarketDataStaticField_CurrDelta_set
    __swig_getmethods__["CurrDelta"] = _pyctp.CSgitFtdcMarketDataStaticField_CurrDelta_get
    if _newclass:
        CurrDelta = _swig_property(_pyctp.CSgitFtdcMarketDataStaticField_CurrDelta_get, _pyctp.CSgitFtdcMarketDataStaticField_CurrDelta_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcMarketDataStaticField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcMarketDataStaticField
    __del__ = lambda self: None
CSgitFtdcMarketDataStaticField_swigregister = _pyctp.CSgitFtdcMarketDataStaticField_swigregister
CSgitFtdcMarketDataStaticField_swigregister(CSgitFtdcMarketDataStaticField)

class CSgitFtdcMarketDataLastMatchField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcMarketDataLastMatchField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcMarketDataLastMatchField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["LastPrice"] = _pyctp.CSgitFtdcMarketDataLastMatchField_LastPrice_set
    __swig_getmethods__["LastPrice"] = _pyctp.CSgitFtdcMarketDataLastMatchField_LastPrice_get
    if _newclass:
        LastPrice = _swig_property(_pyctp.CSgitFtdcMarketDataLastMatchField_LastPrice_get, _pyctp.CSgitFtdcMarketDataLastMatchField_LastPrice_set)
    __swig_setmethods__["Volume"] = _pyctp.CSgitFtdcMarketDataLastMatchField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CSgitFtdcMarketDataLastMatchField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CSgitFtdcMarketDataLastMatchField_Volume_get, _pyctp.CSgitFtdcMarketDataLastMatchField_Volume_set)
    __swig_setmethods__["Turnover"] = _pyctp.CSgitFtdcMarketDataLastMatchField_Turnover_set
    __swig_getmethods__["Turnover"] = _pyctp.CSgitFtdcMarketDataLastMatchField_Turnover_get
    if _newclass:
        Turnover = _swig_property(_pyctp.CSgitFtdcMarketDataLastMatchField_Turnover_get, _pyctp.CSgitFtdcMarketDataLastMatchField_Turnover_set)
    __swig_setmethods__["OpenInterest"] = _pyctp.CSgitFtdcMarketDataLastMatchField_OpenInterest_set
    __swig_getmethods__["OpenInterest"] = _pyctp.CSgitFtdcMarketDataLastMatchField_OpenInterest_get
    if _newclass:
        OpenInterest = _swig_property(_pyctp.CSgitFtdcMarketDataLastMatchField_OpenInterest_get, _pyctp.CSgitFtdcMarketDataLastMatchField_OpenInterest_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcMarketDataLastMatchField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcMarketDataLastMatchField
    __del__ = lambda self: None
CSgitFtdcMarketDataLastMatchField_swigregister = _pyctp.CSgitFtdcMarketDataLastMatchField_swigregister
CSgitFtdcMarketDataLastMatchField_swigregister(CSgitFtdcMarketDataLastMatchField)

class CSgitFtdcMarketDataBestPriceField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcMarketDataBestPriceField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcMarketDataBestPriceField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BidPrice1"] = _pyctp.CSgitFtdcMarketDataBestPriceField_BidPrice1_set
    __swig_getmethods__["BidPrice1"] = _pyctp.CSgitFtdcMarketDataBestPriceField_BidPrice1_get
    if _newclass:
        BidPrice1 = _swig_property(_pyctp.CSgitFtdcMarketDataBestPriceField_BidPrice1_get, _pyctp.CSgitFtdcMarketDataBestPriceField_BidPrice1_set)
    __swig_setmethods__["BidVolume1"] = _pyctp.CSgitFtdcMarketDataBestPriceField_BidVolume1_set
    __swig_getmethods__["BidVolume1"] = _pyctp.CSgitFtdcMarketDataBestPriceField_BidVolume1_get
    if _newclass:
        BidVolume1 = _swig_property(_pyctp.CSgitFtdcMarketDataBestPriceField_BidVolume1_get, _pyctp.CSgitFtdcMarketDataBestPriceField_BidVolume1_set)
    __swig_setmethods__["AskPrice1"] = _pyctp.CSgitFtdcMarketDataBestPriceField_AskPrice1_set
    __swig_getmethods__["AskPrice1"] = _pyctp.CSgitFtdcMarketDataBestPriceField_AskPrice1_get
    if _newclass:
        AskPrice1 = _swig_property(_pyctp.CSgitFtdcMarketDataBestPriceField_AskPrice1_get, _pyctp.CSgitFtdcMarketDataBestPriceField_AskPrice1_set)
    __swig_setmethods__["AskVolume1"] = _pyctp.CSgitFtdcMarketDataBestPriceField_AskVolume1_set
    __swig_getmethods__["AskVolume1"] = _pyctp.CSgitFtdcMarketDataBestPriceField_AskVolume1_get
    if _newclass:
        AskVolume1 = _swig_property(_pyctp.CSgitFtdcMarketDataBestPriceField_AskVolume1_get, _pyctp.CSgitFtdcMarketDataBestPriceField_AskVolume1_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcMarketDataBestPriceField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcMarketDataBestPriceField
    __del__ = lambda self: None
CSgitFtdcMarketDataBestPriceField_swigregister = _pyctp.CSgitFtdcMarketDataBestPriceField_swigregister
CSgitFtdcMarketDataBestPriceField_swigregister(CSgitFtdcMarketDataBestPriceField)

class CSgitFtdcMarketDataBid23Field(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcMarketDataBid23Field, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcMarketDataBid23Field, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BidPrice2"] = _pyctp.CSgitFtdcMarketDataBid23Field_BidPrice2_set
    __swig_getmethods__["BidPrice2"] = _pyctp.CSgitFtdcMarketDataBid23Field_BidPrice2_get
    if _newclass:
        BidPrice2 = _swig_property(_pyctp.CSgitFtdcMarketDataBid23Field_BidPrice2_get, _pyctp.CSgitFtdcMarketDataBid23Field_BidPrice2_set)
    __swig_setmethods__["BidVolume2"] = _pyctp.CSgitFtdcMarketDataBid23Field_BidVolume2_set
    __swig_getmethods__["BidVolume2"] = _pyctp.CSgitFtdcMarketDataBid23Field_BidVolume2_get
    if _newclass:
        BidVolume2 = _swig_property(_pyctp.CSgitFtdcMarketDataBid23Field_BidVolume2_get, _pyctp.CSgitFtdcMarketDataBid23Field_BidVolume2_set)
    __swig_setmethods__["BidPrice3"] = _pyctp.CSgitFtdcMarketDataBid23Field_BidPrice3_set
    __swig_getmethods__["BidPrice3"] = _pyctp.CSgitFtdcMarketDataBid23Field_BidPrice3_get
    if _newclass:
        BidPrice3 = _swig_property(_pyctp.CSgitFtdcMarketDataBid23Field_BidPrice3_get, _pyctp.CSgitFtdcMarketDataBid23Field_BidPrice3_set)
    __swig_setmethods__["BidVolume3"] = _pyctp.CSgitFtdcMarketDataBid23Field_BidVolume3_set
    __swig_getmethods__["BidVolume3"] = _pyctp.CSgitFtdcMarketDataBid23Field_BidVolume3_get
    if _newclass:
        BidVolume3 = _swig_property(_pyctp.CSgitFtdcMarketDataBid23Field_BidVolume3_get, _pyctp.CSgitFtdcMarketDataBid23Field_BidVolume3_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcMarketDataBid23Field()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcMarketDataBid23Field
    __del__ = lambda self: None
CSgitFtdcMarketDataBid23Field_swigregister = _pyctp.CSgitFtdcMarketDataBid23Field_swigregister
CSgitFtdcMarketDataBid23Field_swigregister(CSgitFtdcMarketDataBid23Field)

class CSgitFtdcMarketDataAsk23Field(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcMarketDataAsk23Field, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcMarketDataAsk23Field, name)
    __repr__ = _swig_repr
    __swig_setmethods__["AskPrice2"] = _pyctp.CSgitFtdcMarketDataAsk23Field_AskPrice2_set
    __swig_getmethods__["AskPrice2"] = _pyctp.CSgitFtdcMarketDataAsk23Field_AskPrice2_get
    if _newclass:
        AskPrice2 = _swig_property(_pyctp.CSgitFtdcMarketDataAsk23Field_AskPrice2_get, _pyctp.CSgitFtdcMarketDataAsk23Field_AskPrice2_set)
    __swig_setmethods__["AskVolume2"] = _pyctp.CSgitFtdcMarketDataAsk23Field_AskVolume2_set
    __swig_getmethods__["AskVolume2"] = _pyctp.CSgitFtdcMarketDataAsk23Field_AskVolume2_get
    if _newclass:
        AskVolume2 = _swig_property(_pyctp.CSgitFtdcMarketDataAsk23Field_AskVolume2_get, _pyctp.CSgitFtdcMarketDataAsk23Field_AskVolume2_set)
    __swig_setmethods__["AskPrice3"] = _pyctp.CSgitFtdcMarketDataAsk23Field_AskPrice3_set
    __swig_getmethods__["AskPrice3"] = _pyctp.CSgitFtdcMarketDataAsk23Field_AskPrice3_get
    if _newclass:
        AskPrice3 = _swig_property(_pyctp.CSgitFtdcMarketDataAsk23Field_AskPrice3_get, _pyctp.CSgitFtdcMarketDataAsk23Field_AskPrice3_set)
    __swig_setmethods__["AskVolume3"] = _pyctp.CSgitFtdcMarketDataAsk23Field_AskVolume3_set
    __swig_getmethods__["AskVolume3"] = _pyctp.CSgitFtdcMarketDataAsk23Field_AskVolume3_get
    if _newclass:
        AskVolume3 = _swig_property(_pyctp.CSgitFtdcMarketDataAsk23Field_AskVolume3_get, _pyctp.CSgitFtdcMarketDataAsk23Field_AskVolume3_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcMarketDataAsk23Field()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcMarketDataAsk23Field
    __del__ = lambda self: None
CSgitFtdcMarketDataAsk23Field_swigregister = _pyctp.CSgitFtdcMarketDataAsk23Field_swigregister
CSgitFtdcMarketDataAsk23Field_swigregister(CSgitFtdcMarketDataAsk23Field)

class CSgitFtdcMarketDataBid45Field(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcMarketDataBid45Field, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcMarketDataBid45Field, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BidPrice4"] = _pyctp.CSgitFtdcMarketDataBid45Field_BidPrice4_set
    __swig_getmethods__["BidPrice4"] = _pyctp.CSgitFtdcMarketDataBid45Field_BidPrice4_get
    if _newclass:
        BidPrice4 = _swig_property(_pyctp.CSgitFtdcMarketDataBid45Field_BidPrice4_get, _pyctp.CSgitFtdcMarketDataBid45Field_BidPrice4_set)
    __swig_setmethods__["BidVolume4"] = _pyctp.CSgitFtdcMarketDataBid45Field_BidVolume4_set
    __swig_getmethods__["BidVolume4"] = _pyctp.CSgitFtdcMarketDataBid45Field_BidVolume4_get
    if _newclass:
        BidVolume4 = _swig_property(_pyctp.CSgitFtdcMarketDataBid45Field_BidVolume4_get, _pyctp.CSgitFtdcMarketDataBid45Field_BidVolume4_set)
    __swig_setmethods__["BidPrice5"] = _pyctp.CSgitFtdcMarketDataBid45Field_BidPrice5_set
    __swig_getmethods__["BidPrice5"] = _pyctp.CSgitFtdcMarketDataBid45Field_BidPrice5_get
    if _newclass:
        BidPrice5 = _swig_property(_pyctp.CSgitFtdcMarketDataBid45Field_BidPrice5_get, _pyctp.CSgitFtdcMarketDataBid45Field_BidPrice5_set)
    __swig_setmethods__["BidVolume5"] = _pyctp.CSgitFtdcMarketDataBid45Field_BidVolume5_set
    __swig_getmethods__["BidVolume5"] = _pyctp.CSgitFtdcMarketDataBid45Field_BidVolume5_get
    if _newclass:
        BidVolume5 = _swig_property(_pyctp.CSgitFtdcMarketDataBid45Field_BidVolume5_get, _pyctp.CSgitFtdcMarketDataBid45Field_BidVolume5_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcMarketDataBid45Field()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcMarketDataBid45Field
    __del__ = lambda self: None
CSgitFtdcMarketDataBid45Field_swigregister = _pyctp.CSgitFtdcMarketDataBid45Field_swigregister
CSgitFtdcMarketDataBid45Field_swigregister(CSgitFtdcMarketDataBid45Field)

class CSgitFtdcMarketDataAsk45Field(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcMarketDataAsk45Field, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcMarketDataAsk45Field, name)
    __repr__ = _swig_repr
    __swig_setmethods__["AskPrice4"] = _pyctp.CSgitFtdcMarketDataAsk45Field_AskPrice4_set
    __swig_getmethods__["AskPrice4"] = _pyctp.CSgitFtdcMarketDataAsk45Field_AskPrice4_get
    if _newclass:
        AskPrice4 = _swig_property(_pyctp.CSgitFtdcMarketDataAsk45Field_AskPrice4_get, _pyctp.CSgitFtdcMarketDataAsk45Field_AskPrice4_set)
    __swig_setmethods__["AskVolume4"] = _pyctp.CSgitFtdcMarketDataAsk45Field_AskVolume4_set
    __swig_getmethods__["AskVolume4"] = _pyctp.CSgitFtdcMarketDataAsk45Field_AskVolume4_get
    if _newclass:
        AskVolume4 = _swig_property(_pyctp.CSgitFtdcMarketDataAsk45Field_AskVolume4_get, _pyctp.CSgitFtdcMarketDataAsk45Field_AskVolume4_set)
    __swig_setmethods__["AskPrice5"] = _pyctp.CSgitFtdcMarketDataAsk45Field_AskPrice5_set
    __swig_getmethods__["AskPrice5"] = _pyctp.CSgitFtdcMarketDataAsk45Field_AskPrice5_get
    if _newclass:
        AskPrice5 = _swig_property(_pyctp.CSgitFtdcMarketDataAsk45Field_AskPrice5_get, _pyctp.CSgitFtdcMarketDataAsk45Field_AskPrice5_set)
    __swig_setmethods__["AskVolume5"] = _pyctp.CSgitFtdcMarketDataAsk45Field_AskVolume5_set
    __swig_getmethods__["AskVolume5"] = _pyctp.CSgitFtdcMarketDataAsk45Field_AskVolume5_get
    if _newclass:
        AskVolume5 = _swig_property(_pyctp.CSgitFtdcMarketDataAsk45Field_AskVolume5_get, _pyctp.CSgitFtdcMarketDataAsk45Field_AskVolume5_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcMarketDataAsk45Field()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcMarketDataAsk45Field
    __del__ = lambda self: None
CSgitFtdcMarketDataAsk45Field_swigregister = _pyctp.CSgitFtdcMarketDataAsk45Field_swigregister
CSgitFtdcMarketDataAsk45Field_swigregister(CSgitFtdcMarketDataAsk45Field)

class CSgitFtdcMarketDataUpdateTimeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcMarketDataUpdateTimeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcMarketDataUpdateTimeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcMarketDataUpdateTimeField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcMarketDataUpdateTimeField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcMarketDataUpdateTimeField_InstrumentID_get, _pyctp.CSgitFtdcMarketDataUpdateTimeField_InstrumentID_set)
    __swig_setmethods__["UpdateTime"] = _pyctp.CSgitFtdcMarketDataUpdateTimeField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _pyctp.CSgitFtdcMarketDataUpdateTimeField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_pyctp.CSgitFtdcMarketDataUpdateTimeField_UpdateTime_get, _pyctp.CSgitFtdcMarketDataUpdateTimeField_UpdateTime_set)
    __swig_setmethods__["UpdateMillisec"] = _pyctp.CSgitFtdcMarketDataUpdateTimeField_UpdateMillisec_set
    __swig_getmethods__["UpdateMillisec"] = _pyctp.CSgitFtdcMarketDataUpdateTimeField_UpdateMillisec_get
    if _newclass:
        UpdateMillisec = _swig_property(_pyctp.CSgitFtdcMarketDataUpdateTimeField_UpdateMillisec_get, _pyctp.CSgitFtdcMarketDataUpdateTimeField_UpdateMillisec_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcMarketDataUpdateTimeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcMarketDataUpdateTimeField
    __del__ = lambda self: None
CSgitFtdcMarketDataUpdateTimeField_swigregister = _pyctp.CSgitFtdcMarketDataUpdateTimeField_swigregister
CSgitFtdcMarketDataUpdateTimeField_swigregister(CSgitFtdcMarketDataUpdateTimeField)

class CSgitFtdcMarketDataExchangeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcMarketDataExchangeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcMarketDataExchangeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcMarketDataExchangeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcMarketDataExchangeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcMarketDataExchangeField_ExchangeID_get, _pyctp.CSgitFtdcMarketDataExchangeField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcMarketDataExchangeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcMarketDataExchangeField
    __del__ = lambda self: None
CSgitFtdcMarketDataExchangeField_swigregister = _pyctp.CSgitFtdcMarketDataExchangeField_swigregister
CSgitFtdcMarketDataExchangeField_swigregister(CSgitFtdcMarketDataExchangeField)

class CSgitFtdcSpecificInstrumentField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcSpecificInstrumentField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcSpecificInstrumentField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcSpecificInstrumentField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcSpecificInstrumentField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcSpecificInstrumentField_InstrumentID_get, _pyctp.CSgitFtdcSpecificInstrumentField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcSpecificInstrumentField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcSpecificInstrumentField
    __del__ = lambda self: None
CSgitFtdcSpecificInstrumentField_swigregister = _pyctp.CSgitFtdcSpecificInstrumentField_swigregister
CSgitFtdcSpecificInstrumentField_swigregister(CSgitFtdcSpecificInstrumentField)

class CSgitFtdcInstrumentStatusField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcInstrumentStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcInstrumentStatusField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcInstrumentStatusField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcInstrumentStatusField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcInstrumentStatusField_ExchangeID_get, _pyctp.CSgitFtdcInstrumentStatusField_ExchangeID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcInstrumentStatusField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcInstrumentStatusField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CSgitFtdcInstrumentStatusField_ExchangeInstID_get, _pyctp.CSgitFtdcInstrumentStatusField_ExchangeInstID_set)
    __swig_setmethods__["SettlementGroupID"] = _pyctp.CSgitFtdcInstrumentStatusField_SettlementGroupID_set
    __swig_getmethods__["SettlementGroupID"] = _pyctp.CSgitFtdcInstrumentStatusField_SettlementGroupID_get
    if _newclass:
        SettlementGroupID = _swig_property(_pyctp.CSgitFtdcInstrumentStatusField_SettlementGroupID_get, _pyctp.CSgitFtdcInstrumentStatusField_SettlementGroupID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcInstrumentStatusField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcInstrumentStatusField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcInstrumentStatusField_InstrumentID_get, _pyctp.CSgitFtdcInstrumentStatusField_InstrumentID_set)
    __swig_setmethods__["InstrumentStatus"] = _pyctp.CSgitFtdcInstrumentStatusField_InstrumentStatus_set
    __swig_getmethods__["InstrumentStatus"] = _pyctp.CSgitFtdcInstrumentStatusField_InstrumentStatus_get
    if _newclass:
        InstrumentStatus = _swig_property(_pyctp.CSgitFtdcInstrumentStatusField_InstrumentStatus_get, _pyctp.CSgitFtdcInstrumentStatusField_InstrumentStatus_set)
    __swig_setmethods__["TradingSegmentSN"] = _pyctp.CSgitFtdcInstrumentStatusField_TradingSegmentSN_set
    __swig_getmethods__["TradingSegmentSN"] = _pyctp.CSgitFtdcInstrumentStatusField_TradingSegmentSN_get
    if _newclass:
        TradingSegmentSN = _swig_property(_pyctp.CSgitFtdcInstrumentStatusField_TradingSegmentSN_get, _pyctp.CSgitFtdcInstrumentStatusField_TradingSegmentSN_set)
    __swig_setmethods__["EnterTime"] = _pyctp.CSgitFtdcInstrumentStatusField_EnterTime_set
    __swig_getmethods__["EnterTime"] = _pyctp.CSgitFtdcInstrumentStatusField_EnterTime_get
    if _newclass:
        EnterTime = _swig_property(_pyctp.CSgitFtdcInstrumentStatusField_EnterTime_get, _pyctp.CSgitFtdcInstrumentStatusField_EnterTime_set)
    __swig_setmethods__["EnterReason"] = _pyctp.CSgitFtdcInstrumentStatusField_EnterReason_set
    __swig_getmethods__["EnterReason"] = _pyctp.CSgitFtdcInstrumentStatusField_EnterReason_get
    if _newclass:
        EnterReason = _swig_property(_pyctp.CSgitFtdcInstrumentStatusField_EnterReason_get, _pyctp.CSgitFtdcInstrumentStatusField_EnterReason_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcInstrumentStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcInstrumentStatusField
    __del__ = lambda self: None
CSgitFtdcInstrumentStatusField_swigregister = _pyctp.CSgitFtdcInstrumentStatusField_swigregister
CSgitFtdcInstrumentStatusField_swigregister(CSgitFtdcInstrumentStatusField)

class CSgitFtdcQryInstrumentStatusField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryInstrumentStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryInstrumentStatusField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryInstrumentStatusField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryInstrumentStatusField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryInstrumentStatusField_ExchangeID_get, _pyctp.CSgitFtdcQryInstrumentStatusField_ExchangeID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcQryInstrumentStatusField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcQryInstrumentStatusField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CSgitFtdcQryInstrumentStatusField_ExchangeInstID_get, _pyctp.CSgitFtdcQryInstrumentStatusField_ExchangeInstID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryInstrumentStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryInstrumentStatusField
    __del__ = lambda self: None
CSgitFtdcQryInstrumentStatusField_swigregister = _pyctp.CSgitFtdcQryInstrumentStatusField_swigregister
CSgitFtdcQryInstrumentStatusField_swigregister(CSgitFtdcQryInstrumentStatusField)

class CSgitFtdcInvestorAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcInvestorAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcInvestorAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcInvestorAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcInvestorAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcInvestorAccountField_BrokerID_get, _pyctp.CSgitFtdcInvestorAccountField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcInvestorAccountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcInvestorAccountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcInvestorAccountField_InvestorID_get, _pyctp.CSgitFtdcInvestorAccountField_InvestorID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcInvestorAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcInvestorAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcInvestorAccountField_AccountID_get, _pyctp.CSgitFtdcInvestorAccountField_AccountID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcInvestorAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcInvestorAccountField
    __del__ = lambda self: None
CSgitFtdcInvestorAccountField_swigregister = _pyctp.CSgitFtdcInvestorAccountField_swigregister
CSgitFtdcInvestorAccountField_swigregister(CSgitFtdcInvestorAccountField)

class CSgitFtdcPositionProfitAlgorithmField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcPositionProfitAlgorithmField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcPositionProfitAlgorithmField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcPositionProfitAlgorithmField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcPositionProfitAlgorithmField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcPositionProfitAlgorithmField_BrokerID_get, _pyctp.CSgitFtdcPositionProfitAlgorithmField_BrokerID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcPositionProfitAlgorithmField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcPositionProfitAlgorithmField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcPositionProfitAlgorithmField_AccountID_get, _pyctp.CSgitFtdcPositionProfitAlgorithmField_AccountID_set)
    __swig_setmethods__["Algorithm"] = _pyctp.CSgitFtdcPositionProfitAlgorithmField_Algorithm_set
    __swig_getmethods__["Algorithm"] = _pyctp.CSgitFtdcPositionProfitAlgorithmField_Algorithm_get
    if _newclass:
        Algorithm = _swig_property(_pyctp.CSgitFtdcPositionProfitAlgorithmField_Algorithm_get, _pyctp.CSgitFtdcPositionProfitAlgorithmField_Algorithm_set)
    __swig_setmethods__["Memo"] = _pyctp.CSgitFtdcPositionProfitAlgorithmField_Memo_set
    __swig_getmethods__["Memo"] = _pyctp.CSgitFtdcPositionProfitAlgorithmField_Memo_get
    if _newclass:
        Memo = _swig_property(_pyctp.CSgitFtdcPositionProfitAlgorithmField_Memo_get, _pyctp.CSgitFtdcPositionProfitAlgorithmField_Memo_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcPositionProfitAlgorithmField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcPositionProfitAlgorithmField
    __del__ = lambda self: None
CSgitFtdcPositionProfitAlgorithmField_swigregister = _pyctp.CSgitFtdcPositionProfitAlgorithmField_swigregister
CSgitFtdcPositionProfitAlgorithmField_swigregister(CSgitFtdcPositionProfitAlgorithmField)

class CSgitFtdcDiscountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcDiscountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcDiscountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcDiscountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcDiscountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcDiscountField_BrokerID_get, _pyctp.CSgitFtdcDiscountField_BrokerID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CSgitFtdcDiscountField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CSgitFtdcDiscountField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CSgitFtdcDiscountField_InvestorRange_get, _pyctp.CSgitFtdcDiscountField_InvestorRange_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcDiscountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcDiscountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcDiscountField_InvestorID_get, _pyctp.CSgitFtdcDiscountField_InvestorID_set)
    __swig_setmethods__["Discount"] = _pyctp.CSgitFtdcDiscountField_Discount_set
    __swig_getmethods__["Discount"] = _pyctp.CSgitFtdcDiscountField_Discount_get
    if _newclass:
        Discount = _swig_property(_pyctp.CSgitFtdcDiscountField_Discount_get, _pyctp.CSgitFtdcDiscountField_Discount_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcDiscountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcDiscountField
    __del__ = lambda self: None
CSgitFtdcDiscountField_swigregister = _pyctp.CSgitFtdcDiscountField_swigregister
CSgitFtdcDiscountField_swigregister(CSgitFtdcDiscountField)

class CSgitFtdcQryTransferBankField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryTransferBankField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryTransferBankField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcQryTransferBankField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcQryTransferBankField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcQryTransferBankField_BankID_get, _pyctp.CSgitFtdcQryTransferBankField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CSgitFtdcQryTransferBankField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CSgitFtdcQryTransferBankField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CSgitFtdcQryTransferBankField_BankBrchID_get, _pyctp.CSgitFtdcQryTransferBankField_BankBrchID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryTransferBankField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryTransferBankField
    __del__ = lambda self: None
CSgitFtdcQryTransferBankField_swigregister = _pyctp.CSgitFtdcQryTransferBankField_swigregister
CSgitFtdcQryTransferBankField_swigregister(CSgitFtdcQryTransferBankField)

class CSgitFtdcTransferBankField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTransferBankField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTransferBankField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcTransferBankField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcTransferBankField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcTransferBankField_BankID_get, _pyctp.CSgitFtdcTransferBankField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CSgitFtdcTransferBankField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CSgitFtdcTransferBankField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CSgitFtdcTransferBankField_BankBrchID_get, _pyctp.CSgitFtdcTransferBankField_BankBrchID_set)
    __swig_setmethods__["BankName"] = _pyctp.CSgitFtdcTransferBankField_BankName_set
    __swig_getmethods__["BankName"] = _pyctp.CSgitFtdcTransferBankField_BankName_get
    if _newclass:
        BankName = _swig_property(_pyctp.CSgitFtdcTransferBankField_BankName_get, _pyctp.CSgitFtdcTransferBankField_BankName_set)
    __swig_setmethods__["IsActive"] = _pyctp.CSgitFtdcTransferBankField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CSgitFtdcTransferBankField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CSgitFtdcTransferBankField_IsActive_get, _pyctp.CSgitFtdcTransferBankField_IsActive_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTransferBankField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTransferBankField
    __del__ = lambda self: None
CSgitFtdcTransferBankField_swigregister = _pyctp.CSgitFtdcTransferBankField_swigregister
CSgitFtdcTransferBankField_swigregister(CSgitFtdcTransferBankField)

class CSgitFtdcQryInvestorPositionDetailField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryInvestorPositionDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryInvestorPositionDetailField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryInvestorPositionDetailField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryInvestorPositionDetailField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryInvestorPositionDetailField_BrokerID_get, _pyctp.CSgitFtdcQryInvestorPositionDetailField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryInvestorPositionDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryInvestorPositionDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryInvestorPositionDetailField_InvestorID_get, _pyctp.CSgitFtdcQryInvestorPositionDetailField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryInvestorPositionDetailField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryInvestorPositionDetailField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcQryInvestorPositionDetailField_InstrumentID_get, _pyctp.CSgitFtdcQryInvestorPositionDetailField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryInvestorPositionDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryInvestorPositionDetailField
    __del__ = lambda self: None
CSgitFtdcQryInvestorPositionDetailField_swigregister = _pyctp.CSgitFtdcQryInvestorPositionDetailField_swigregister
CSgitFtdcQryInvestorPositionDetailField_swigregister(CSgitFtdcQryInvestorPositionDetailField)

class CSgitFtdcInvestorPositionDetailField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcInvestorPositionDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcInvestorPositionDetailField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcInvestorPositionDetailField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcInvestorPositionDetailField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_InstrumentID_get, _pyctp.CSgitFtdcInvestorPositionDetailField_InstrumentID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcInvestorPositionDetailField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcInvestorPositionDetailField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_BrokerID_get, _pyctp.CSgitFtdcInvestorPositionDetailField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcInvestorPositionDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcInvestorPositionDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_InvestorID_get, _pyctp.CSgitFtdcInvestorPositionDetailField_InvestorID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CSgitFtdcInvestorPositionDetailField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CSgitFtdcInvestorPositionDetailField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_HedgeFlag_get, _pyctp.CSgitFtdcInvestorPositionDetailField_HedgeFlag_set)
    __swig_setmethods__["Direction"] = _pyctp.CSgitFtdcInvestorPositionDetailField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CSgitFtdcInvestorPositionDetailField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_Direction_get, _pyctp.CSgitFtdcInvestorPositionDetailField_Direction_set)
    __swig_setmethods__["OpenDate"] = _pyctp.CSgitFtdcInvestorPositionDetailField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _pyctp.CSgitFtdcInvestorPositionDetailField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_OpenDate_get, _pyctp.CSgitFtdcInvestorPositionDetailField_OpenDate_set)
    __swig_setmethods__["TradeID"] = _pyctp.CSgitFtdcInvestorPositionDetailField_TradeID_set
    __swig_getmethods__["TradeID"] = _pyctp.CSgitFtdcInvestorPositionDetailField_TradeID_get
    if _newclass:
        TradeID = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_TradeID_get, _pyctp.CSgitFtdcInvestorPositionDetailField_TradeID_set)
    __swig_setmethods__["Volume"] = _pyctp.CSgitFtdcInvestorPositionDetailField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CSgitFtdcInvestorPositionDetailField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_Volume_get, _pyctp.CSgitFtdcInvestorPositionDetailField_Volume_set)
    __swig_setmethods__["OpenPrice"] = _pyctp.CSgitFtdcInvestorPositionDetailField_OpenPrice_set
    __swig_getmethods__["OpenPrice"] = _pyctp.CSgitFtdcInvestorPositionDetailField_OpenPrice_get
    if _newclass:
        OpenPrice = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_OpenPrice_get, _pyctp.CSgitFtdcInvestorPositionDetailField_OpenPrice_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcInvestorPositionDetailField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcInvestorPositionDetailField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_TradingDay_get, _pyctp.CSgitFtdcInvestorPositionDetailField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CSgitFtdcInvestorPositionDetailField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CSgitFtdcInvestorPositionDetailField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_SettlementID_get, _pyctp.CSgitFtdcInvestorPositionDetailField_SettlementID_set)
    __swig_setmethods__["TradeType"] = _pyctp.CSgitFtdcInvestorPositionDetailField_TradeType_set
    __swig_getmethods__["TradeType"] = _pyctp.CSgitFtdcInvestorPositionDetailField_TradeType_get
    if _newclass:
        TradeType = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_TradeType_get, _pyctp.CSgitFtdcInvestorPositionDetailField_TradeType_set)
    __swig_setmethods__["CombInstrumentID"] = _pyctp.CSgitFtdcInvestorPositionDetailField_CombInstrumentID_set
    __swig_getmethods__["CombInstrumentID"] = _pyctp.CSgitFtdcInvestorPositionDetailField_CombInstrumentID_get
    if _newclass:
        CombInstrumentID = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_CombInstrumentID_get, _pyctp.CSgitFtdcInvestorPositionDetailField_CombInstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcInvestorPositionDetailField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcInvestorPositionDetailField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_ExchangeID_get, _pyctp.CSgitFtdcInvestorPositionDetailField_ExchangeID_set)
    __swig_setmethods__["CloseProfitByDate"] = _pyctp.CSgitFtdcInvestorPositionDetailField_CloseProfitByDate_set
    __swig_getmethods__["CloseProfitByDate"] = _pyctp.CSgitFtdcInvestorPositionDetailField_CloseProfitByDate_get
    if _newclass:
        CloseProfitByDate = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_CloseProfitByDate_get, _pyctp.CSgitFtdcInvestorPositionDetailField_CloseProfitByDate_set)
    __swig_setmethods__["CloseProfitByTrade"] = _pyctp.CSgitFtdcInvestorPositionDetailField_CloseProfitByTrade_set
    __swig_getmethods__["CloseProfitByTrade"] = _pyctp.CSgitFtdcInvestorPositionDetailField_CloseProfitByTrade_get
    if _newclass:
        CloseProfitByTrade = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_CloseProfitByTrade_get, _pyctp.CSgitFtdcInvestorPositionDetailField_CloseProfitByTrade_set)
    __swig_setmethods__["PositionProfitByDate"] = _pyctp.CSgitFtdcInvestorPositionDetailField_PositionProfitByDate_set
    __swig_getmethods__["PositionProfitByDate"] = _pyctp.CSgitFtdcInvestorPositionDetailField_PositionProfitByDate_get
    if _newclass:
        PositionProfitByDate = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_PositionProfitByDate_get, _pyctp.CSgitFtdcInvestorPositionDetailField_PositionProfitByDate_set)
    __swig_setmethods__["PositionProfitByTrade"] = _pyctp.CSgitFtdcInvestorPositionDetailField_PositionProfitByTrade_set
    __swig_getmethods__["PositionProfitByTrade"] = _pyctp.CSgitFtdcInvestorPositionDetailField_PositionProfitByTrade_get
    if _newclass:
        PositionProfitByTrade = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_PositionProfitByTrade_get, _pyctp.CSgitFtdcInvestorPositionDetailField_PositionProfitByTrade_set)
    __swig_setmethods__["Margin"] = _pyctp.CSgitFtdcInvestorPositionDetailField_Margin_set
    __swig_getmethods__["Margin"] = _pyctp.CSgitFtdcInvestorPositionDetailField_Margin_get
    if _newclass:
        Margin = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_Margin_get, _pyctp.CSgitFtdcInvestorPositionDetailField_Margin_set)
    __swig_setmethods__["ExchMargin"] = _pyctp.CSgitFtdcInvestorPositionDetailField_ExchMargin_set
    __swig_getmethods__["ExchMargin"] = _pyctp.CSgitFtdcInvestorPositionDetailField_ExchMargin_get
    if _newclass:
        ExchMargin = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_ExchMargin_get, _pyctp.CSgitFtdcInvestorPositionDetailField_ExchMargin_set)
    __swig_setmethods__["MarginRateByMoney"] = _pyctp.CSgitFtdcInvestorPositionDetailField_MarginRateByMoney_set
    __swig_getmethods__["MarginRateByMoney"] = _pyctp.CSgitFtdcInvestorPositionDetailField_MarginRateByMoney_get
    if _newclass:
        MarginRateByMoney = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_MarginRateByMoney_get, _pyctp.CSgitFtdcInvestorPositionDetailField_MarginRateByMoney_set)
    __swig_setmethods__["MarginRateByVolume"] = _pyctp.CSgitFtdcInvestorPositionDetailField_MarginRateByVolume_set
    __swig_getmethods__["MarginRateByVolume"] = _pyctp.CSgitFtdcInvestorPositionDetailField_MarginRateByVolume_get
    if _newclass:
        MarginRateByVolume = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_MarginRateByVolume_get, _pyctp.CSgitFtdcInvestorPositionDetailField_MarginRateByVolume_set)
    __swig_setmethods__["LastSettlementPrice"] = _pyctp.CSgitFtdcInvestorPositionDetailField_LastSettlementPrice_set
    __swig_getmethods__["LastSettlementPrice"] = _pyctp.CSgitFtdcInvestorPositionDetailField_LastSettlementPrice_get
    if _newclass:
        LastSettlementPrice = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_LastSettlementPrice_get, _pyctp.CSgitFtdcInvestorPositionDetailField_LastSettlementPrice_set)
    __swig_setmethods__["SettlementPrice"] = _pyctp.CSgitFtdcInvestorPositionDetailField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _pyctp.CSgitFtdcInvestorPositionDetailField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_SettlementPrice_get, _pyctp.CSgitFtdcInvestorPositionDetailField_SettlementPrice_set)
    __swig_setmethods__["CloseVolume"] = _pyctp.CSgitFtdcInvestorPositionDetailField_CloseVolume_set
    __swig_getmethods__["CloseVolume"] = _pyctp.CSgitFtdcInvestorPositionDetailField_CloseVolume_get
    if _newclass:
        CloseVolume = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_CloseVolume_get, _pyctp.CSgitFtdcInvestorPositionDetailField_CloseVolume_set)
    __swig_setmethods__["CloseAmount"] = _pyctp.CSgitFtdcInvestorPositionDetailField_CloseAmount_set
    __swig_getmethods__["CloseAmount"] = _pyctp.CSgitFtdcInvestorPositionDetailField_CloseAmount_get
    if _newclass:
        CloseAmount = _swig_property(_pyctp.CSgitFtdcInvestorPositionDetailField_CloseAmount_get, _pyctp.CSgitFtdcInvestorPositionDetailField_CloseAmount_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcInvestorPositionDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcInvestorPositionDetailField
    __del__ = lambda self: None
CSgitFtdcInvestorPositionDetailField_swigregister = _pyctp.CSgitFtdcInvestorPositionDetailField_swigregister
CSgitFtdcInvestorPositionDetailField_swigregister(CSgitFtdcInvestorPositionDetailField)

class CSgitFtdcTradingAccountPasswordField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTradingAccountPasswordField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTradingAccountPasswordField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcTradingAccountPasswordField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcTradingAccountPasswordField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcTradingAccountPasswordField_BrokerID_get, _pyctp.CSgitFtdcTradingAccountPasswordField_BrokerID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcTradingAccountPasswordField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcTradingAccountPasswordField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcTradingAccountPasswordField_AccountID_get, _pyctp.CSgitFtdcTradingAccountPasswordField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcTradingAccountPasswordField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcTradingAccountPasswordField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcTradingAccountPasswordField_Password_get, _pyctp.CSgitFtdcTradingAccountPasswordField_Password_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTradingAccountPasswordField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTradingAccountPasswordField
    __del__ = lambda self: None
CSgitFtdcTradingAccountPasswordField_swigregister = _pyctp.CSgitFtdcTradingAccountPasswordField_swigregister
CSgitFtdcTradingAccountPasswordField_swigregister(CSgitFtdcTradingAccountPasswordField)

class CSgitFtdcMDTraderOfferField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcMDTraderOfferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcMDTraderOfferField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcMDTraderOfferField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcMDTraderOfferField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_ExchangeID_get, _pyctp.CSgitFtdcMDTraderOfferField_ExchangeID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcMDTraderOfferField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcMDTraderOfferField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_TraderID_get, _pyctp.CSgitFtdcMDTraderOfferField_TraderID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcMDTraderOfferField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcMDTraderOfferField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_ParticipantID_get, _pyctp.CSgitFtdcMDTraderOfferField_ParticipantID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcMDTraderOfferField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcMDTraderOfferField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_Password_get, _pyctp.CSgitFtdcMDTraderOfferField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcMDTraderOfferField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcMDTraderOfferField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_InstallID_get, _pyctp.CSgitFtdcMDTraderOfferField_InstallID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CSgitFtdcMDTraderOfferField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CSgitFtdcMDTraderOfferField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_OrderLocalID_get, _pyctp.CSgitFtdcMDTraderOfferField_OrderLocalID_set)
    __swig_setmethods__["TraderConnectStatus"] = _pyctp.CSgitFtdcMDTraderOfferField_TraderConnectStatus_set
    __swig_getmethods__["TraderConnectStatus"] = _pyctp.CSgitFtdcMDTraderOfferField_TraderConnectStatus_get
    if _newclass:
        TraderConnectStatus = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_TraderConnectStatus_get, _pyctp.CSgitFtdcMDTraderOfferField_TraderConnectStatus_set)
    __swig_setmethods__["ConnectRequestDate"] = _pyctp.CSgitFtdcMDTraderOfferField_ConnectRequestDate_set
    __swig_getmethods__["ConnectRequestDate"] = _pyctp.CSgitFtdcMDTraderOfferField_ConnectRequestDate_get
    if _newclass:
        ConnectRequestDate = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_ConnectRequestDate_get, _pyctp.CSgitFtdcMDTraderOfferField_ConnectRequestDate_set)
    __swig_setmethods__["ConnectRequestTime"] = _pyctp.CSgitFtdcMDTraderOfferField_ConnectRequestTime_set
    __swig_getmethods__["ConnectRequestTime"] = _pyctp.CSgitFtdcMDTraderOfferField_ConnectRequestTime_get
    if _newclass:
        ConnectRequestTime = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_ConnectRequestTime_get, _pyctp.CSgitFtdcMDTraderOfferField_ConnectRequestTime_set)
    __swig_setmethods__["LastReportDate"] = _pyctp.CSgitFtdcMDTraderOfferField_LastReportDate_set
    __swig_getmethods__["LastReportDate"] = _pyctp.CSgitFtdcMDTraderOfferField_LastReportDate_get
    if _newclass:
        LastReportDate = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_LastReportDate_get, _pyctp.CSgitFtdcMDTraderOfferField_LastReportDate_set)
    __swig_setmethods__["LastReportTime"] = _pyctp.CSgitFtdcMDTraderOfferField_LastReportTime_set
    __swig_getmethods__["LastReportTime"] = _pyctp.CSgitFtdcMDTraderOfferField_LastReportTime_get
    if _newclass:
        LastReportTime = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_LastReportTime_get, _pyctp.CSgitFtdcMDTraderOfferField_LastReportTime_set)
    __swig_setmethods__["ConnectDate"] = _pyctp.CSgitFtdcMDTraderOfferField_ConnectDate_set
    __swig_getmethods__["ConnectDate"] = _pyctp.CSgitFtdcMDTraderOfferField_ConnectDate_get
    if _newclass:
        ConnectDate = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_ConnectDate_get, _pyctp.CSgitFtdcMDTraderOfferField_ConnectDate_set)
    __swig_setmethods__["ConnectTime"] = _pyctp.CSgitFtdcMDTraderOfferField_ConnectTime_set
    __swig_getmethods__["ConnectTime"] = _pyctp.CSgitFtdcMDTraderOfferField_ConnectTime_get
    if _newclass:
        ConnectTime = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_ConnectTime_get, _pyctp.CSgitFtdcMDTraderOfferField_ConnectTime_set)
    __swig_setmethods__["StartDate"] = _pyctp.CSgitFtdcMDTraderOfferField_StartDate_set
    __swig_getmethods__["StartDate"] = _pyctp.CSgitFtdcMDTraderOfferField_StartDate_get
    if _newclass:
        StartDate = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_StartDate_get, _pyctp.CSgitFtdcMDTraderOfferField_StartDate_set)
    __swig_setmethods__["StartTime"] = _pyctp.CSgitFtdcMDTraderOfferField_StartTime_set
    __swig_getmethods__["StartTime"] = _pyctp.CSgitFtdcMDTraderOfferField_StartTime_get
    if _newclass:
        StartTime = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_StartTime_get, _pyctp.CSgitFtdcMDTraderOfferField_StartTime_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcMDTraderOfferField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcMDTraderOfferField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_TradingDay_get, _pyctp.CSgitFtdcMDTraderOfferField_TradingDay_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcMDTraderOfferField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcMDTraderOfferField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_BrokerID_get, _pyctp.CSgitFtdcMDTraderOfferField_BrokerID_set)
    __swig_setmethods__["MaxTradeID"] = _pyctp.CSgitFtdcMDTraderOfferField_MaxTradeID_set
    __swig_getmethods__["MaxTradeID"] = _pyctp.CSgitFtdcMDTraderOfferField_MaxTradeID_get
    if _newclass:
        MaxTradeID = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_MaxTradeID_get, _pyctp.CSgitFtdcMDTraderOfferField_MaxTradeID_set)
    __swig_setmethods__["MaxOrderMessageReference"] = _pyctp.CSgitFtdcMDTraderOfferField_MaxOrderMessageReference_set
    __swig_getmethods__["MaxOrderMessageReference"] = _pyctp.CSgitFtdcMDTraderOfferField_MaxOrderMessageReference_get
    if _newclass:
        MaxOrderMessageReference = _swig_property(_pyctp.CSgitFtdcMDTraderOfferField_MaxOrderMessageReference_get, _pyctp.CSgitFtdcMDTraderOfferField_MaxOrderMessageReference_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcMDTraderOfferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcMDTraderOfferField
    __del__ = lambda self: None
CSgitFtdcMDTraderOfferField_swigregister = _pyctp.CSgitFtdcMDTraderOfferField_swigregister
CSgitFtdcMDTraderOfferField_swigregister(CSgitFtdcMDTraderOfferField)

class CSgitFtdcQryMDTraderOfferField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryMDTraderOfferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryMDTraderOfferField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryMDTraderOfferField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryMDTraderOfferField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryMDTraderOfferField_ExchangeID_get, _pyctp.CSgitFtdcQryMDTraderOfferField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcQryMDTraderOfferField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcQryMDTraderOfferField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcQryMDTraderOfferField_ParticipantID_get, _pyctp.CSgitFtdcQryMDTraderOfferField_ParticipantID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcQryMDTraderOfferField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcQryMDTraderOfferField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcQryMDTraderOfferField_TraderID_get, _pyctp.CSgitFtdcQryMDTraderOfferField_TraderID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryMDTraderOfferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryMDTraderOfferField
    __del__ = lambda self: None
CSgitFtdcQryMDTraderOfferField_swigregister = _pyctp.CSgitFtdcQryMDTraderOfferField_swigregister
CSgitFtdcQryMDTraderOfferField_swigregister(CSgitFtdcQryMDTraderOfferField)

class CSgitFtdcQryNoticeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryNoticeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryNoticeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryNoticeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryNoticeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryNoticeField_BrokerID_get, _pyctp.CSgitFtdcQryNoticeField_BrokerID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryNoticeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryNoticeField
    __del__ = lambda self: None
CSgitFtdcQryNoticeField_swigregister = _pyctp.CSgitFtdcQryNoticeField_swigregister
CSgitFtdcQryNoticeField_swigregister(CSgitFtdcQryNoticeField)

class CSgitFtdcNoticeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcNoticeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcNoticeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcNoticeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcNoticeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcNoticeField_BrokerID_get, _pyctp.CSgitFtdcNoticeField_BrokerID_set)
    __swig_setmethods__["Content"] = _pyctp.CSgitFtdcNoticeField_Content_set
    __swig_getmethods__["Content"] = _pyctp.CSgitFtdcNoticeField_Content_get
    if _newclass:
        Content = _swig_property(_pyctp.CSgitFtdcNoticeField_Content_get, _pyctp.CSgitFtdcNoticeField_Content_set)
    __swig_setmethods__["SequenceLabel"] = _pyctp.CSgitFtdcNoticeField_SequenceLabel_set
    __swig_getmethods__["SequenceLabel"] = _pyctp.CSgitFtdcNoticeField_SequenceLabel_get
    if _newclass:
        SequenceLabel = _swig_property(_pyctp.CSgitFtdcNoticeField_SequenceLabel_get, _pyctp.CSgitFtdcNoticeField_SequenceLabel_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcNoticeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcNoticeField
    __del__ = lambda self: None
CSgitFtdcNoticeField_swigregister = _pyctp.CSgitFtdcNoticeField_swigregister
CSgitFtdcNoticeField_swigregister(CSgitFtdcNoticeField)

class CSgitFtdcUserRightField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcUserRightField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcUserRightField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcUserRightField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcUserRightField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcUserRightField_BrokerID_get, _pyctp.CSgitFtdcUserRightField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcUserRightField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcUserRightField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcUserRightField_UserID_get, _pyctp.CSgitFtdcUserRightField_UserID_set)
    __swig_setmethods__["UserRightType"] = _pyctp.CSgitFtdcUserRightField_UserRightType_set
    __swig_getmethods__["UserRightType"] = _pyctp.CSgitFtdcUserRightField_UserRightType_get
    if _newclass:
        UserRightType = _swig_property(_pyctp.CSgitFtdcUserRightField_UserRightType_get, _pyctp.CSgitFtdcUserRightField_UserRightType_set)
    __swig_setmethods__["IsForbidden"] = _pyctp.CSgitFtdcUserRightField_IsForbidden_set
    __swig_getmethods__["IsForbidden"] = _pyctp.CSgitFtdcUserRightField_IsForbidden_get
    if _newclass:
        IsForbidden = _swig_property(_pyctp.CSgitFtdcUserRightField_IsForbidden_get, _pyctp.CSgitFtdcUserRightField_IsForbidden_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcUserRightField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcUserRightField
    __del__ = lambda self: None
CSgitFtdcUserRightField_swigregister = _pyctp.CSgitFtdcUserRightField_swigregister
CSgitFtdcUserRightField_swigregister(CSgitFtdcUserRightField)

class CSgitFtdcQrySettlementInfoConfirmField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQrySettlementInfoConfirmField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQrySettlementInfoConfirmField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQrySettlementInfoConfirmField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQrySettlementInfoConfirmField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQrySettlementInfoConfirmField_BrokerID_get, _pyctp.CSgitFtdcQrySettlementInfoConfirmField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQrySettlementInfoConfirmField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQrySettlementInfoConfirmField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQrySettlementInfoConfirmField_InvestorID_get, _pyctp.CSgitFtdcQrySettlementInfoConfirmField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQrySettlementInfoConfirmField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQrySettlementInfoConfirmField
    __del__ = lambda self: None
CSgitFtdcQrySettlementInfoConfirmField_swigregister = _pyctp.CSgitFtdcQrySettlementInfoConfirmField_swigregister
CSgitFtdcQrySettlementInfoConfirmField_swigregister(CSgitFtdcQrySettlementInfoConfirmField)

class CSgitFtdcLoadSettlementInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcLoadSettlementInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcLoadSettlementInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcLoadSettlementInfoField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcLoadSettlementInfoField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcLoadSettlementInfoField_BrokerID_get, _pyctp.CSgitFtdcLoadSettlementInfoField_BrokerID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcLoadSettlementInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcLoadSettlementInfoField
    __del__ = lambda self: None
CSgitFtdcLoadSettlementInfoField_swigregister = _pyctp.CSgitFtdcLoadSettlementInfoField_swigregister
CSgitFtdcLoadSettlementInfoField_swigregister(CSgitFtdcLoadSettlementInfoField)

class CSgitFtdcBrokerWithdrawAlgorithmField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcBrokerWithdrawAlgorithmField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcBrokerWithdrawAlgorithmField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_BrokerID_get, _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_BrokerID_set)
    __swig_setmethods__["WithdrawAlgorithm"] = _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_set
    __swig_getmethods__["WithdrawAlgorithm"] = _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_get
    if _newclass:
        WithdrawAlgorithm = _swig_property(_pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_get, _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_set)
    __swig_setmethods__["UsingRatio"] = _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_UsingRatio_set
    __swig_getmethods__["UsingRatio"] = _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_UsingRatio_get
    if _newclass:
        UsingRatio = _swig_property(_pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_UsingRatio_get, _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_UsingRatio_set)
    __swig_setmethods__["IncludeCloseProfit"] = _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_set
    __swig_getmethods__["IncludeCloseProfit"] = _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_get
    if _newclass:
        IncludeCloseProfit = _swig_property(_pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_get, _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_set)
    __swig_setmethods__["AllWithoutTrade"] = _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_set
    __swig_getmethods__["AllWithoutTrade"] = _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_get
    if _newclass:
        AllWithoutTrade = _swig_property(_pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_get, _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_set)
    __swig_setmethods__["AvailIncludeCloseProfit"] = _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_set
    __swig_getmethods__["AvailIncludeCloseProfit"] = _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_get
    if _newclass:
        AvailIncludeCloseProfit = _swig_property(_pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_get, _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_set)
    __swig_setmethods__["IsBrokerUserEvent"] = _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_set
    __swig_getmethods__["IsBrokerUserEvent"] = _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_get
    if _newclass:
        IsBrokerUserEvent = _swig_property(_pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_get, _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcBrokerWithdrawAlgorithmField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcBrokerWithdrawAlgorithmField
    __del__ = lambda self: None
CSgitFtdcBrokerWithdrawAlgorithmField_swigregister = _pyctp.CSgitFtdcBrokerWithdrawAlgorithmField_swigregister
CSgitFtdcBrokerWithdrawAlgorithmField_swigregister(CSgitFtdcBrokerWithdrawAlgorithmField)

class CSgitFtdcTradingAccountPasswordUpdateV1Field(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTradingAccountPasswordUpdateV1Field, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTradingAccountPasswordUpdateV1Field, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcTradingAccountPasswordUpdateV1Field_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcTradingAccountPasswordUpdateV1Field_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcTradingAccountPasswordUpdateV1Field_BrokerID_get, _pyctp.CSgitFtdcTradingAccountPasswordUpdateV1Field_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcTradingAccountPasswordUpdateV1Field_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcTradingAccountPasswordUpdateV1Field_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcTradingAccountPasswordUpdateV1Field_InvestorID_get, _pyctp.CSgitFtdcTradingAccountPasswordUpdateV1Field_InvestorID_set)
    __swig_setmethods__["OldPassword"] = _pyctp.CSgitFtdcTradingAccountPasswordUpdateV1Field_OldPassword_set
    __swig_getmethods__["OldPassword"] = _pyctp.CSgitFtdcTradingAccountPasswordUpdateV1Field_OldPassword_get
    if _newclass:
        OldPassword = _swig_property(_pyctp.CSgitFtdcTradingAccountPasswordUpdateV1Field_OldPassword_get, _pyctp.CSgitFtdcTradingAccountPasswordUpdateV1Field_OldPassword_set)
    __swig_setmethods__["NewPassword"] = _pyctp.CSgitFtdcTradingAccountPasswordUpdateV1Field_NewPassword_set
    __swig_getmethods__["NewPassword"] = _pyctp.CSgitFtdcTradingAccountPasswordUpdateV1Field_NewPassword_get
    if _newclass:
        NewPassword = _swig_property(_pyctp.CSgitFtdcTradingAccountPasswordUpdateV1Field_NewPassword_get, _pyctp.CSgitFtdcTradingAccountPasswordUpdateV1Field_NewPassword_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTradingAccountPasswordUpdateV1Field()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTradingAccountPasswordUpdateV1Field
    __del__ = lambda self: None
CSgitFtdcTradingAccountPasswordUpdateV1Field_swigregister = _pyctp.CSgitFtdcTradingAccountPasswordUpdateV1Field_swigregister
CSgitFtdcTradingAccountPasswordUpdateV1Field_swigregister(CSgitFtdcTradingAccountPasswordUpdateV1Field)

class CSgitFtdcTradingAccountPasswordUpdateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTradingAccountPasswordUpdateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTradingAccountPasswordUpdateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcTradingAccountPasswordUpdateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcTradingAccountPasswordUpdateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcTradingAccountPasswordUpdateField_BrokerID_get, _pyctp.CSgitFtdcTradingAccountPasswordUpdateField_BrokerID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcTradingAccountPasswordUpdateField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcTradingAccountPasswordUpdateField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcTradingAccountPasswordUpdateField_AccountID_get, _pyctp.CSgitFtdcTradingAccountPasswordUpdateField_AccountID_set)
    __swig_setmethods__["OldPassword"] = _pyctp.CSgitFtdcTradingAccountPasswordUpdateField_OldPassword_set
    __swig_getmethods__["OldPassword"] = _pyctp.CSgitFtdcTradingAccountPasswordUpdateField_OldPassword_get
    if _newclass:
        OldPassword = _swig_property(_pyctp.CSgitFtdcTradingAccountPasswordUpdateField_OldPassword_get, _pyctp.CSgitFtdcTradingAccountPasswordUpdateField_OldPassword_set)
    __swig_setmethods__["NewPassword"] = _pyctp.CSgitFtdcTradingAccountPasswordUpdateField_NewPassword_set
    __swig_getmethods__["NewPassword"] = _pyctp.CSgitFtdcTradingAccountPasswordUpdateField_NewPassword_get
    if _newclass:
        NewPassword = _swig_property(_pyctp.CSgitFtdcTradingAccountPasswordUpdateField_NewPassword_get, _pyctp.CSgitFtdcTradingAccountPasswordUpdateField_NewPassword_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTradingAccountPasswordUpdateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTradingAccountPasswordUpdateField
    __del__ = lambda self: None
CSgitFtdcTradingAccountPasswordUpdateField_swigregister = _pyctp.CSgitFtdcTradingAccountPasswordUpdateField_swigregister
CSgitFtdcTradingAccountPasswordUpdateField_swigregister(CSgitFtdcTradingAccountPasswordUpdateField)

class CSgitFtdcQryCombinationLegField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryCombinationLegField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryCombinationLegField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["CombInstrumentID"] = _pyctp.CSgitFtdcQryCombinationLegField_CombInstrumentID_set
    __swig_getmethods__["CombInstrumentID"] = _pyctp.CSgitFtdcQryCombinationLegField_CombInstrumentID_get
    if _newclass:
        CombInstrumentID = _swig_property(_pyctp.CSgitFtdcQryCombinationLegField_CombInstrumentID_get, _pyctp.CSgitFtdcQryCombinationLegField_CombInstrumentID_set)
    __swig_setmethods__["LegID"] = _pyctp.CSgitFtdcQryCombinationLegField_LegID_set
    __swig_getmethods__["LegID"] = _pyctp.CSgitFtdcQryCombinationLegField_LegID_get
    if _newclass:
        LegID = _swig_property(_pyctp.CSgitFtdcQryCombinationLegField_LegID_get, _pyctp.CSgitFtdcQryCombinationLegField_LegID_set)
    __swig_setmethods__["LegInstrumentID"] = _pyctp.CSgitFtdcQryCombinationLegField_LegInstrumentID_set
    __swig_getmethods__["LegInstrumentID"] = _pyctp.CSgitFtdcQryCombinationLegField_LegInstrumentID_get
    if _newclass:
        LegInstrumentID = _swig_property(_pyctp.CSgitFtdcQryCombinationLegField_LegInstrumentID_get, _pyctp.CSgitFtdcQryCombinationLegField_LegInstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryCombinationLegField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryCombinationLegField
    __del__ = lambda self: None
CSgitFtdcQryCombinationLegField_swigregister = _pyctp.CSgitFtdcQryCombinationLegField_swigregister
CSgitFtdcQryCombinationLegField_swigregister(CSgitFtdcQryCombinationLegField)

class CSgitFtdcQrySyncStatusField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQrySyncStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQrySyncStatusField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcQrySyncStatusField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcQrySyncStatusField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcQrySyncStatusField_TradingDay_get, _pyctp.CSgitFtdcQrySyncStatusField_TradingDay_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQrySyncStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQrySyncStatusField
    __del__ = lambda self: None
CSgitFtdcQrySyncStatusField_swigregister = _pyctp.CSgitFtdcQrySyncStatusField_swigregister
CSgitFtdcQrySyncStatusField_swigregister(CSgitFtdcQrySyncStatusField)

class CSgitFtdcCombinationLegField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcCombinationLegField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcCombinationLegField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["CombInstrumentID"] = _pyctp.CSgitFtdcCombinationLegField_CombInstrumentID_set
    __swig_getmethods__["CombInstrumentID"] = _pyctp.CSgitFtdcCombinationLegField_CombInstrumentID_get
    if _newclass:
        CombInstrumentID = _swig_property(_pyctp.CSgitFtdcCombinationLegField_CombInstrumentID_get, _pyctp.CSgitFtdcCombinationLegField_CombInstrumentID_set)
    __swig_setmethods__["LegID"] = _pyctp.CSgitFtdcCombinationLegField_LegID_set
    __swig_getmethods__["LegID"] = _pyctp.CSgitFtdcCombinationLegField_LegID_get
    if _newclass:
        LegID = _swig_property(_pyctp.CSgitFtdcCombinationLegField_LegID_get, _pyctp.CSgitFtdcCombinationLegField_LegID_set)
    __swig_setmethods__["LegInstrumentID"] = _pyctp.CSgitFtdcCombinationLegField_LegInstrumentID_set
    __swig_getmethods__["LegInstrumentID"] = _pyctp.CSgitFtdcCombinationLegField_LegInstrumentID_get
    if _newclass:
        LegInstrumentID = _swig_property(_pyctp.CSgitFtdcCombinationLegField_LegInstrumentID_get, _pyctp.CSgitFtdcCombinationLegField_LegInstrumentID_set)
    __swig_setmethods__["Direction"] = _pyctp.CSgitFtdcCombinationLegField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CSgitFtdcCombinationLegField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CSgitFtdcCombinationLegField_Direction_get, _pyctp.CSgitFtdcCombinationLegField_Direction_set)
    __swig_setmethods__["LegMultiple"] = _pyctp.CSgitFtdcCombinationLegField_LegMultiple_set
    __swig_getmethods__["LegMultiple"] = _pyctp.CSgitFtdcCombinationLegField_LegMultiple_get
    if _newclass:
        LegMultiple = _swig_property(_pyctp.CSgitFtdcCombinationLegField_LegMultiple_get, _pyctp.CSgitFtdcCombinationLegField_LegMultiple_set)
    __swig_setmethods__["ImplyLevel"] = _pyctp.CSgitFtdcCombinationLegField_ImplyLevel_set
    __swig_getmethods__["ImplyLevel"] = _pyctp.CSgitFtdcCombinationLegField_ImplyLevel_get
    if _newclass:
        ImplyLevel = _swig_property(_pyctp.CSgitFtdcCombinationLegField_ImplyLevel_get, _pyctp.CSgitFtdcCombinationLegField_ImplyLevel_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcCombinationLegField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcCombinationLegField
    __del__ = lambda self: None
CSgitFtdcCombinationLegField_swigregister = _pyctp.CSgitFtdcCombinationLegField_swigregister
CSgitFtdcCombinationLegField_swigregister(CSgitFtdcCombinationLegField)

class CSgitFtdcSyncStatusField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcSyncStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcSyncStatusField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcSyncStatusField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcSyncStatusField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcSyncStatusField_TradingDay_get, _pyctp.CSgitFtdcSyncStatusField_TradingDay_set)
    __swig_setmethods__["DataSyncStatus"] = _pyctp.CSgitFtdcSyncStatusField_DataSyncStatus_set
    __swig_getmethods__["DataSyncStatus"] = _pyctp.CSgitFtdcSyncStatusField_DataSyncStatus_get
    if _newclass:
        DataSyncStatus = _swig_property(_pyctp.CSgitFtdcSyncStatusField_DataSyncStatus_get, _pyctp.CSgitFtdcSyncStatusField_DataSyncStatus_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcSyncStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcSyncStatusField
    __del__ = lambda self: None
CSgitFtdcSyncStatusField_swigregister = _pyctp.CSgitFtdcSyncStatusField_swigregister
CSgitFtdcSyncStatusField_swigregister(CSgitFtdcSyncStatusField)

class CSgitFtdcQryLinkManField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryLinkManField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryLinkManField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryLinkManField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryLinkManField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryLinkManField_BrokerID_get, _pyctp.CSgitFtdcQryLinkManField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryLinkManField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryLinkManField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryLinkManField_InvestorID_get, _pyctp.CSgitFtdcQryLinkManField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryLinkManField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryLinkManField
    __del__ = lambda self: None
CSgitFtdcQryLinkManField_swigregister = _pyctp.CSgitFtdcQryLinkManField_swigregister
CSgitFtdcQryLinkManField_swigregister(CSgitFtdcQryLinkManField)

class CSgitFtdcLinkManField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcLinkManField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcLinkManField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcLinkManField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcLinkManField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcLinkManField_BrokerID_get, _pyctp.CSgitFtdcLinkManField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcLinkManField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcLinkManField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcLinkManField_InvestorID_get, _pyctp.CSgitFtdcLinkManField_InvestorID_set)
    __swig_setmethods__["PersonType"] = _pyctp.CSgitFtdcLinkManField_PersonType_set
    __swig_getmethods__["PersonType"] = _pyctp.CSgitFtdcLinkManField_PersonType_get
    if _newclass:
        PersonType = _swig_property(_pyctp.CSgitFtdcLinkManField_PersonType_get, _pyctp.CSgitFtdcLinkManField_PersonType_set)
    __swig_setmethods__["IdentifiedCardType"] = _pyctp.CSgitFtdcLinkManField_IdentifiedCardType_set
    __swig_getmethods__["IdentifiedCardType"] = _pyctp.CSgitFtdcLinkManField_IdentifiedCardType_get
    if _newclass:
        IdentifiedCardType = _swig_property(_pyctp.CSgitFtdcLinkManField_IdentifiedCardType_get, _pyctp.CSgitFtdcLinkManField_IdentifiedCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcLinkManField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcLinkManField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcLinkManField_IdentifiedCardNo_get, _pyctp.CSgitFtdcLinkManField_IdentifiedCardNo_set)
    __swig_setmethods__["PersonName"] = _pyctp.CSgitFtdcLinkManField_PersonName_set
    __swig_getmethods__["PersonName"] = _pyctp.CSgitFtdcLinkManField_PersonName_get
    if _newclass:
        PersonName = _swig_property(_pyctp.CSgitFtdcLinkManField_PersonName_get, _pyctp.CSgitFtdcLinkManField_PersonName_set)
    __swig_setmethods__["Telephone"] = _pyctp.CSgitFtdcLinkManField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CSgitFtdcLinkManField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CSgitFtdcLinkManField_Telephone_get, _pyctp.CSgitFtdcLinkManField_Telephone_set)
    __swig_setmethods__["Address"] = _pyctp.CSgitFtdcLinkManField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CSgitFtdcLinkManField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CSgitFtdcLinkManField_Address_get, _pyctp.CSgitFtdcLinkManField_Address_set)
    __swig_setmethods__["ZipCode"] = _pyctp.CSgitFtdcLinkManField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _pyctp.CSgitFtdcLinkManField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_pyctp.CSgitFtdcLinkManField_ZipCode_get, _pyctp.CSgitFtdcLinkManField_ZipCode_set)
    __swig_setmethods__["Priority"] = _pyctp.CSgitFtdcLinkManField_Priority_set
    __swig_getmethods__["Priority"] = _pyctp.CSgitFtdcLinkManField_Priority_get
    if _newclass:
        Priority = _swig_property(_pyctp.CSgitFtdcLinkManField_Priority_get, _pyctp.CSgitFtdcLinkManField_Priority_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcLinkManField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcLinkManField
    __del__ = lambda self: None
CSgitFtdcLinkManField_swigregister = _pyctp.CSgitFtdcLinkManField_swigregister
CSgitFtdcLinkManField_swigregister(CSgitFtdcLinkManField)

class CSgitFtdcQryBrokerUserEventField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryBrokerUserEventField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryBrokerUserEventField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryBrokerUserEventField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryBrokerUserEventField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryBrokerUserEventField_BrokerID_get, _pyctp.CSgitFtdcQryBrokerUserEventField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcQryBrokerUserEventField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcQryBrokerUserEventField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcQryBrokerUserEventField_UserID_get, _pyctp.CSgitFtdcQryBrokerUserEventField_UserID_set)
    __swig_setmethods__["UserEventType"] = _pyctp.CSgitFtdcQryBrokerUserEventField_UserEventType_set
    __swig_getmethods__["UserEventType"] = _pyctp.CSgitFtdcQryBrokerUserEventField_UserEventType_get
    if _newclass:
        UserEventType = _swig_property(_pyctp.CSgitFtdcQryBrokerUserEventField_UserEventType_get, _pyctp.CSgitFtdcQryBrokerUserEventField_UserEventType_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryBrokerUserEventField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryBrokerUserEventField
    __del__ = lambda self: None
CSgitFtdcQryBrokerUserEventField_swigregister = _pyctp.CSgitFtdcQryBrokerUserEventField_swigregister
CSgitFtdcQryBrokerUserEventField_swigregister(CSgitFtdcQryBrokerUserEventField)

class CSgitFtdcBrokerUserEventField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcBrokerUserEventField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcBrokerUserEventField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerUserEventField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerUserEventField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcBrokerUserEventField_BrokerID_get, _pyctp.CSgitFtdcBrokerUserEventField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcBrokerUserEventField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcBrokerUserEventField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcBrokerUserEventField_UserID_get, _pyctp.CSgitFtdcBrokerUserEventField_UserID_set)
    __swig_setmethods__["UserEventType"] = _pyctp.CSgitFtdcBrokerUserEventField_UserEventType_set
    __swig_getmethods__["UserEventType"] = _pyctp.CSgitFtdcBrokerUserEventField_UserEventType_get
    if _newclass:
        UserEventType = _swig_property(_pyctp.CSgitFtdcBrokerUserEventField_UserEventType_get, _pyctp.CSgitFtdcBrokerUserEventField_UserEventType_set)
    __swig_setmethods__["EventSequenceNo"] = _pyctp.CSgitFtdcBrokerUserEventField_EventSequenceNo_set
    __swig_getmethods__["EventSequenceNo"] = _pyctp.CSgitFtdcBrokerUserEventField_EventSequenceNo_get
    if _newclass:
        EventSequenceNo = _swig_property(_pyctp.CSgitFtdcBrokerUserEventField_EventSequenceNo_get, _pyctp.CSgitFtdcBrokerUserEventField_EventSequenceNo_set)
    __swig_setmethods__["EventDate"] = _pyctp.CSgitFtdcBrokerUserEventField_EventDate_set
    __swig_getmethods__["EventDate"] = _pyctp.CSgitFtdcBrokerUserEventField_EventDate_get
    if _newclass:
        EventDate = _swig_property(_pyctp.CSgitFtdcBrokerUserEventField_EventDate_get, _pyctp.CSgitFtdcBrokerUserEventField_EventDate_set)
    __swig_setmethods__["EventTime"] = _pyctp.CSgitFtdcBrokerUserEventField_EventTime_set
    __swig_getmethods__["EventTime"] = _pyctp.CSgitFtdcBrokerUserEventField_EventTime_get
    if _newclass:
        EventTime = _swig_property(_pyctp.CSgitFtdcBrokerUserEventField_EventTime_get, _pyctp.CSgitFtdcBrokerUserEventField_EventTime_set)
    __swig_setmethods__["UserEventInfo"] = _pyctp.CSgitFtdcBrokerUserEventField_UserEventInfo_set
    __swig_getmethods__["UserEventInfo"] = _pyctp.CSgitFtdcBrokerUserEventField_UserEventInfo_get
    if _newclass:
        UserEventInfo = _swig_property(_pyctp.CSgitFtdcBrokerUserEventField_UserEventInfo_get, _pyctp.CSgitFtdcBrokerUserEventField_UserEventInfo_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcBrokerUserEventField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcBrokerUserEventField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcBrokerUserEventField_InvestorID_get, _pyctp.CSgitFtdcBrokerUserEventField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcBrokerUserEventField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcBrokerUserEventField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcBrokerUserEventField_InstrumentID_get, _pyctp.CSgitFtdcBrokerUserEventField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcBrokerUserEventField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcBrokerUserEventField
    __del__ = lambda self: None
CSgitFtdcBrokerUserEventField_swigregister = _pyctp.CSgitFtdcBrokerUserEventField_swigregister
CSgitFtdcBrokerUserEventField_swigregister(CSgitFtdcBrokerUserEventField)

class CSgitFtdcQryContractBankField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryContractBankField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryContractBankField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryContractBankField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryContractBankField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryContractBankField_BrokerID_get, _pyctp.CSgitFtdcQryContractBankField_BrokerID_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcQryContractBankField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcQryContractBankField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcQryContractBankField_BankID_get, _pyctp.CSgitFtdcQryContractBankField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CSgitFtdcQryContractBankField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CSgitFtdcQryContractBankField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CSgitFtdcQryContractBankField_BankBrchID_get, _pyctp.CSgitFtdcQryContractBankField_BankBrchID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryContractBankField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryContractBankField
    __del__ = lambda self: None
CSgitFtdcQryContractBankField_swigregister = _pyctp.CSgitFtdcQryContractBankField_swigregister
CSgitFtdcQryContractBankField_swigregister(CSgitFtdcQryContractBankField)

class CSgitFtdcContractBankField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcContractBankField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcContractBankField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcContractBankField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcContractBankField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcContractBankField_BrokerID_get, _pyctp.CSgitFtdcContractBankField_BrokerID_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcContractBankField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcContractBankField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcContractBankField_BankID_get, _pyctp.CSgitFtdcContractBankField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CSgitFtdcContractBankField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CSgitFtdcContractBankField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CSgitFtdcContractBankField_BankBrchID_get, _pyctp.CSgitFtdcContractBankField_BankBrchID_set)
    __swig_setmethods__["BankName"] = _pyctp.CSgitFtdcContractBankField_BankName_set
    __swig_getmethods__["BankName"] = _pyctp.CSgitFtdcContractBankField_BankName_get
    if _newclass:
        BankName = _swig_property(_pyctp.CSgitFtdcContractBankField_BankName_get, _pyctp.CSgitFtdcContractBankField_BankName_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcContractBankField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcContractBankField
    __del__ = lambda self: None
CSgitFtdcContractBankField_swigregister = _pyctp.CSgitFtdcContractBankField_swigregister
CSgitFtdcContractBankField_swigregister(CSgitFtdcContractBankField)

class CSgitFtdcInvestorPositionCombineDetailField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcInvestorPositionCombineDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcInvestorPositionCombineDetailField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_TradingDay_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_TradingDay_set)
    __swig_setmethods__["OpenDate"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_OpenDate_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_OpenDate_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_ExchangeID_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_ExchangeID_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_SettlementID_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_SettlementID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_BrokerID_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_InvestorID_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_InvestorID_set)
    __swig_setmethods__["ComTradeID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_ComTradeID_set
    __swig_getmethods__["ComTradeID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_ComTradeID_get
    if _newclass:
        ComTradeID = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_ComTradeID_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_ComTradeID_set)
    __swig_setmethods__["TradeID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_TradeID_set
    __swig_getmethods__["TradeID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_TradeID_get
    if _newclass:
        TradeID = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_TradeID_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_TradeID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_InstrumentID_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_InstrumentID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_HedgeFlag_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_HedgeFlag_set)
    __swig_setmethods__["Direction"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_Direction_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_Direction_set)
    __swig_setmethods__["TotalAmt"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_TotalAmt_set
    __swig_getmethods__["TotalAmt"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_TotalAmt_get
    if _newclass:
        TotalAmt = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_TotalAmt_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_TotalAmt_set)
    __swig_setmethods__["Margin"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_Margin_set
    __swig_getmethods__["Margin"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_Margin_get
    if _newclass:
        Margin = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_Margin_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_Margin_set)
    __swig_setmethods__["ExchMargin"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_ExchMargin_set
    __swig_getmethods__["ExchMargin"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_ExchMargin_get
    if _newclass:
        ExchMargin = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_ExchMargin_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_ExchMargin_set)
    __swig_setmethods__["MarginRateByMoney"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_MarginRateByMoney_set
    __swig_getmethods__["MarginRateByMoney"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_MarginRateByMoney_get
    if _newclass:
        MarginRateByMoney = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_MarginRateByMoney_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_MarginRateByMoney_set)
    __swig_setmethods__["MarginRateByVolume"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_MarginRateByVolume_set
    __swig_getmethods__["MarginRateByVolume"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_MarginRateByVolume_get
    if _newclass:
        MarginRateByVolume = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_MarginRateByVolume_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_MarginRateByVolume_set)
    __swig_setmethods__["LegID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_LegID_set
    __swig_getmethods__["LegID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_LegID_get
    if _newclass:
        LegID = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_LegID_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_LegID_set)
    __swig_setmethods__["LegMultiple"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_LegMultiple_set
    __swig_getmethods__["LegMultiple"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_LegMultiple_get
    if _newclass:
        LegMultiple = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_LegMultiple_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_LegMultiple_set)
    __swig_setmethods__["CombInstrumentID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_CombInstrumentID_set
    __swig_getmethods__["CombInstrumentID"] = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_CombInstrumentID_get
    if _newclass:
        CombInstrumentID = _swig_property(_pyctp.CSgitFtdcInvestorPositionCombineDetailField_CombInstrumentID_get, _pyctp.CSgitFtdcInvestorPositionCombineDetailField_CombInstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcInvestorPositionCombineDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcInvestorPositionCombineDetailField
    __del__ = lambda self: None
CSgitFtdcInvestorPositionCombineDetailField_swigregister = _pyctp.CSgitFtdcInvestorPositionCombineDetailField_swigregister
CSgitFtdcInvestorPositionCombineDetailField_swigregister(CSgitFtdcInvestorPositionCombineDetailField)

class CSgitFtdcParkedOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcParkedOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcParkedOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcParkedOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcParkedOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcParkedOrderField_BrokerID_get, _pyctp.CSgitFtdcParkedOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcParkedOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcParkedOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcParkedOrderField_InvestorID_get, _pyctp.CSgitFtdcParkedOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcParkedOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcParkedOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcParkedOrderField_InstrumentID_get, _pyctp.CSgitFtdcParkedOrderField_InstrumentID_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CSgitFtdcParkedOrderField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CSgitFtdcParkedOrderField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CSgitFtdcParkedOrderField_OrderRef_get, _pyctp.CSgitFtdcParkedOrderField_OrderRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcParkedOrderField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcParkedOrderField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcParkedOrderField_UserID_get, _pyctp.CSgitFtdcParkedOrderField_UserID_set)
    __swig_setmethods__["OrderPriceType"] = _pyctp.CSgitFtdcParkedOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _pyctp.CSgitFtdcParkedOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_pyctp.CSgitFtdcParkedOrderField_OrderPriceType_get, _pyctp.CSgitFtdcParkedOrderField_OrderPriceType_set)
    __swig_setmethods__["Direction"] = _pyctp.CSgitFtdcParkedOrderField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CSgitFtdcParkedOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CSgitFtdcParkedOrderField_Direction_get, _pyctp.CSgitFtdcParkedOrderField_Direction_set)
    __swig_setmethods__["CombOffsetFlag"] = _pyctp.CSgitFtdcParkedOrderField_CombOffsetFlag_set
    __swig_getmethods__["CombOffsetFlag"] = _pyctp.CSgitFtdcParkedOrderField_CombOffsetFlag_get
    if _newclass:
        CombOffsetFlag = _swig_property(_pyctp.CSgitFtdcParkedOrderField_CombOffsetFlag_get, _pyctp.CSgitFtdcParkedOrderField_CombOffsetFlag_set)
    __swig_setmethods__["CombHedgeFlag"] = _pyctp.CSgitFtdcParkedOrderField_CombHedgeFlag_set
    __swig_getmethods__["CombHedgeFlag"] = _pyctp.CSgitFtdcParkedOrderField_CombHedgeFlag_get
    if _newclass:
        CombHedgeFlag = _swig_property(_pyctp.CSgitFtdcParkedOrderField_CombHedgeFlag_get, _pyctp.CSgitFtdcParkedOrderField_CombHedgeFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CSgitFtdcParkedOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CSgitFtdcParkedOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CSgitFtdcParkedOrderField_LimitPrice_get, _pyctp.CSgitFtdcParkedOrderField_LimitPrice_set)
    __swig_setmethods__["VolumeTotalOriginal"] = _pyctp.CSgitFtdcParkedOrderField_VolumeTotalOriginal_set
    __swig_getmethods__["VolumeTotalOriginal"] = _pyctp.CSgitFtdcParkedOrderField_VolumeTotalOriginal_get
    if _newclass:
        VolumeTotalOriginal = _swig_property(_pyctp.CSgitFtdcParkedOrderField_VolumeTotalOriginal_get, _pyctp.CSgitFtdcParkedOrderField_VolumeTotalOriginal_set)
    __swig_setmethods__["TimeCondition"] = _pyctp.CSgitFtdcParkedOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _pyctp.CSgitFtdcParkedOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_pyctp.CSgitFtdcParkedOrderField_TimeCondition_get, _pyctp.CSgitFtdcParkedOrderField_TimeCondition_set)
    __swig_setmethods__["GTDDate"] = _pyctp.CSgitFtdcParkedOrderField_GTDDate_set
    __swig_getmethods__["GTDDate"] = _pyctp.CSgitFtdcParkedOrderField_GTDDate_get
    if _newclass:
        GTDDate = _swig_property(_pyctp.CSgitFtdcParkedOrderField_GTDDate_get, _pyctp.CSgitFtdcParkedOrderField_GTDDate_set)
    __swig_setmethods__["VolumeCondition"] = _pyctp.CSgitFtdcParkedOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _pyctp.CSgitFtdcParkedOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_pyctp.CSgitFtdcParkedOrderField_VolumeCondition_get, _pyctp.CSgitFtdcParkedOrderField_VolumeCondition_set)
    __swig_setmethods__["MinVolume"] = _pyctp.CSgitFtdcParkedOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _pyctp.CSgitFtdcParkedOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_pyctp.CSgitFtdcParkedOrderField_MinVolume_get, _pyctp.CSgitFtdcParkedOrderField_MinVolume_set)
    __swig_setmethods__["ContingentCondition"] = _pyctp.CSgitFtdcParkedOrderField_ContingentCondition_set
    __swig_getmethods__["ContingentCondition"] = _pyctp.CSgitFtdcParkedOrderField_ContingentCondition_get
    if _newclass:
        ContingentCondition = _swig_property(_pyctp.CSgitFtdcParkedOrderField_ContingentCondition_get, _pyctp.CSgitFtdcParkedOrderField_ContingentCondition_set)
    __swig_setmethods__["StopPrice"] = _pyctp.CSgitFtdcParkedOrderField_StopPrice_set
    __swig_getmethods__["StopPrice"] = _pyctp.CSgitFtdcParkedOrderField_StopPrice_get
    if _newclass:
        StopPrice = _swig_property(_pyctp.CSgitFtdcParkedOrderField_StopPrice_get, _pyctp.CSgitFtdcParkedOrderField_StopPrice_set)
    __swig_setmethods__["ForceCloseReason"] = _pyctp.CSgitFtdcParkedOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _pyctp.CSgitFtdcParkedOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_pyctp.CSgitFtdcParkedOrderField_ForceCloseReason_get, _pyctp.CSgitFtdcParkedOrderField_ForceCloseReason_set)
    __swig_setmethods__["IsAutoSuspend"] = _pyctp.CSgitFtdcParkedOrderField_IsAutoSuspend_set
    __swig_getmethods__["IsAutoSuspend"] = _pyctp.CSgitFtdcParkedOrderField_IsAutoSuspend_get
    if _newclass:
        IsAutoSuspend = _swig_property(_pyctp.CSgitFtdcParkedOrderField_IsAutoSuspend_get, _pyctp.CSgitFtdcParkedOrderField_IsAutoSuspend_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CSgitFtdcParkedOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CSgitFtdcParkedOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CSgitFtdcParkedOrderField_BusinessUnit_get, _pyctp.CSgitFtdcParkedOrderField_BusinessUnit_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcParkedOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcParkedOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcParkedOrderField_RequestID_get, _pyctp.CSgitFtdcParkedOrderField_RequestID_set)
    __swig_setmethods__["UserForceClose"] = _pyctp.CSgitFtdcParkedOrderField_UserForceClose_set
    __swig_getmethods__["UserForceClose"] = _pyctp.CSgitFtdcParkedOrderField_UserForceClose_get
    if _newclass:
        UserForceClose = _swig_property(_pyctp.CSgitFtdcParkedOrderField_UserForceClose_get, _pyctp.CSgitFtdcParkedOrderField_UserForceClose_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcParkedOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcParkedOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcParkedOrderField_ExchangeID_get, _pyctp.CSgitFtdcParkedOrderField_ExchangeID_set)
    __swig_setmethods__["ParkedOrderID"] = _pyctp.CSgitFtdcParkedOrderField_ParkedOrderID_set
    __swig_getmethods__["ParkedOrderID"] = _pyctp.CSgitFtdcParkedOrderField_ParkedOrderID_get
    if _newclass:
        ParkedOrderID = _swig_property(_pyctp.CSgitFtdcParkedOrderField_ParkedOrderID_get, _pyctp.CSgitFtdcParkedOrderField_ParkedOrderID_set)
    __swig_setmethods__["UserType"] = _pyctp.CSgitFtdcParkedOrderField_UserType_set
    __swig_getmethods__["UserType"] = _pyctp.CSgitFtdcParkedOrderField_UserType_get
    if _newclass:
        UserType = _swig_property(_pyctp.CSgitFtdcParkedOrderField_UserType_get, _pyctp.CSgitFtdcParkedOrderField_UserType_set)
    __swig_setmethods__["Status"] = _pyctp.CSgitFtdcParkedOrderField_Status_set
    __swig_getmethods__["Status"] = _pyctp.CSgitFtdcParkedOrderField_Status_get
    if _newclass:
        Status = _swig_property(_pyctp.CSgitFtdcParkedOrderField_Status_get, _pyctp.CSgitFtdcParkedOrderField_Status_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcParkedOrderField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcParkedOrderField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcParkedOrderField_ErrorID_get, _pyctp.CSgitFtdcParkedOrderField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcParkedOrderField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcParkedOrderField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcParkedOrderField_ErrorMsg_get, _pyctp.CSgitFtdcParkedOrderField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcParkedOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcParkedOrderField
    __del__ = lambda self: None
CSgitFtdcParkedOrderField_swigregister = _pyctp.CSgitFtdcParkedOrderField_swigregister
CSgitFtdcParkedOrderField_swigregister(CSgitFtdcParkedOrderField)

class CSgitFtdcParkedOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcParkedOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcParkedOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcParkedOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcParkedOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_BrokerID_get, _pyctp.CSgitFtdcParkedOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcParkedOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcParkedOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_InvestorID_get, _pyctp.CSgitFtdcParkedOrderActionField_InvestorID_set)
    __swig_setmethods__["OrderActionRef"] = _pyctp.CSgitFtdcParkedOrderActionField_OrderActionRef_set
    __swig_getmethods__["OrderActionRef"] = _pyctp.CSgitFtdcParkedOrderActionField_OrderActionRef_get
    if _newclass:
        OrderActionRef = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_OrderActionRef_get, _pyctp.CSgitFtdcParkedOrderActionField_OrderActionRef_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CSgitFtdcParkedOrderActionField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CSgitFtdcParkedOrderActionField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_OrderRef_get, _pyctp.CSgitFtdcParkedOrderActionField_OrderRef_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcParkedOrderActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcParkedOrderActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_RequestID_get, _pyctp.CSgitFtdcParkedOrderActionField_RequestID_set)
    __swig_setmethods__["FrontID"] = _pyctp.CSgitFtdcParkedOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CSgitFtdcParkedOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_FrontID_get, _pyctp.CSgitFtdcParkedOrderActionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcParkedOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcParkedOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_SessionID_get, _pyctp.CSgitFtdcParkedOrderActionField_SessionID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcParkedOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcParkedOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_ExchangeID_get, _pyctp.CSgitFtdcParkedOrderActionField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CSgitFtdcParkedOrderActionField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CSgitFtdcParkedOrderActionField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_OrderSysID_get, _pyctp.CSgitFtdcParkedOrderActionField_OrderSysID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CSgitFtdcParkedOrderActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CSgitFtdcParkedOrderActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_ActionFlag_get, _pyctp.CSgitFtdcParkedOrderActionField_ActionFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CSgitFtdcParkedOrderActionField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CSgitFtdcParkedOrderActionField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_LimitPrice_get, _pyctp.CSgitFtdcParkedOrderActionField_LimitPrice_set)
    __swig_setmethods__["VolumeChange"] = _pyctp.CSgitFtdcParkedOrderActionField_VolumeChange_set
    __swig_getmethods__["VolumeChange"] = _pyctp.CSgitFtdcParkedOrderActionField_VolumeChange_get
    if _newclass:
        VolumeChange = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_VolumeChange_get, _pyctp.CSgitFtdcParkedOrderActionField_VolumeChange_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcParkedOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcParkedOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_UserID_get, _pyctp.CSgitFtdcParkedOrderActionField_UserID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcParkedOrderActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcParkedOrderActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_InstrumentID_get, _pyctp.CSgitFtdcParkedOrderActionField_InstrumentID_set)
    __swig_setmethods__["ParkedOrderActionID"] = _pyctp.CSgitFtdcParkedOrderActionField_ParkedOrderActionID_set
    __swig_getmethods__["ParkedOrderActionID"] = _pyctp.CSgitFtdcParkedOrderActionField_ParkedOrderActionID_get
    if _newclass:
        ParkedOrderActionID = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_ParkedOrderActionID_get, _pyctp.CSgitFtdcParkedOrderActionField_ParkedOrderActionID_set)
    __swig_setmethods__["UserType"] = _pyctp.CSgitFtdcParkedOrderActionField_UserType_set
    __swig_getmethods__["UserType"] = _pyctp.CSgitFtdcParkedOrderActionField_UserType_get
    if _newclass:
        UserType = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_UserType_get, _pyctp.CSgitFtdcParkedOrderActionField_UserType_set)
    __swig_setmethods__["Status"] = _pyctp.CSgitFtdcParkedOrderActionField_Status_set
    __swig_getmethods__["Status"] = _pyctp.CSgitFtdcParkedOrderActionField_Status_get
    if _newclass:
        Status = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_Status_get, _pyctp.CSgitFtdcParkedOrderActionField_Status_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcParkedOrderActionField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcParkedOrderActionField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_ErrorID_get, _pyctp.CSgitFtdcParkedOrderActionField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcParkedOrderActionField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcParkedOrderActionField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcParkedOrderActionField_ErrorMsg_get, _pyctp.CSgitFtdcParkedOrderActionField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcParkedOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcParkedOrderActionField
    __del__ = lambda self: None
CSgitFtdcParkedOrderActionField_swigregister = _pyctp.CSgitFtdcParkedOrderActionField_swigregister
CSgitFtdcParkedOrderActionField_swigregister(CSgitFtdcParkedOrderActionField)

class CSgitFtdcQryParkedOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryParkedOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryParkedOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryParkedOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryParkedOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryParkedOrderField_BrokerID_get, _pyctp.CSgitFtdcQryParkedOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryParkedOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryParkedOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryParkedOrderField_InvestorID_get, _pyctp.CSgitFtdcQryParkedOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryParkedOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryParkedOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcQryParkedOrderField_InstrumentID_get, _pyctp.CSgitFtdcQryParkedOrderField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryParkedOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryParkedOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryParkedOrderField_ExchangeID_get, _pyctp.CSgitFtdcQryParkedOrderField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryParkedOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryParkedOrderField
    __del__ = lambda self: None
CSgitFtdcQryParkedOrderField_swigregister = _pyctp.CSgitFtdcQryParkedOrderField_swigregister
CSgitFtdcQryParkedOrderField_swigregister(CSgitFtdcQryParkedOrderField)

class CSgitFtdcQryParkedOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryParkedOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryParkedOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryParkedOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryParkedOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryParkedOrderActionField_BrokerID_get, _pyctp.CSgitFtdcQryParkedOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryParkedOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryParkedOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryParkedOrderActionField_InvestorID_get, _pyctp.CSgitFtdcQryParkedOrderActionField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryParkedOrderActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryParkedOrderActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcQryParkedOrderActionField_InstrumentID_get, _pyctp.CSgitFtdcQryParkedOrderActionField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryParkedOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryParkedOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryParkedOrderActionField_ExchangeID_get, _pyctp.CSgitFtdcQryParkedOrderActionField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryParkedOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryParkedOrderActionField
    __del__ = lambda self: None
CSgitFtdcQryParkedOrderActionField_swigregister = _pyctp.CSgitFtdcQryParkedOrderActionField_swigregister
CSgitFtdcQryParkedOrderActionField_swigregister(CSgitFtdcQryParkedOrderActionField)

class CSgitFtdcRemoveParkedOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcRemoveParkedOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcRemoveParkedOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcRemoveParkedOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcRemoveParkedOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcRemoveParkedOrderField_BrokerID_get, _pyctp.CSgitFtdcRemoveParkedOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcRemoveParkedOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcRemoveParkedOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcRemoveParkedOrderField_InvestorID_get, _pyctp.CSgitFtdcRemoveParkedOrderField_InvestorID_set)
    __swig_setmethods__["ParkedOrderID"] = _pyctp.CSgitFtdcRemoveParkedOrderField_ParkedOrderID_set
    __swig_getmethods__["ParkedOrderID"] = _pyctp.CSgitFtdcRemoveParkedOrderField_ParkedOrderID_get
    if _newclass:
        ParkedOrderID = _swig_property(_pyctp.CSgitFtdcRemoveParkedOrderField_ParkedOrderID_get, _pyctp.CSgitFtdcRemoveParkedOrderField_ParkedOrderID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcRemoveParkedOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcRemoveParkedOrderField
    __del__ = lambda self: None
CSgitFtdcRemoveParkedOrderField_swigregister = _pyctp.CSgitFtdcRemoveParkedOrderField_swigregister
CSgitFtdcRemoveParkedOrderField_swigregister(CSgitFtdcRemoveParkedOrderField)

class CSgitFtdcRemoveParkedOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcRemoveParkedOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcRemoveParkedOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcRemoveParkedOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcRemoveParkedOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcRemoveParkedOrderActionField_BrokerID_get, _pyctp.CSgitFtdcRemoveParkedOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcRemoveParkedOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcRemoveParkedOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcRemoveParkedOrderActionField_InvestorID_get, _pyctp.CSgitFtdcRemoveParkedOrderActionField_InvestorID_set)
    __swig_setmethods__["ParkedOrderActionID"] = _pyctp.CSgitFtdcRemoveParkedOrderActionField_ParkedOrderActionID_set
    __swig_getmethods__["ParkedOrderActionID"] = _pyctp.CSgitFtdcRemoveParkedOrderActionField_ParkedOrderActionID_get
    if _newclass:
        ParkedOrderActionID = _swig_property(_pyctp.CSgitFtdcRemoveParkedOrderActionField_ParkedOrderActionID_get, _pyctp.CSgitFtdcRemoveParkedOrderActionField_ParkedOrderActionID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcRemoveParkedOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcRemoveParkedOrderActionField
    __del__ = lambda self: None
CSgitFtdcRemoveParkedOrderActionField_swigregister = _pyctp.CSgitFtdcRemoveParkedOrderActionField_swigregister
CSgitFtdcRemoveParkedOrderActionField_swigregister(CSgitFtdcRemoveParkedOrderActionField)

class CSgitFtdcInvestorWithdrawAlgorithmField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcInvestorWithdrawAlgorithmField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcInvestorWithdrawAlgorithmField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcInvestorWithdrawAlgorithmField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcInvestorWithdrawAlgorithmField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcInvestorWithdrawAlgorithmField_BrokerID_get, _pyctp.CSgitFtdcInvestorWithdrawAlgorithmField_BrokerID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CSgitFtdcInvestorWithdrawAlgorithmField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CSgitFtdcInvestorWithdrawAlgorithmField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CSgitFtdcInvestorWithdrawAlgorithmField_InvestorRange_get, _pyctp.CSgitFtdcInvestorWithdrawAlgorithmField_InvestorRange_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcInvestorWithdrawAlgorithmField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcInvestorWithdrawAlgorithmField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcInvestorWithdrawAlgorithmField_InvestorID_get, _pyctp.CSgitFtdcInvestorWithdrawAlgorithmField_InvestorID_set)
    __swig_setmethods__["UsingRatio"] = _pyctp.CSgitFtdcInvestorWithdrawAlgorithmField_UsingRatio_set
    __swig_getmethods__["UsingRatio"] = _pyctp.CSgitFtdcInvestorWithdrawAlgorithmField_UsingRatio_get
    if _newclass:
        UsingRatio = _swig_property(_pyctp.CSgitFtdcInvestorWithdrawAlgorithmField_UsingRatio_get, _pyctp.CSgitFtdcInvestorWithdrawAlgorithmField_UsingRatio_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcInvestorWithdrawAlgorithmField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcInvestorWithdrawAlgorithmField
    __del__ = lambda self: None
CSgitFtdcInvestorWithdrawAlgorithmField_swigregister = _pyctp.CSgitFtdcInvestorWithdrawAlgorithmField_swigregister
CSgitFtdcInvestorWithdrawAlgorithmField_swigregister(CSgitFtdcInvestorWithdrawAlgorithmField)

class CSgitFtdcQryInvestorPositionCombineDetailField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryInvestorPositionCombineDetailField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryInvestorPositionCombineDetailField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryInvestorPositionCombineDetailField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryInvestorPositionCombineDetailField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryInvestorPositionCombineDetailField_BrokerID_get, _pyctp.CSgitFtdcQryInvestorPositionCombineDetailField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryInvestorPositionCombineDetailField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryInvestorPositionCombineDetailField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryInvestorPositionCombineDetailField_InvestorID_get, _pyctp.CSgitFtdcQryInvestorPositionCombineDetailField_InvestorID_set)
    __swig_setmethods__["CombInstrumentID"] = _pyctp.CSgitFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_set
    __swig_getmethods__["CombInstrumentID"] = _pyctp.CSgitFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_get
    if _newclass:
        CombInstrumentID = _swig_property(_pyctp.CSgitFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_get, _pyctp.CSgitFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryInvestorPositionCombineDetailField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryInvestorPositionCombineDetailField
    __del__ = lambda self: None
CSgitFtdcQryInvestorPositionCombineDetailField_swigregister = _pyctp.CSgitFtdcQryInvestorPositionCombineDetailField_swigregister
CSgitFtdcQryInvestorPositionCombineDetailField_swigregister(CSgitFtdcQryInvestorPositionCombineDetailField)

class CSgitFtdcMarketDataAveragePriceField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcMarketDataAveragePriceField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcMarketDataAveragePriceField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["AveragePrice"] = _pyctp.CSgitFtdcMarketDataAveragePriceField_AveragePrice_set
    __swig_getmethods__["AveragePrice"] = _pyctp.CSgitFtdcMarketDataAveragePriceField_AveragePrice_get
    if _newclass:
        AveragePrice = _swig_property(_pyctp.CSgitFtdcMarketDataAveragePriceField_AveragePrice_get, _pyctp.CSgitFtdcMarketDataAveragePriceField_AveragePrice_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcMarketDataAveragePriceField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcMarketDataAveragePriceField
    __del__ = lambda self: None
CSgitFtdcMarketDataAveragePriceField_swigregister = _pyctp.CSgitFtdcMarketDataAveragePriceField_swigregister
CSgitFtdcMarketDataAveragePriceField_swigregister(CSgitFtdcMarketDataAveragePriceField)

class CSgitFtdcVerifyInvestorPasswordField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcVerifyInvestorPasswordField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcVerifyInvestorPasswordField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcVerifyInvestorPasswordField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcVerifyInvestorPasswordField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcVerifyInvestorPasswordField_BrokerID_get, _pyctp.CSgitFtdcVerifyInvestorPasswordField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcVerifyInvestorPasswordField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcVerifyInvestorPasswordField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcVerifyInvestorPasswordField_InvestorID_get, _pyctp.CSgitFtdcVerifyInvestorPasswordField_InvestorID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcVerifyInvestorPasswordField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcVerifyInvestorPasswordField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcVerifyInvestorPasswordField_Password_get, _pyctp.CSgitFtdcVerifyInvestorPasswordField_Password_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcVerifyInvestorPasswordField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcVerifyInvestorPasswordField
    __del__ = lambda self: None
CSgitFtdcVerifyInvestorPasswordField_swigregister = _pyctp.CSgitFtdcVerifyInvestorPasswordField_swigregister
CSgitFtdcVerifyInvestorPasswordField_swigregister(CSgitFtdcVerifyInvestorPasswordField)

class CSgitFtdcUserIPField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcUserIPField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcUserIPField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcUserIPField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcUserIPField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcUserIPField_BrokerID_get, _pyctp.CSgitFtdcUserIPField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcUserIPField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcUserIPField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcUserIPField_UserID_get, _pyctp.CSgitFtdcUserIPField_UserID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CSgitFtdcUserIPField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CSgitFtdcUserIPField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CSgitFtdcUserIPField_IPAddress_get, _pyctp.CSgitFtdcUserIPField_IPAddress_set)
    __swig_setmethods__["IPMask"] = _pyctp.CSgitFtdcUserIPField_IPMask_set
    __swig_getmethods__["IPMask"] = _pyctp.CSgitFtdcUserIPField_IPMask_get
    if _newclass:
        IPMask = _swig_property(_pyctp.CSgitFtdcUserIPField_IPMask_get, _pyctp.CSgitFtdcUserIPField_IPMask_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CSgitFtdcUserIPField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CSgitFtdcUserIPField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CSgitFtdcUserIPField_MacAddress_get, _pyctp.CSgitFtdcUserIPField_MacAddress_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcUserIPField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcUserIPField
    __del__ = lambda self: None
CSgitFtdcUserIPField_swigregister = _pyctp.CSgitFtdcUserIPField_swigregister
CSgitFtdcUserIPField_swigregister(CSgitFtdcUserIPField)

class CSgitFtdcTradingNoticeInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTradingNoticeInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTradingNoticeInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcTradingNoticeInfoField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcTradingNoticeInfoField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcTradingNoticeInfoField_BrokerID_get, _pyctp.CSgitFtdcTradingNoticeInfoField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcTradingNoticeInfoField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcTradingNoticeInfoField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcTradingNoticeInfoField_InvestorID_get, _pyctp.CSgitFtdcTradingNoticeInfoField_InvestorID_set)
    __swig_setmethods__["SendTime"] = _pyctp.CSgitFtdcTradingNoticeInfoField_SendTime_set
    __swig_getmethods__["SendTime"] = _pyctp.CSgitFtdcTradingNoticeInfoField_SendTime_get
    if _newclass:
        SendTime = _swig_property(_pyctp.CSgitFtdcTradingNoticeInfoField_SendTime_get, _pyctp.CSgitFtdcTradingNoticeInfoField_SendTime_set)
    __swig_setmethods__["FieldContent"] = _pyctp.CSgitFtdcTradingNoticeInfoField_FieldContent_set
    __swig_getmethods__["FieldContent"] = _pyctp.CSgitFtdcTradingNoticeInfoField_FieldContent_get
    if _newclass:
        FieldContent = _swig_property(_pyctp.CSgitFtdcTradingNoticeInfoField_FieldContent_get, _pyctp.CSgitFtdcTradingNoticeInfoField_FieldContent_set)
    __swig_setmethods__["SequenceSeries"] = _pyctp.CSgitFtdcTradingNoticeInfoField_SequenceSeries_set
    __swig_getmethods__["SequenceSeries"] = _pyctp.CSgitFtdcTradingNoticeInfoField_SequenceSeries_get
    if _newclass:
        SequenceSeries = _swig_property(_pyctp.CSgitFtdcTradingNoticeInfoField_SequenceSeries_get, _pyctp.CSgitFtdcTradingNoticeInfoField_SequenceSeries_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CSgitFtdcTradingNoticeInfoField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CSgitFtdcTradingNoticeInfoField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CSgitFtdcTradingNoticeInfoField_SequenceNo_get, _pyctp.CSgitFtdcTradingNoticeInfoField_SequenceNo_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTradingNoticeInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTradingNoticeInfoField
    __del__ = lambda self: None
CSgitFtdcTradingNoticeInfoField_swigregister = _pyctp.CSgitFtdcTradingNoticeInfoField_swigregister
CSgitFtdcTradingNoticeInfoField_swigregister(CSgitFtdcTradingNoticeInfoField)

class CSgitFtdcTradingNoticeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTradingNoticeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTradingNoticeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcTradingNoticeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcTradingNoticeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcTradingNoticeField_BrokerID_get, _pyctp.CSgitFtdcTradingNoticeField_BrokerID_set)
    __swig_setmethods__["InvestorRange"] = _pyctp.CSgitFtdcTradingNoticeField_InvestorRange_set
    __swig_getmethods__["InvestorRange"] = _pyctp.CSgitFtdcTradingNoticeField_InvestorRange_get
    if _newclass:
        InvestorRange = _swig_property(_pyctp.CSgitFtdcTradingNoticeField_InvestorRange_get, _pyctp.CSgitFtdcTradingNoticeField_InvestorRange_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcTradingNoticeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcTradingNoticeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcTradingNoticeField_InvestorID_get, _pyctp.CSgitFtdcTradingNoticeField_InvestorID_set)
    __swig_setmethods__["SequenceSeries"] = _pyctp.CSgitFtdcTradingNoticeField_SequenceSeries_set
    __swig_getmethods__["SequenceSeries"] = _pyctp.CSgitFtdcTradingNoticeField_SequenceSeries_get
    if _newclass:
        SequenceSeries = _swig_property(_pyctp.CSgitFtdcTradingNoticeField_SequenceSeries_get, _pyctp.CSgitFtdcTradingNoticeField_SequenceSeries_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcTradingNoticeField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcTradingNoticeField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcTradingNoticeField_UserID_get, _pyctp.CSgitFtdcTradingNoticeField_UserID_set)
    __swig_setmethods__["SendTime"] = _pyctp.CSgitFtdcTradingNoticeField_SendTime_set
    __swig_getmethods__["SendTime"] = _pyctp.CSgitFtdcTradingNoticeField_SendTime_get
    if _newclass:
        SendTime = _swig_property(_pyctp.CSgitFtdcTradingNoticeField_SendTime_get, _pyctp.CSgitFtdcTradingNoticeField_SendTime_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CSgitFtdcTradingNoticeField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CSgitFtdcTradingNoticeField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CSgitFtdcTradingNoticeField_SequenceNo_get, _pyctp.CSgitFtdcTradingNoticeField_SequenceNo_set)
    __swig_setmethods__["FieldContent"] = _pyctp.CSgitFtdcTradingNoticeField_FieldContent_set
    __swig_getmethods__["FieldContent"] = _pyctp.CSgitFtdcTradingNoticeField_FieldContent_get
    if _newclass:
        FieldContent = _swig_property(_pyctp.CSgitFtdcTradingNoticeField_FieldContent_get, _pyctp.CSgitFtdcTradingNoticeField_FieldContent_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTradingNoticeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTradingNoticeField
    __del__ = lambda self: None
CSgitFtdcTradingNoticeField_swigregister = _pyctp.CSgitFtdcTradingNoticeField_swigregister
CSgitFtdcTradingNoticeField_swigregister(CSgitFtdcTradingNoticeField)

class CSgitFtdcQryTradingNoticeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryTradingNoticeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryTradingNoticeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryTradingNoticeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryTradingNoticeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryTradingNoticeField_BrokerID_get, _pyctp.CSgitFtdcQryTradingNoticeField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryTradingNoticeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryTradingNoticeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryTradingNoticeField_InvestorID_get, _pyctp.CSgitFtdcQryTradingNoticeField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryTradingNoticeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryTradingNoticeField
    __del__ = lambda self: None
CSgitFtdcQryTradingNoticeField_swigregister = _pyctp.CSgitFtdcQryTradingNoticeField_swigregister
CSgitFtdcQryTradingNoticeField_swigregister(CSgitFtdcQryTradingNoticeField)

class CSgitFtdcQryErrOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryErrOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryErrOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryErrOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryErrOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryErrOrderField_BrokerID_get, _pyctp.CSgitFtdcQryErrOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryErrOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryErrOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryErrOrderField_InvestorID_get, _pyctp.CSgitFtdcQryErrOrderField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryErrOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryErrOrderField
    __del__ = lambda self: None
CSgitFtdcQryErrOrderField_swigregister = _pyctp.CSgitFtdcQryErrOrderField_swigregister
CSgitFtdcQryErrOrderField_swigregister(CSgitFtdcQryErrOrderField)

class CSgitFtdcErrOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcErrOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcErrOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcErrOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcErrOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcErrOrderField_BrokerID_get, _pyctp.CSgitFtdcErrOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcErrOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcErrOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcErrOrderField_InvestorID_get, _pyctp.CSgitFtdcErrOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcErrOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcErrOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcErrOrderField_InstrumentID_get, _pyctp.CSgitFtdcErrOrderField_InstrumentID_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CSgitFtdcErrOrderField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CSgitFtdcErrOrderField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CSgitFtdcErrOrderField_OrderRef_get, _pyctp.CSgitFtdcErrOrderField_OrderRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcErrOrderField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcErrOrderField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcErrOrderField_UserID_get, _pyctp.CSgitFtdcErrOrderField_UserID_set)
    __swig_setmethods__["OrderPriceType"] = _pyctp.CSgitFtdcErrOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _pyctp.CSgitFtdcErrOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_pyctp.CSgitFtdcErrOrderField_OrderPriceType_get, _pyctp.CSgitFtdcErrOrderField_OrderPriceType_set)
    __swig_setmethods__["Direction"] = _pyctp.CSgitFtdcErrOrderField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CSgitFtdcErrOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CSgitFtdcErrOrderField_Direction_get, _pyctp.CSgitFtdcErrOrderField_Direction_set)
    __swig_setmethods__["CombOffsetFlag"] = _pyctp.CSgitFtdcErrOrderField_CombOffsetFlag_set
    __swig_getmethods__["CombOffsetFlag"] = _pyctp.CSgitFtdcErrOrderField_CombOffsetFlag_get
    if _newclass:
        CombOffsetFlag = _swig_property(_pyctp.CSgitFtdcErrOrderField_CombOffsetFlag_get, _pyctp.CSgitFtdcErrOrderField_CombOffsetFlag_set)
    __swig_setmethods__["CombHedgeFlag"] = _pyctp.CSgitFtdcErrOrderField_CombHedgeFlag_set
    __swig_getmethods__["CombHedgeFlag"] = _pyctp.CSgitFtdcErrOrderField_CombHedgeFlag_get
    if _newclass:
        CombHedgeFlag = _swig_property(_pyctp.CSgitFtdcErrOrderField_CombHedgeFlag_get, _pyctp.CSgitFtdcErrOrderField_CombHedgeFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CSgitFtdcErrOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CSgitFtdcErrOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CSgitFtdcErrOrderField_LimitPrice_get, _pyctp.CSgitFtdcErrOrderField_LimitPrice_set)
    __swig_setmethods__["VolumeTotalOriginal"] = _pyctp.CSgitFtdcErrOrderField_VolumeTotalOriginal_set
    __swig_getmethods__["VolumeTotalOriginal"] = _pyctp.CSgitFtdcErrOrderField_VolumeTotalOriginal_get
    if _newclass:
        VolumeTotalOriginal = _swig_property(_pyctp.CSgitFtdcErrOrderField_VolumeTotalOriginal_get, _pyctp.CSgitFtdcErrOrderField_VolumeTotalOriginal_set)
    __swig_setmethods__["TimeCondition"] = _pyctp.CSgitFtdcErrOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _pyctp.CSgitFtdcErrOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_pyctp.CSgitFtdcErrOrderField_TimeCondition_get, _pyctp.CSgitFtdcErrOrderField_TimeCondition_set)
    __swig_setmethods__["GTDDate"] = _pyctp.CSgitFtdcErrOrderField_GTDDate_set
    __swig_getmethods__["GTDDate"] = _pyctp.CSgitFtdcErrOrderField_GTDDate_get
    if _newclass:
        GTDDate = _swig_property(_pyctp.CSgitFtdcErrOrderField_GTDDate_get, _pyctp.CSgitFtdcErrOrderField_GTDDate_set)
    __swig_setmethods__["VolumeCondition"] = _pyctp.CSgitFtdcErrOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _pyctp.CSgitFtdcErrOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_pyctp.CSgitFtdcErrOrderField_VolumeCondition_get, _pyctp.CSgitFtdcErrOrderField_VolumeCondition_set)
    __swig_setmethods__["MinVolume"] = _pyctp.CSgitFtdcErrOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _pyctp.CSgitFtdcErrOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_pyctp.CSgitFtdcErrOrderField_MinVolume_get, _pyctp.CSgitFtdcErrOrderField_MinVolume_set)
    __swig_setmethods__["ContingentCondition"] = _pyctp.CSgitFtdcErrOrderField_ContingentCondition_set
    __swig_getmethods__["ContingentCondition"] = _pyctp.CSgitFtdcErrOrderField_ContingentCondition_get
    if _newclass:
        ContingentCondition = _swig_property(_pyctp.CSgitFtdcErrOrderField_ContingentCondition_get, _pyctp.CSgitFtdcErrOrderField_ContingentCondition_set)
    __swig_setmethods__["StopPrice"] = _pyctp.CSgitFtdcErrOrderField_StopPrice_set
    __swig_getmethods__["StopPrice"] = _pyctp.CSgitFtdcErrOrderField_StopPrice_get
    if _newclass:
        StopPrice = _swig_property(_pyctp.CSgitFtdcErrOrderField_StopPrice_get, _pyctp.CSgitFtdcErrOrderField_StopPrice_set)
    __swig_setmethods__["ForceCloseReason"] = _pyctp.CSgitFtdcErrOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _pyctp.CSgitFtdcErrOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_pyctp.CSgitFtdcErrOrderField_ForceCloseReason_get, _pyctp.CSgitFtdcErrOrderField_ForceCloseReason_set)
    __swig_setmethods__["IsAutoSuspend"] = _pyctp.CSgitFtdcErrOrderField_IsAutoSuspend_set
    __swig_getmethods__["IsAutoSuspend"] = _pyctp.CSgitFtdcErrOrderField_IsAutoSuspend_get
    if _newclass:
        IsAutoSuspend = _swig_property(_pyctp.CSgitFtdcErrOrderField_IsAutoSuspend_get, _pyctp.CSgitFtdcErrOrderField_IsAutoSuspend_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CSgitFtdcErrOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CSgitFtdcErrOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CSgitFtdcErrOrderField_BusinessUnit_get, _pyctp.CSgitFtdcErrOrderField_BusinessUnit_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcErrOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcErrOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcErrOrderField_RequestID_get, _pyctp.CSgitFtdcErrOrderField_RequestID_set)
    __swig_setmethods__["UserForceClose"] = _pyctp.CSgitFtdcErrOrderField_UserForceClose_set
    __swig_getmethods__["UserForceClose"] = _pyctp.CSgitFtdcErrOrderField_UserForceClose_get
    if _newclass:
        UserForceClose = _swig_property(_pyctp.CSgitFtdcErrOrderField_UserForceClose_get, _pyctp.CSgitFtdcErrOrderField_UserForceClose_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcErrOrderField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcErrOrderField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcErrOrderField_ErrorID_get, _pyctp.CSgitFtdcErrOrderField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcErrOrderField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcErrOrderField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcErrOrderField_ErrorMsg_get, _pyctp.CSgitFtdcErrOrderField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcErrOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcErrOrderField
    __del__ = lambda self: None
CSgitFtdcErrOrderField_swigregister = _pyctp.CSgitFtdcErrOrderField_swigregister
CSgitFtdcErrOrderField_swigregister(CSgitFtdcErrOrderField)

class CSgitFtdcErrorConditionalOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcErrorConditionalOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcErrorConditionalOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_BrokerID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_InvestorID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_InstrumentID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_InstrumentID_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CSgitFtdcErrorConditionalOrderField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CSgitFtdcErrorConditionalOrderField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_OrderRef_get, _pyctp.CSgitFtdcErrorConditionalOrderField_OrderRef_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_UserID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_UserID_set)
    __swig_setmethods__["OrderPriceType"] = _pyctp.CSgitFtdcErrorConditionalOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _pyctp.CSgitFtdcErrorConditionalOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_OrderPriceType_get, _pyctp.CSgitFtdcErrorConditionalOrderField_OrderPriceType_set)
    __swig_setmethods__["Direction"] = _pyctp.CSgitFtdcErrorConditionalOrderField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CSgitFtdcErrorConditionalOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_Direction_get, _pyctp.CSgitFtdcErrorConditionalOrderField_Direction_set)
    __swig_setmethods__["CombOffsetFlag"] = _pyctp.CSgitFtdcErrorConditionalOrderField_CombOffsetFlag_set
    __swig_getmethods__["CombOffsetFlag"] = _pyctp.CSgitFtdcErrorConditionalOrderField_CombOffsetFlag_get
    if _newclass:
        CombOffsetFlag = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_CombOffsetFlag_get, _pyctp.CSgitFtdcErrorConditionalOrderField_CombOffsetFlag_set)
    __swig_setmethods__["CombHedgeFlag"] = _pyctp.CSgitFtdcErrorConditionalOrderField_CombHedgeFlag_set
    __swig_getmethods__["CombHedgeFlag"] = _pyctp.CSgitFtdcErrorConditionalOrderField_CombHedgeFlag_get
    if _newclass:
        CombHedgeFlag = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_CombHedgeFlag_get, _pyctp.CSgitFtdcErrorConditionalOrderField_CombHedgeFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CSgitFtdcErrorConditionalOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CSgitFtdcErrorConditionalOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_LimitPrice_get, _pyctp.CSgitFtdcErrorConditionalOrderField_LimitPrice_set)
    __swig_setmethods__["VolumeTotalOriginal"] = _pyctp.CSgitFtdcErrorConditionalOrderField_VolumeTotalOriginal_set
    __swig_getmethods__["VolumeTotalOriginal"] = _pyctp.CSgitFtdcErrorConditionalOrderField_VolumeTotalOriginal_get
    if _newclass:
        VolumeTotalOriginal = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_VolumeTotalOriginal_get, _pyctp.CSgitFtdcErrorConditionalOrderField_VolumeTotalOriginal_set)
    __swig_setmethods__["TimeCondition"] = _pyctp.CSgitFtdcErrorConditionalOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _pyctp.CSgitFtdcErrorConditionalOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_TimeCondition_get, _pyctp.CSgitFtdcErrorConditionalOrderField_TimeCondition_set)
    __swig_setmethods__["GTDDate"] = _pyctp.CSgitFtdcErrorConditionalOrderField_GTDDate_set
    __swig_getmethods__["GTDDate"] = _pyctp.CSgitFtdcErrorConditionalOrderField_GTDDate_get
    if _newclass:
        GTDDate = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_GTDDate_get, _pyctp.CSgitFtdcErrorConditionalOrderField_GTDDate_set)
    __swig_setmethods__["VolumeCondition"] = _pyctp.CSgitFtdcErrorConditionalOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _pyctp.CSgitFtdcErrorConditionalOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_VolumeCondition_get, _pyctp.CSgitFtdcErrorConditionalOrderField_VolumeCondition_set)
    __swig_setmethods__["MinVolume"] = _pyctp.CSgitFtdcErrorConditionalOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _pyctp.CSgitFtdcErrorConditionalOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_MinVolume_get, _pyctp.CSgitFtdcErrorConditionalOrderField_MinVolume_set)
    __swig_setmethods__["ContingentCondition"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ContingentCondition_set
    __swig_getmethods__["ContingentCondition"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ContingentCondition_get
    if _newclass:
        ContingentCondition = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_ContingentCondition_get, _pyctp.CSgitFtdcErrorConditionalOrderField_ContingentCondition_set)
    __swig_setmethods__["StopPrice"] = _pyctp.CSgitFtdcErrorConditionalOrderField_StopPrice_set
    __swig_getmethods__["StopPrice"] = _pyctp.CSgitFtdcErrorConditionalOrderField_StopPrice_get
    if _newclass:
        StopPrice = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_StopPrice_get, _pyctp.CSgitFtdcErrorConditionalOrderField_StopPrice_set)
    __swig_setmethods__["ForceCloseReason"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_ForceCloseReason_get, _pyctp.CSgitFtdcErrorConditionalOrderField_ForceCloseReason_set)
    __swig_setmethods__["IsAutoSuspend"] = _pyctp.CSgitFtdcErrorConditionalOrderField_IsAutoSuspend_set
    __swig_getmethods__["IsAutoSuspend"] = _pyctp.CSgitFtdcErrorConditionalOrderField_IsAutoSuspend_get
    if _newclass:
        IsAutoSuspend = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_IsAutoSuspend_get, _pyctp.CSgitFtdcErrorConditionalOrderField_IsAutoSuspend_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CSgitFtdcErrorConditionalOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CSgitFtdcErrorConditionalOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_BusinessUnit_get, _pyctp.CSgitFtdcErrorConditionalOrderField_BusinessUnit_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_RequestID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_RequestID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_OrderLocalID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_OrderLocalID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_ExchangeID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_ParticipantID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_ClientID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_ClientID_set)
    __swig_setmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ExchangeInstID_set
    __swig_getmethods__["ExchangeInstID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ExchangeInstID_get
    if _newclass:
        ExchangeInstID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_ExchangeInstID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_ExchangeInstID_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_TraderID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_InstallID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_InstallID_set)
    __swig_setmethods__["OrderSubmitStatus"] = _pyctp.CSgitFtdcErrorConditionalOrderField_OrderSubmitStatus_set
    __swig_getmethods__["OrderSubmitStatus"] = _pyctp.CSgitFtdcErrorConditionalOrderField_OrderSubmitStatus_get
    if _newclass:
        OrderSubmitStatus = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_OrderSubmitStatus_get, _pyctp.CSgitFtdcErrorConditionalOrderField_OrderSubmitStatus_set)
    __swig_setmethods__["NotifySequence"] = _pyctp.CSgitFtdcErrorConditionalOrderField_NotifySequence_set
    __swig_getmethods__["NotifySequence"] = _pyctp.CSgitFtdcErrorConditionalOrderField_NotifySequence_get
    if _newclass:
        NotifySequence = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_NotifySequence_get, _pyctp.CSgitFtdcErrorConditionalOrderField_NotifySequence_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcErrorConditionalOrderField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcErrorConditionalOrderField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_TradingDay_get, _pyctp.CSgitFtdcErrorConditionalOrderField_TradingDay_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_SettlementID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_SettlementID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_OrderSysID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_OrderSysID_set)
    __swig_setmethods__["OrderSource"] = _pyctp.CSgitFtdcErrorConditionalOrderField_OrderSource_set
    __swig_getmethods__["OrderSource"] = _pyctp.CSgitFtdcErrorConditionalOrderField_OrderSource_get
    if _newclass:
        OrderSource = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_OrderSource_get, _pyctp.CSgitFtdcErrorConditionalOrderField_OrderSource_set)
    __swig_setmethods__["OrderStatus"] = _pyctp.CSgitFtdcErrorConditionalOrderField_OrderStatus_set
    __swig_getmethods__["OrderStatus"] = _pyctp.CSgitFtdcErrorConditionalOrderField_OrderStatus_get
    if _newclass:
        OrderStatus = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_OrderStatus_get, _pyctp.CSgitFtdcErrorConditionalOrderField_OrderStatus_set)
    __swig_setmethods__["OrderType"] = _pyctp.CSgitFtdcErrorConditionalOrderField_OrderType_set
    __swig_getmethods__["OrderType"] = _pyctp.CSgitFtdcErrorConditionalOrderField_OrderType_get
    if _newclass:
        OrderType = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_OrderType_get, _pyctp.CSgitFtdcErrorConditionalOrderField_OrderType_set)
    __swig_setmethods__["VolumeTraded"] = _pyctp.CSgitFtdcErrorConditionalOrderField_VolumeTraded_set
    __swig_getmethods__["VolumeTraded"] = _pyctp.CSgitFtdcErrorConditionalOrderField_VolumeTraded_get
    if _newclass:
        VolumeTraded = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_VolumeTraded_get, _pyctp.CSgitFtdcErrorConditionalOrderField_VolumeTraded_set)
    __swig_setmethods__["VolumeTotal"] = _pyctp.CSgitFtdcErrorConditionalOrderField_VolumeTotal_set
    __swig_getmethods__["VolumeTotal"] = _pyctp.CSgitFtdcErrorConditionalOrderField_VolumeTotal_get
    if _newclass:
        VolumeTotal = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_VolumeTotal_get, _pyctp.CSgitFtdcErrorConditionalOrderField_VolumeTotal_set)
    __swig_setmethods__["InsertDate"] = _pyctp.CSgitFtdcErrorConditionalOrderField_InsertDate_set
    __swig_getmethods__["InsertDate"] = _pyctp.CSgitFtdcErrorConditionalOrderField_InsertDate_get
    if _newclass:
        InsertDate = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_InsertDate_get, _pyctp.CSgitFtdcErrorConditionalOrderField_InsertDate_set)
    __swig_setmethods__["InsertTime"] = _pyctp.CSgitFtdcErrorConditionalOrderField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _pyctp.CSgitFtdcErrorConditionalOrderField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_InsertTime_get, _pyctp.CSgitFtdcErrorConditionalOrderField_InsertTime_set)
    __swig_setmethods__["ActiveTime"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ActiveTime_set
    __swig_getmethods__["ActiveTime"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ActiveTime_get
    if _newclass:
        ActiveTime = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_ActiveTime_get, _pyctp.CSgitFtdcErrorConditionalOrderField_ActiveTime_set)
    __swig_setmethods__["SuspendTime"] = _pyctp.CSgitFtdcErrorConditionalOrderField_SuspendTime_set
    __swig_getmethods__["SuspendTime"] = _pyctp.CSgitFtdcErrorConditionalOrderField_SuspendTime_get
    if _newclass:
        SuspendTime = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_SuspendTime_get, _pyctp.CSgitFtdcErrorConditionalOrderField_SuspendTime_set)
    __swig_setmethods__["UpdateTime"] = _pyctp.CSgitFtdcErrorConditionalOrderField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _pyctp.CSgitFtdcErrorConditionalOrderField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_UpdateTime_get, _pyctp.CSgitFtdcErrorConditionalOrderField_UpdateTime_set)
    __swig_setmethods__["CancelTime"] = _pyctp.CSgitFtdcErrorConditionalOrderField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _pyctp.CSgitFtdcErrorConditionalOrderField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_CancelTime_get, _pyctp.CSgitFtdcErrorConditionalOrderField_CancelTime_set)
    __swig_setmethods__["ActiveTraderID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ActiveTraderID_set
    __swig_getmethods__["ActiveTraderID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ActiveTraderID_get
    if _newclass:
        ActiveTraderID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_ActiveTraderID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_ActiveTraderID_set)
    __swig_setmethods__["ClearingPartID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ClearingPartID_set
    __swig_getmethods__["ClearingPartID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ClearingPartID_get
    if _newclass:
        ClearingPartID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_ClearingPartID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_ClearingPartID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CSgitFtdcErrorConditionalOrderField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CSgitFtdcErrorConditionalOrderField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_SequenceNo_get, _pyctp.CSgitFtdcErrorConditionalOrderField_SequenceNo_set)
    __swig_setmethods__["FrontID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_FrontID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_SessionID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_SessionID_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CSgitFtdcErrorConditionalOrderField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CSgitFtdcErrorConditionalOrderField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_UserProductInfo_get, _pyctp.CSgitFtdcErrorConditionalOrderField_UserProductInfo_set)
    __swig_setmethods__["StatusMsg"] = _pyctp.CSgitFtdcErrorConditionalOrderField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _pyctp.CSgitFtdcErrorConditionalOrderField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_StatusMsg_get, _pyctp.CSgitFtdcErrorConditionalOrderField_StatusMsg_set)
    __swig_setmethods__["UserForceClose"] = _pyctp.CSgitFtdcErrorConditionalOrderField_UserForceClose_set
    __swig_getmethods__["UserForceClose"] = _pyctp.CSgitFtdcErrorConditionalOrderField_UserForceClose_get
    if _newclass:
        UserForceClose = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_UserForceClose_get, _pyctp.CSgitFtdcErrorConditionalOrderField_UserForceClose_set)
    __swig_setmethods__["ActiveUserID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ActiveUserID_set
    __swig_getmethods__["ActiveUserID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ActiveUserID_get
    if _newclass:
        ActiveUserID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_ActiveUserID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_ActiveUserID_set)
    __swig_setmethods__["BrokerOrderSeq"] = _pyctp.CSgitFtdcErrorConditionalOrderField_BrokerOrderSeq_set
    __swig_getmethods__["BrokerOrderSeq"] = _pyctp.CSgitFtdcErrorConditionalOrderField_BrokerOrderSeq_get
    if _newclass:
        BrokerOrderSeq = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_BrokerOrderSeq_get, _pyctp.CSgitFtdcErrorConditionalOrderField_BrokerOrderSeq_set)
    __swig_setmethods__["RelativeOrderSysID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_RelativeOrderSysID_set
    __swig_getmethods__["RelativeOrderSysID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_RelativeOrderSysID_get
    if _newclass:
        RelativeOrderSysID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_RelativeOrderSysID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_RelativeOrderSysID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_ErrorID_get, _pyctp.CSgitFtdcErrorConditionalOrderField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcErrorConditionalOrderField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcErrorConditionalOrderField_ErrorMsg_get, _pyctp.CSgitFtdcErrorConditionalOrderField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcErrorConditionalOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcErrorConditionalOrderField
    __del__ = lambda self: None
CSgitFtdcErrorConditionalOrderField_swigregister = _pyctp.CSgitFtdcErrorConditionalOrderField_swigregister
CSgitFtdcErrorConditionalOrderField_swigregister(CSgitFtdcErrorConditionalOrderField)

class CSgitFtdcQryErrOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryErrOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryErrOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryErrOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryErrOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryErrOrderActionField_BrokerID_get, _pyctp.CSgitFtdcQryErrOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryErrOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryErrOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryErrOrderActionField_InvestorID_get, _pyctp.CSgitFtdcQryErrOrderActionField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryErrOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryErrOrderActionField
    __del__ = lambda self: None
CSgitFtdcQryErrOrderActionField_swigregister = _pyctp.CSgitFtdcQryErrOrderActionField_swigregister
CSgitFtdcQryErrOrderActionField_swigregister(CSgitFtdcQryErrOrderActionField)

class CSgitFtdcErrOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcErrOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcErrOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcErrOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcErrOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_BrokerID_get, _pyctp.CSgitFtdcErrOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcErrOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcErrOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_InvestorID_get, _pyctp.CSgitFtdcErrOrderActionField_InvestorID_set)
    __swig_setmethods__["OrderActionRef"] = _pyctp.CSgitFtdcErrOrderActionField_OrderActionRef_set
    __swig_getmethods__["OrderActionRef"] = _pyctp.CSgitFtdcErrOrderActionField_OrderActionRef_get
    if _newclass:
        OrderActionRef = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_OrderActionRef_get, _pyctp.CSgitFtdcErrOrderActionField_OrderActionRef_set)
    __swig_setmethods__["OrderRef"] = _pyctp.CSgitFtdcErrOrderActionField_OrderRef_set
    __swig_getmethods__["OrderRef"] = _pyctp.CSgitFtdcErrOrderActionField_OrderRef_get
    if _newclass:
        OrderRef = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_OrderRef_get, _pyctp.CSgitFtdcErrOrderActionField_OrderRef_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcErrOrderActionField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcErrOrderActionField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_RequestID_get, _pyctp.CSgitFtdcErrOrderActionField_RequestID_set)
    __swig_setmethods__["FrontID"] = _pyctp.CSgitFtdcErrOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CSgitFtdcErrOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_FrontID_get, _pyctp.CSgitFtdcErrOrderActionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcErrOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcErrOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_SessionID_get, _pyctp.CSgitFtdcErrOrderActionField_SessionID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcErrOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcErrOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_ExchangeID_get, _pyctp.CSgitFtdcErrOrderActionField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CSgitFtdcErrOrderActionField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CSgitFtdcErrOrderActionField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_OrderSysID_get, _pyctp.CSgitFtdcErrOrderActionField_OrderSysID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CSgitFtdcErrOrderActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CSgitFtdcErrOrderActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_ActionFlag_get, _pyctp.CSgitFtdcErrOrderActionField_ActionFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CSgitFtdcErrOrderActionField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CSgitFtdcErrOrderActionField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_LimitPrice_get, _pyctp.CSgitFtdcErrOrderActionField_LimitPrice_set)
    __swig_setmethods__["VolumeChange"] = _pyctp.CSgitFtdcErrOrderActionField_VolumeChange_set
    __swig_getmethods__["VolumeChange"] = _pyctp.CSgitFtdcErrOrderActionField_VolumeChange_get
    if _newclass:
        VolumeChange = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_VolumeChange_get, _pyctp.CSgitFtdcErrOrderActionField_VolumeChange_set)
    __swig_setmethods__["ActionDate"] = _pyctp.CSgitFtdcErrOrderActionField_ActionDate_set
    __swig_getmethods__["ActionDate"] = _pyctp.CSgitFtdcErrOrderActionField_ActionDate_get
    if _newclass:
        ActionDate = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_ActionDate_get, _pyctp.CSgitFtdcErrOrderActionField_ActionDate_set)
    __swig_setmethods__["ActionTime"] = _pyctp.CSgitFtdcErrOrderActionField_ActionTime_set
    __swig_getmethods__["ActionTime"] = _pyctp.CSgitFtdcErrOrderActionField_ActionTime_get
    if _newclass:
        ActionTime = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_ActionTime_get, _pyctp.CSgitFtdcErrOrderActionField_ActionTime_set)
    __swig_setmethods__["TraderID"] = _pyctp.CSgitFtdcErrOrderActionField_TraderID_set
    __swig_getmethods__["TraderID"] = _pyctp.CSgitFtdcErrOrderActionField_TraderID_get
    if _newclass:
        TraderID = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_TraderID_get, _pyctp.CSgitFtdcErrOrderActionField_TraderID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcErrOrderActionField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcErrOrderActionField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_InstallID_get, _pyctp.CSgitFtdcErrOrderActionField_InstallID_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CSgitFtdcErrOrderActionField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CSgitFtdcErrOrderActionField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_OrderLocalID_get, _pyctp.CSgitFtdcErrOrderActionField_OrderLocalID_set)
    __swig_setmethods__["ActionLocalID"] = _pyctp.CSgitFtdcErrOrderActionField_ActionLocalID_set
    __swig_getmethods__["ActionLocalID"] = _pyctp.CSgitFtdcErrOrderActionField_ActionLocalID_get
    if _newclass:
        ActionLocalID = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_ActionLocalID_get, _pyctp.CSgitFtdcErrOrderActionField_ActionLocalID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcErrOrderActionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcErrOrderActionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_ParticipantID_get, _pyctp.CSgitFtdcErrOrderActionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CSgitFtdcErrOrderActionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CSgitFtdcErrOrderActionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_ClientID_get, _pyctp.CSgitFtdcErrOrderActionField_ClientID_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CSgitFtdcErrOrderActionField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CSgitFtdcErrOrderActionField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_BusinessUnit_get, _pyctp.CSgitFtdcErrOrderActionField_BusinessUnit_set)
    __swig_setmethods__["OrderActionStatus"] = _pyctp.CSgitFtdcErrOrderActionField_OrderActionStatus_set
    __swig_getmethods__["OrderActionStatus"] = _pyctp.CSgitFtdcErrOrderActionField_OrderActionStatus_get
    if _newclass:
        OrderActionStatus = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_OrderActionStatus_get, _pyctp.CSgitFtdcErrOrderActionField_OrderActionStatus_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcErrOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcErrOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_UserID_get, _pyctp.CSgitFtdcErrOrderActionField_UserID_set)
    __swig_setmethods__["StatusMsg"] = _pyctp.CSgitFtdcErrOrderActionField_StatusMsg_set
    __swig_getmethods__["StatusMsg"] = _pyctp.CSgitFtdcErrOrderActionField_StatusMsg_get
    if _newclass:
        StatusMsg = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_StatusMsg_get, _pyctp.CSgitFtdcErrOrderActionField_StatusMsg_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcErrOrderActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcErrOrderActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_InstrumentID_get, _pyctp.CSgitFtdcErrOrderActionField_InstrumentID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcErrOrderActionField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcErrOrderActionField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_ErrorID_get, _pyctp.CSgitFtdcErrOrderActionField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcErrOrderActionField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcErrOrderActionField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcErrOrderActionField_ErrorMsg_get, _pyctp.CSgitFtdcErrOrderActionField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcErrOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcErrOrderActionField
    __del__ = lambda self: None
CSgitFtdcErrOrderActionField_swigregister = _pyctp.CSgitFtdcErrOrderActionField_swigregister
CSgitFtdcErrOrderActionField_swigregister(CSgitFtdcErrOrderActionField)

class CSgitFtdcQryExchangeSequenceField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryExchangeSequenceField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryExchangeSequenceField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryExchangeSequenceField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryExchangeSequenceField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryExchangeSequenceField_ExchangeID_get, _pyctp.CSgitFtdcQryExchangeSequenceField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryExchangeSequenceField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryExchangeSequenceField
    __del__ = lambda self: None
CSgitFtdcQryExchangeSequenceField_swigregister = _pyctp.CSgitFtdcQryExchangeSequenceField_swigregister
CSgitFtdcQryExchangeSequenceField_swigregister(CSgitFtdcQryExchangeSequenceField)

class CSgitFtdcExchangeSequenceField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcExchangeSequenceField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcExchangeSequenceField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcExchangeSequenceField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcExchangeSequenceField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcExchangeSequenceField_ExchangeID_get, _pyctp.CSgitFtdcExchangeSequenceField_ExchangeID_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CSgitFtdcExchangeSequenceField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CSgitFtdcExchangeSequenceField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CSgitFtdcExchangeSequenceField_SequenceNo_get, _pyctp.CSgitFtdcExchangeSequenceField_SequenceNo_set)
    __swig_setmethods__["MarketStatus"] = _pyctp.CSgitFtdcExchangeSequenceField_MarketStatus_set
    __swig_getmethods__["MarketStatus"] = _pyctp.CSgitFtdcExchangeSequenceField_MarketStatus_get
    if _newclass:
        MarketStatus = _swig_property(_pyctp.CSgitFtdcExchangeSequenceField_MarketStatus_get, _pyctp.CSgitFtdcExchangeSequenceField_MarketStatus_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcExchangeSequenceField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcExchangeSequenceField
    __del__ = lambda self: None
CSgitFtdcExchangeSequenceField_swigregister = _pyctp.CSgitFtdcExchangeSequenceField_swigregister
CSgitFtdcExchangeSequenceField_swigregister(CSgitFtdcExchangeSequenceField)

class CSgitFtdcQueryMaxOrderVolumeWithPriceField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQueryMaxOrderVolumeWithPriceField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQueryMaxOrderVolumeWithPriceField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_BrokerID_get, _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_InvestorID_get, _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_InstrumentID_get, _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_InstrumentID_set)
    __swig_setmethods__["Direction"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_Direction_get, _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_Direction_set)
    __swig_setmethods__["OffsetFlag"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_OffsetFlag_get, _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_OffsetFlag_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_HedgeFlag_get, _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_HedgeFlag_set)
    __swig_setmethods__["MaxVolume"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_MaxVolume_set
    __swig_getmethods__["MaxVolume"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_MaxVolume_get
    if _newclass:
        MaxVolume = _swig_property(_pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_MaxVolume_get, _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_MaxVolume_set)
    __swig_setmethods__["Price"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_Price_set
    __swig_getmethods__["Price"] = _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_Price_get
    if _newclass:
        Price = _swig_property(_pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_Price_get, _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_Price_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQueryMaxOrderVolumeWithPriceField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQueryMaxOrderVolumeWithPriceField
    __del__ = lambda self: None
CSgitFtdcQueryMaxOrderVolumeWithPriceField_swigregister = _pyctp.CSgitFtdcQueryMaxOrderVolumeWithPriceField_swigregister
CSgitFtdcQueryMaxOrderVolumeWithPriceField_swigregister(CSgitFtdcQueryMaxOrderVolumeWithPriceField)

class CSgitFtdcQryBrokerTradingParamsField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryBrokerTradingParamsField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryBrokerTradingParamsField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryBrokerTradingParamsField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryBrokerTradingParamsField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryBrokerTradingParamsField_BrokerID_get, _pyctp.CSgitFtdcQryBrokerTradingParamsField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryBrokerTradingParamsField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryBrokerTradingParamsField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryBrokerTradingParamsField_InvestorID_get, _pyctp.CSgitFtdcQryBrokerTradingParamsField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryBrokerTradingParamsField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryBrokerTradingParamsField
    __del__ = lambda self: None
CSgitFtdcQryBrokerTradingParamsField_swigregister = _pyctp.CSgitFtdcQryBrokerTradingParamsField_swigregister
CSgitFtdcQryBrokerTradingParamsField_swigregister(CSgitFtdcQryBrokerTradingParamsField)

class CSgitFtdcBrokerTradingParamsField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcBrokerTradingParamsField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcBrokerTradingParamsField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerTradingParamsField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerTradingParamsField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcBrokerTradingParamsField_BrokerID_get, _pyctp.CSgitFtdcBrokerTradingParamsField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcBrokerTradingParamsField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcBrokerTradingParamsField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcBrokerTradingParamsField_InvestorID_get, _pyctp.CSgitFtdcBrokerTradingParamsField_InvestorID_set)
    __swig_setmethods__["MarginPriceType"] = _pyctp.CSgitFtdcBrokerTradingParamsField_MarginPriceType_set
    __swig_getmethods__["MarginPriceType"] = _pyctp.CSgitFtdcBrokerTradingParamsField_MarginPriceType_get
    if _newclass:
        MarginPriceType = _swig_property(_pyctp.CSgitFtdcBrokerTradingParamsField_MarginPriceType_get, _pyctp.CSgitFtdcBrokerTradingParamsField_MarginPriceType_set)
    __swig_setmethods__["Algorithm"] = _pyctp.CSgitFtdcBrokerTradingParamsField_Algorithm_set
    __swig_getmethods__["Algorithm"] = _pyctp.CSgitFtdcBrokerTradingParamsField_Algorithm_get
    if _newclass:
        Algorithm = _swig_property(_pyctp.CSgitFtdcBrokerTradingParamsField_Algorithm_get, _pyctp.CSgitFtdcBrokerTradingParamsField_Algorithm_set)
    __swig_setmethods__["AvailIncludeCloseProfit"] = _pyctp.CSgitFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_set
    __swig_getmethods__["AvailIncludeCloseProfit"] = _pyctp.CSgitFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_get
    if _newclass:
        AvailIncludeCloseProfit = _swig_property(_pyctp.CSgitFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_get, _pyctp.CSgitFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcBrokerTradingParamsField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcBrokerTradingParamsField
    __del__ = lambda self: None
CSgitFtdcBrokerTradingParamsField_swigregister = _pyctp.CSgitFtdcBrokerTradingParamsField_swigregister
CSgitFtdcBrokerTradingParamsField_swigregister(CSgitFtdcBrokerTradingParamsField)

class CSgitFtdcQryBrokerTradingAlgosField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryBrokerTradingAlgosField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryBrokerTradingAlgosField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryBrokerTradingAlgosField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryBrokerTradingAlgosField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryBrokerTradingAlgosField_BrokerID_get, _pyctp.CSgitFtdcQryBrokerTradingAlgosField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryBrokerTradingAlgosField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryBrokerTradingAlgosField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryBrokerTradingAlgosField_ExchangeID_get, _pyctp.CSgitFtdcQryBrokerTradingAlgosField_ExchangeID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryBrokerTradingAlgosField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryBrokerTradingAlgosField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcQryBrokerTradingAlgosField_InstrumentID_get, _pyctp.CSgitFtdcQryBrokerTradingAlgosField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryBrokerTradingAlgosField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryBrokerTradingAlgosField
    __del__ = lambda self: None
CSgitFtdcQryBrokerTradingAlgosField_swigregister = _pyctp.CSgitFtdcQryBrokerTradingAlgosField_swigregister
CSgitFtdcQryBrokerTradingAlgosField_swigregister(CSgitFtdcQryBrokerTradingAlgosField)

class CSgitFtdcBrokerTradingAlgosField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcBrokerTradingAlgosField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcBrokerTradingAlgosField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerTradingAlgosField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerTradingAlgosField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcBrokerTradingAlgosField_BrokerID_get, _pyctp.CSgitFtdcBrokerTradingAlgosField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcBrokerTradingAlgosField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcBrokerTradingAlgosField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcBrokerTradingAlgosField_ExchangeID_get, _pyctp.CSgitFtdcBrokerTradingAlgosField_ExchangeID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcBrokerTradingAlgosField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcBrokerTradingAlgosField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcBrokerTradingAlgosField_InstrumentID_get, _pyctp.CSgitFtdcBrokerTradingAlgosField_InstrumentID_set)
    __swig_setmethods__["HandlePositionAlgoID"] = _pyctp.CSgitFtdcBrokerTradingAlgosField_HandlePositionAlgoID_set
    __swig_getmethods__["HandlePositionAlgoID"] = _pyctp.CSgitFtdcBrokerTradingAlgosField_HandlePositionAlgoID_get
    if _newclass:
        HandlePositionAlgoID = _swig_property(_pyctp.CSgitFtdcBrokerTradingAlgosField_HandlePositionAlgoID_get, _pyctp.CSgitFtdcBrokerTradingAlgosField_HandlePositionAlgoID_set)
    __swig_setmethods__["FindMarginRateAlgoID"] = _pyctp.CSgitFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_set
    __swig_getmethods__["FindMarginRateAlgoID"] = _pyctp.CSgitFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_get
    if _newclass:
        FindMarginRateAlgoID = _swig_property(_pyctp.CSgitFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_get, _pyctp.CSgitFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_set)
    __swig_setmethods__["HandleTradingAccountAlgoID"] = _pyctp.CSgitFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_set
    __swig_getmethods__["HandleTradingAccountAlgoID"] = _pyctp.CSgitFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_get
    if _newclass:
        HandleTradingAccountAlgoID = _swig_property(_pyctp.CSgitFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_get, _pyctp.CSgitFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcBrokerTradingAlgosField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcBrokerTradingAlgosField
    __del__ = lambda self: None
CSgitFtdcBrokerTradingAlgosField_swigregister = _pyctp.CSgitFtdcBrokerTradingAlgosField_swigregister
CSgitFtdcBrokerTradingAlgosField_swigregister(CSgitFtdcBrokerTradingAlgosField)

class CSgitFtdcQueryBrokerDepositField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQueryBrokerDepositField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQueryBrokerDepositField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQueryBrokerDepositField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQueryBrokerDepositField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQueryBrokerDepositField_BrokerID_get, _pyctp.CSgitFtdcQueryBrokerDepositField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQueryBrokerDepositField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQueryBrokerDepositField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQueryBrokerDepositField_ExchangeID_get, _pyctp.CSgitFtdcQueryBrokerDepositField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQueryBrokerDepositField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQueryBrokerDepositField
    __del__ = lambda self: None
CSgitFtdcQueryBrokerDepositField_swigregister = _pyctp.CSgitFtdcQueryBrokerDepositField_swigregister
CSgitFtdcQueryBrokerDepositField_swigregister(CSgitFtdcQueryBrokerDepositField)

class CSgitFtdcBrokerDepositField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcBrokerDepositField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcBrokerDepositField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcBrokerDepositField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcBrokerDepositField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcBrokerDepositField_TradingDay_get, _pyctp.CSgitFtdcBrokerDepositField_TradingDay_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerDepositField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerDepositField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcBrokerDepositField_BrokerID_get, _pyctp.CSgitFtdcBrokerDepositField_BrokerID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcBrokerDepositField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcBrokerDepositField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcBrokerDepositField_ParticipantID_get, _pyctp.CSgitFtdcBrokerDepositField_ParticipantID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcBrokerDepositField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcBrokerDepositField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcBrokerDepositField_ExchangeID_get, _pyctp.CSgitFtdcBrokerDepositField_ExchangeID_set)
    __swig_setmethods__["PreBalance"] = _pyctp.CSgitFtdcBrokerDepositField_PreBalance_set
    __swig_getmethods__["PreBalance"] = _pyctp.CSgitFtdcBrokerDepositField_PreBalance_get
    if _newclass:
        PreBalance = _swig_property(_pyctp.CSgitFtdcBrokerDepositField_PreBalance_get, _pyctp.CSgitFtdcBrokerDepositField_PreBalance_set)
    __swig_setmethods__["CurrMargin"] = _pyctp.CSgitFtdcBrokerDepositField_CurrMargin_set
    __swig_getmethods__["CurrMargin"] = _pyctp.CSgitFtdcBrokerDepositField_CurrMargin_get
    if _newclass:
        CurrMargin = _swig_property(_pyctp.CSgitFtdcBrokerDepositField_CurrMargin_get, _pyctp.CSgitFtdcBrokerDepositField_CurrMargin_set)
    __swig_setmethods__["CloseProfit"] = _pyctp.CSgitFtdcBrokerDepositField_CloseProfit_set
    __swig_getmethods__["CloseProfit"] = _pyctp.CSgitFtdcBrokerDepositField_CloseProfit_get
    if _newclass:
        CloseProfit = _swig_property(_pyctp.CSgitFtdcBrokerDepositField_CloseProfit_get, _pyctp.CSgitFtdcBrokerDepositField_CloseProfit_set)
    __swig_setmethods__["Balance"] = _pyctp.CSgitFtdcBrokerDepositField_Balance_set
    __swig_getmethods__["Balance"] = _pyctp.CSgitFtdcBrokerDepositField_Balance_get
    if _newclass:
        Balance = _swig_property(_pyctp.CSgitFtdcBrokerDepositField_Balance_get, _pyctp.CSgitFtdcBrokerDepositField_Balance_set)
    __swig_setmethods__["Deposit"] = _pyctp.CSgitFtdcBrokerDepositField_Deposit_set
    __swig_getmethods__["Deposit"] = _pyctp.CSgitFtdcBrokerDepositField_Deposit_get
    if _newclass:
        Deposit = _swig_property(_pyctp.CSgitFtdcBrokerDepositField_Deposit_get, _pyctp.CSgitFtdcBrokerDepositField_Deposit_set)
    __swig_setmethods__["Withdraw"] = _pyctp.CSgitFtdcBrokerDepositField_Withdraw_set
    __swig_getmethods__["Withdraw"] = _pyctp.CSgitFtdcBrokerDepositField_Withdraw_get
    if _newclass:
        Withdraw = _swig_property(_pyctp.CSgitFtdcBrokerDepositField_Withdraw_get, _pyctp.CSgitFtdcBrokerDepositField_Withdraw_set)
    __swig_setmethods__["Available"] = _pyctp.CSgitFtdcBrokerDepositField_Available_set
    __swig_getmethods__["Available"] = _pyctp.CSgitFtdcBrokerDepositField_Available_get
    if _newclass:
        Available = _swig_property(_pyctp.CSgitFtdcBrokerDepositField_Available_get, _pyctp.CSgitFtdcBrokerDepositField_Available_set)
    __swig_setmethods__["Reserve"] = _pyctp.CSgitFtdcBrokerDepositField_Reserve_set
    __swig_getmethods__["Reserve"] = _pyctp.CSgitFtdcBrokerDepositField_Reserve_get
    if _newclass:
        Reserve = _swig_property(_pyctp.CSgitFtdcBrokerDepositField_Reserve_get, _pyctp.CSgitFtdcBrokerDepositField_Reserve_set)
    __swig_setmethods__["FrozenMargin"] = _pyctp.CSgitFtdcBrokerDepositField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _pyctp.CSgitFtdcBrokerDepositField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_pyctp.CSgitFtdcBrokerDepositField_FrozenMargin_get, _pyctp.CSgitFtdcBrokerDepositField_FrozenMargin_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcBrokerDepositField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcBrokerDepositField
    __del__ = lambda self: None
CSgitFtdcBrokerDepositField_swigregister = _pyctp.CSgitFtdcBrokerDepositField_swigregister
CSgitFtdcBrokerDepositField_swigregister(CSgitFtdcBrokerDepositField)

class CSgitFtdcQryCFMMCBrokerKeyField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryCFMMCBrokerKeyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryCFMMCBrokerKeyField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryCFMMCBrokerKeyField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryCFMMCBrokerKeyField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryCFMMCBrokerKeyField_BrokerID_get, _pyctp.CSgitFtdcQryCFMMCBrokerKeyField_BrokerID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryCFMMCBrokerKeyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryCFMMCBrokerKeyField
    __del__ = lambda self: None
CSgitFtdcQryCFMMCBrokerKeyField_swigregister = _pyctp.CSgitFtdcQryCFMMCBrokerKeyField_swigregister
CSgitFtdcQryCFMMCBrokerKeyField_swigregister(CSgitFtdcQryCFMMCBrokerKeyField)

class CSgitFtdcCFMMCBrokerKeyField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcCFMMCBrokerKeyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcCFMMCBrokerKeyField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcCFMMCBrokerKeyField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcCFMMCBrokerKeyField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcCFMMCBrokerKeyField_BrokerID_get, _pyctp.CSgitFtdcCFMMCBrokerKeyField_BrokerID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcCFMMCBrokerKeyField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcCFMMCBrokerKeyField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcCFMMCBrokerKeyField_ParticipantID_get, _pyctp.CSgitFtdcCFMMCBrokerKeyField_ParticipantID_set)
    __swig_setmethods__["CreateDate"] = _pyctp.CSgitFtdcCFMMCBrokerKeyField_CreateDate_set
    __swig_getmethods__["CreateDate"] = _pyctp.CSgitFtdcCFMMCBrokerKeyField_CreateDate_get
    if _newclass:
        CreateDate = _swig_property(_pyctp.CSgitFtdcCFMMCBrokerKeyField_CreateDate_get, _pyctp.CSgitFtdcCFMMCBrokerKeyField_CreateDate_set)
    __swig_setmethods__["CreateTime"] = _pyctp.CSgitFtdcCFMMCBrokerKeyField_CreateTime_set
    __swig_getmethods__["CreateTime"] = _pyctp.CSgitFtdcCFMMCBrokerKeyField_CreateTime_get
    if _newclass:
        CreateTime = _swig_property(_pyctp.CSgitFtdcCFMMCBrokerKeyField_CreateTime_get, _pyctp.CSgitFtdcCFMMCBrokerKeyField_CreateTime_set)
    __swig_setmethods__["KeyID"] = _pyctp.CSgitFtdcCFMMCBrokerKeyField_KeyID_set
    __swig_getmethods__["KeyID"] = _pyctp.CSgitFtdcCFMMCBrokerKeyField_KeyID_get
    if _newclass:
        KeyID = _swig_property(_pyctp.CSgitFtdcCFMMCBrokerKeyField_KeyID_get, _pyctp.CSgitFtdcCFMMCBrokerKeyField_KeyID_set)
    __swig_setmethods__["CurrentKey"] = _pyctp.CSgitFtdcCFMMCBrokerKeyField_CurrentKey_set
    __swig_getmethods__["CurrentKey"] = _pyctp.CSgitFtdcCFMMCBrokerKeyField_CurrentKey_get
    if _newclass:
        CurrentKey = _swig_property(_pyctp.CSgitFtdcCFMMCBrokerKeyField_CurrentKey_get, _pyctp.CSgitFtdcCFMMCBrokerKeyField_CurrentKey_set)
    __swig_setmethods__["KeyKind"] = _pyctp.CSgitFtdcCFMMCBrokerKeyField_KeyKind_set
    __swig_getmethods__["KeyKind"] = _pyctp.CSgitFtdcCFMMCBrokerKeyField_KeyKind_get
    if _newclass:
        KeyKind = _swig_property(_pyctp.CSgitFtdcCFMMCBrokerKeyField_KeyKind_get, _pyctp.CSgitFtdcCFMMCBrokerKeyField_KeyKind_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcCFMMCBrokerKeyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcCFMMCBrokerKeyField
    __del__ = lambda self: None
CSgitFtdcCFMMCBrokerKeyField_swigregister = _pyctp.CSgitFtdcCFMMCBrokerKeyField_swigregister
CSgitFtdcCFMMCBrokerKeyField_swigregister(CSgitFtdcCFMMCBrokerKeyField)

class CSgitFtdcCFMMCTradingAccountKeyField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcCFMMCTradingAccountKeyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcCFMMCTradingAccountKeyField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcCFMMCTradingAccountKeyField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcCFMMCTradingAccountKeyField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcCFMMCTradingAccountKeyField_BrokerID_get, _pyctp.CSgitFtdcCFMMCTradingAccountKeyField_BrokerID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CSgitFtdcCFMMCTradingAccountKeyField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CSgitFtdcCFMMCTradingAccountKeyField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CSgitFtdcCFMMCTradingAccountKeyField_ParticipantID_get, _pyctp.CSgitFtdcCFMMCTradingAccountKeyField_ParticipantID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcCFMMCTradingAccountKeyField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcCFMMCTradingAccountKeyField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcCFMMCTradingAccountKeyField_AccountID_get, _pyctp.CSgitFtdcCFMMCTradingAccountKeyField_AccountID_set)
    __swig_setmethods__["KeyID"] = _pyctp.CSgitFtdcCFMMCTradingAccountKeyField_KeyID_set
    __swig_getmethods__["KeyID"] = _pyctp.CSgitFtdcCFMMCTradingAccountKeyField_KeyID_get
    if _newclass:
        KeyID = _swig_property(_pyctp.CSgitFtdcCFMMCTradingAccountKeyField_KeyID_get, _pyctp.CSgitFtdcCFMMCTradingAccountKeyField_KeyID_set)
    __swig_setmethods__["CurrentKey"] = _pyctp.CSgitFtdcCFMMCTradingAccountKeyField_CurrentKey_set
    __swig_getmethods__["CurrentKey"] = _pyctp.CSgitFtdcCFMMCTradingAccountKeyField_CurrentKey_get
    if _newclass:
        CurrentKey = _swig_property(_pyctp.CSgitFtdcCFMMCTradingAccountKeyField_CurrentKey_get, _pyctp.CSgitFtdcCFMMCTradingAccountKeyField_CurrentKey_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcCFMMCTradingAccountKeyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcCFMMCTradingAccountKeyField
    __del__ = lambda self: None
CSgitFtdcCFMMCTradingAccountKeyField_swigregister = _pyctp.CSgitFtdcCFMMCTradingAccountKeyField_swigregister
CSgitFtdcCFMMCTradingAccountKeyField_swigregister(CSgitFtdcCFMMCTradingAccountKeyField)

class CSgitFtdcQryCFMMCTradingAccountKeyField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryCFMMCTradingAccountKeyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryCFMMCTradingAccountKeyField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryCFMMCTradingAccountKeyField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryCFMMCTradingAccountKeyField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryCFMMCTradingAccountKeyField_BrokerID_get, _pyctp.CSgitFtdcQryCFMMCTradingAccountKeyField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryCFMMCTradingAccountKeyField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryCFMMCTradingAccountKeyField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryCFMMCTradingAccountKeyField_InvestorID_get, _pyctp.CSgitFtdcQryCFMMCTradingAccountKeyField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryCFMMCTradingAccountKeyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryCFMMCTradingAccountKeyField
    __del__ = lambda self: None
CSgitFtdcQryCFMMCTradingAccountKeyField_swigregister = _pyctp.CSgitFtdcQryCFMMCTradingAccountKeyField_swigregister
CSgitFtdcQryCFMMCTradingAccountKeyField_swigregister(CSgitFtdcQryCFMMCTradingAccountKeyField)

class CSgitFtdcBrokerUserOTPParamField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcBrokerUserOTPParamField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcBrokerUserOTPParamField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerUserOTPParamField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerUserOTPParamField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcBrokerUserOTPParamField_BrokerID_get, _pyctp.CSgitFtdcBrokerUserOTPParamField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcBrokerUserOTPParamField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcBrokerUserOTPParamField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcBrokerUserOTPParamField_UserID_get, _pyctp.CSgitFtdcBrokerUserOTPParamField_UserID_set)
    __swig_setmethods__["OTPVendorsID"] = _pyctp.CSgitFtdcBrokerUserOTPParamField_OTPVendorsID_set
    __swig_getmethods__["OTPVendorsID"] = _pyctp.CSgitFtdcBrokerUserOTPParamField_OTPVendorsID_get
    if _newclass:
        OTPVendorsID = _swig_property(_pyctp.CSgitFtdcBrokerUserOTPParamField_OTPVendorsID_get, _pyctp.CSgitFtdcBrokerUserOTPParamField_OTPVendorsID_set)
    __swig_setmethods__["SerialNumber"] = _pyctp.CSgitFtdcBrokerUserOTPParamField_SerialNumber_set
    __swig_getmethods__["SerialNumber"] = _pyctp.CSgitFtdcBrokerUserOTPParamField_SerialNumber_get
    if _newclass:
        SerialNumber = _swig_property(_pyctp.CSgitFtdcBrokerUserOTPParamField_SerialNumber_get, _pyctp.CSgitFtdcBrokerUserOTPParamField_SerialNumber_set)
    __swig_setmethods__["AuthKey"] = _pyctp.CSgitFtdcBrokerUserOTPParamField_AuthKey_set
    __swig_getmethods__["AuthKey"] = _pyctp.CSgitFtdcBrokerUserOTPParamField_AuthKey_get
    if _newclass:
        AuthKey = _swig_property(_pyctp.CSgitFtdcBrokerUserOTPParamField_AuthKey_get, _pyctp.CSgitFtdcBrokerUserOTPParamField_AuthKey_set)
    __swig_setmethods__["LastDrift"] = _pyctp.CSgitFtdcBrokerUserOTPParamField_LastDrift_set
    __swig_getmethods__["LastDrift"] = _pyctp.CSgitFtdcBrokerUserOTPParamField_LastDrift_get
    if _newclass:
        LastDrift = _swig_property(_pyctp.CSgitFtdcBrokerUserOTPParamField_LastDrift_get, _pyctp.CSgitFtdcBrokerUserOTPParamField_LastDrift_set)
    __swig_setmethods__["LastSuccess"] = _pyctp.CSgitFtdcBrokerUserOTPParamField_LastSuccess_set
    __swig_getmethods__["LastSuccess"] = _pyctp.CSgitFtdcBrokerUserOTPParamField_LastSuccess_get
    if _newclass:
        LastSuccess = _swig_property(_pyctp.CSgitFtdcBrokerUserOTPParamField_LastSuccess_get, _pyctp.CSgitFtdcBrokerUserOTPParamField_LastSuccess_set)
    __swig_setmethods__["OTPType"] = _pyctp.CSgitFtdcBrokerUserOTPParamField_OTPType_set
    __swig_getmethods__["OTPType"] = _pyctp.CSgitFtdcBrokerUserOTPParamField_OTPType_get
    if _newclass:
        OTPType = _swig_property(_pyctp.CSgitFtdcBrokerUserOTPParamField_OTPType_get, _pyctp.CSgitFtdcBrokerUserOTPParamField_OTPType_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcBrokerUserOTPParamField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcBrokerUserOTPParamField
    __del__ = lambda self: None
CSgitFtdcBrokerUserOTPParamField_swigregister = _pyctp.CSgitFtdcBrokerUserOTPParamField_swigregister
CSgitFtdcBrokerUserOTPParamField_swigregister(CSgitFtdcBrokerUserOTPParamField)

class CSgitFtdcManualSyncBrokerUserOTPField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcManualSyncBrokerUserOTPField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcManualSyncBrokerUserOTPField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcManualSyncBrokerUserOTPField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcManualSyncBrokerUserOTPField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcManualSyncBrokerUserOTPField_BrokerID_get, _pyctp.CSgitFtdcManualSyncBrokerUserOTPField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcManualSyncBrokerUserOTPField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcManualSyncBrokerUserOTPField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcManualSyncBrokerUserOTPField_UserID_get, _pyctp.CSgitFtdcManualSyncBrokerUserOTPField_UserID_set)
    __swig_setmethods__["OTPType"] = _pyctp.CSgitFtdcManualSyncBrokerUserOTPField_OTPType_set
    __swig_getmethods__["OTPType"] = _pyctp.CSgitFtdcManualSyncBrokerUserOTPField_OTPType_get
    if _newclass:
        OTPType = _swig_property(_pyctp.CSgitFtdcManualSyncBrokerUserOTPField_OTPType_get, _pyctp.CSgitFtdcManualSyncBrokerUserOTPField_OTPType_set)
    __swig_setmethods__["FirstOTP"] = _pyctp.CSgitFtdcManualSyncBrokerUserOTPField_FirstOTP_set
    __swig_getmethods__["FirstOTP"] = _pyctp.CSgitFtdcManualSyncBrokerUserOTPField_FirstOTP_get
    if _newclass:
        FirstOTP = _swig_property(_pyctp.CSgitFtdcManualSyncBrokerUserOTPField_FirstOTP_get, _pyctp.CSgitFtdcManualSyncBrokerUserOTPField_FirstOTP_set)
    __swig_setmethods__["SecondOTP"] = _pyctp.CSgitFtdcManualSyncBrokerUserOTPField_SecondOTP_set
    __swig_getmethods__["SecondOTP"] = _pyctp.CSgitFtdcManualSyncBrokerUserOTPField_SecondOTP_get
    if _newclass:
        SecondOTP = _swig_property(_pyctp.CSgitFtdcManualSyncBrokerUserOTPField_SecondOTP_get, _pyctp.CSgitFtdcManualSyncBrokerUserOTPField_SecondOTP_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcManualSyncBrokerUserOTPField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcManualSyncBrokerUserOTPField
    __del__ = lambda self: None
CSgitFtdcManualSyncBrokerUserOTPField_swigregister = _pyctp.CSgitFtdcManualSyncBrokerUserOTPField_swigregister
CSgitFtdcManualSyncBrokerUserOTPField_swigregister(CSgitFtdcManualSyncBrokerUserOTPField)

class CSgitFtdcCommRateModelField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcCommRateModelField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcCommRateModelField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcCommRateModelField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcCommRateModelField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcCommRateModelField_BrokerID_get, _pyctp.CSgitFtdcCommRateModelField_BrokerID_set)
    __swig_setmethods__["CommModelID"] = _pyctp.CSgitFtdcCommRateModelField_CommModelID_set
    __swig_getmethods__["CommModelID"] = _pyctp.CSgitFtdcCommRateModelField_CommModelID_get
    if _newclass:
        CommModelID = _swig_property(_pyctp.CSgitFtdcCommRateModelField_CommModelID_get, _pyctp.CSgitFtdcCommRateModelField_CommModelID_set)
    __swig_setmethods__["CommModelName"] = _pyctp.CSgitFtdcCommRateModelField_CommModelName_set
    __swig_getmethods__["CommModelName"] = _pyctp.CSgitFtdcCommRateModelField_CommModelName_get
    if _newclass:
        CommModelName = _swig_property(_pyctp.CSgitFtdcCommRateModelField_CommModelName_get, _pyctp.CSgitFtdcCommRateModelField_CommModelName_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcCommRateModelField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcCommRateModelField
    __del__ = lambda self: None
CSgitFtdcCommRateModelField_swigregister = _pyctp.CSgitFtdcCommRateModelField_swigregister
CSgitFtdcCommRateModelField_swigregister(CSgitFtdcCommRateModelField)

class CSgitFtdcQryCommRateModelField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryCommRateModelField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryCommRateModelField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryCommRateModelField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryCommRateModelField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryCommRateModelField_BrokerID_get, _pyctp.CSgitFtdcQryCommRateModelField_BrokerID_set)
    __swig_setmethods__["CommModelID"] = _pyctp.CSgitFtdcQryCommRateModelField_CommModelID_set
    __swig_getmethods__["CommModelID"] = _pyctp.CSgitFtdcQryCommRateModelField_CommModelID_get
    if _newclass:
        CommModelID = _swig_property(_pyctp.CSgitFtdcQryCommRateModelField_CommModelID_get, _pyctp.CSgitFtdcQryCommRateModelField_CommModelID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryCommRateModelField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryCommRateModelField
    __del__ = lambda self: None
CSgitFtdcQryCommRateModelField_swigregister = _pyctp.CSgitFtdcQryCommRateModelField_swigregister
CSgitFtdcQryCommRateModelField_swigregister(CSgitFtdcQryCommRateModelField)

class CSgitFtdcEWarrantOffsetField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcEWarrantOffsetField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcEWarrantOffsetField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcEWarrantOffsetField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcEWarrantOffsetField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcEWarrantOffsetField_TradingDay_get, _pyctp.CSgitFtdcEWarrantOffsetField_TradingDay_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcEWarrantOffsetField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcEWarrantOffsetField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcEWarrantOffsetField_BrokerID_get, _pyctp.CSgitFtdcEWarrantOffsetField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcEWarrantOffsetField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcEWarrantOffsetField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcEWarrantOffsetField_InvestorID_get, _pyctp.CSgitFtdcEWarrantOffsetField_InvestorID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcEWarrantOffsetField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcEWarrantOffsetField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcEWarrantOffsetField_ExchangeID_get, _pyctp.CSgitFtdcEWarrantOffsetField_ExchangeID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcEWarrantOffsetField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcEWarrantOffsetField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcEWarrantOffsetField_InstrumentID_get, _pyctp.CSgitFtdcEWarrantOffsetField_InstrumentID_set)
    __swig_setmethods__["Direction"] = _pyctp.CSgitFtdcEWarrantOffsetField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CSgitFtdcEWarrantOffsetField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CSgitFtdcEWarrantOffsetField_Direction_get, _pyctp.CSgitFtdcEWarrantOffsetField_Direction_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CSgitFtdcEWarrantOffsetField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CSgitFtdcEWarrantOffsetField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CSgitFtdcEWarrantOffsetField_HedgeFlag_get, _pyctp.CSgitFtdcEWarrantOffsetField_HedgeFlag_set)
    __swig_setmethods__["Volume"] = _pyctp.CSgitFtdcEWarrantOffsetField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CSgitFtdcEWarrantOffsetField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CSgitFtdcEWarrantOffsetField_Volume_get, _pyctp.CSgitFtdcEWarrantOffsetField_Volume_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcEWarrantOffsetField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcEWarrantOffsetField
    __del__ = lambda self: None
CSgitFtdcEWarrantOffsetField_swigregister = _pyctp.CSgitFtdcEWarrantOffsetField_swigregister
CSgitFtdcEWarrantOffsetField_swigregister(CSgitFtdcEWarrantOffsetField)

class CSgitFtdcQryEWarrantOffsetField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryEWarrantOffsetField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryEWarrantOffsetField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryEWarrantOffsetField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryEWarrantOffsetField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryEWarrantOffsetField_BrokerID_get, _pyctp.CSgitFtdcQryEWarrantOffsetField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcQryEWarrantOffsetField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcQryEWarrantOffsetField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcQryEWarrantOffsetField_InvestorID_get, _pyctp.CSgitFtdcQryEWarrantOffsetField_InvestorID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryEWarrantOffsetField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CSgitFtdcQryEWarrantOffsetField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CSgitFtdcQryEWarrantOffsetField_ExchangeID_get, _pyctp.CSgitFtdcQryEWarrantOffsetField_ExchangeID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryEWarrantOffsetField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CSgitFtdcQryEWarrantOffsetField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CSgitFtdcQryEWarrantOffsetField_InstrumentID_get, _pyctp.CSgitFtdcQryEWarrantOffsetField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryEWarrantOffsetField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryEWarrantOffsetField
    __del__ = lambda self: None
CSgitFtdcQryEWarrantOffsetField_swigregister = _pyctp.CSgitFtdcQryEWarrantOffsetField_swigregister
CSgitFtdcQryEWarrantOffsetField_swigregister(CSgitFtdcQryEWarrantOffsetField)

class CSgitFtdcReqOpenAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcReqOpenAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcReqOpenAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcReqOpenAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcReqOpenAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_TradeCode_get, _pyctp.CSgitFtdcReqOpenAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcReqOpenAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcReqOpenAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_BankID_get, _pyctp.CSgitFtdcReqOpenAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqOpenAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqOpenAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_BankBranchID_get, _pyctp.CSgitFtdcReqOpenAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcReqOpenAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcReqOpenAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_BrokerID_get, _pyctp.CSgitFtdcReqOpenAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqOpenAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqOpenAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_BrokerBranchID_get, _pyctp.CSgitFtdcReqOpenAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcReqOpenAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcReqOpenAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_TradeDate_get, _pyctp.CSgitFtdcReqOpenAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcReqOpenAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcReqOpenAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_TradeTime_get, _pyctp.CSgitFtdcReqOpenAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcReqOpenAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcReqOpenAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_BankSerial_get, _pyctp.CSgitFtdcReqOpenAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcReqOpenAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcReqOpenAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_TradingDay_get, _pyctp.CSgitFtdcReqOpenAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqOpenAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqOpenAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_PlateSerial_get, _pyctp.CSgitFtdcReqOpenAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcReqOpenAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcReqOpenAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_LastFragment_get, _pyctp.CSgitFtdcReqOpenAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcReqOpenAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcReqOpenAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_SessionID_get, _pyctp.CSgitFtdcReqOpenAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CSgitFtdcReqOpenAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CSgitFtdcReqOpenAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_CustomerName_get, _pyctp.CSgitFtdcReqOpenAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcReqOpenAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcReqOpenAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_IdCardType_get, _pyctp.CSgitFtdcReqOpenAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcReqOpenAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcReqOpenAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_IdentifiedCardNo_get, _pyctp.CSgitFtdcReqOpenAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["Gender"] = _pyctp.CSgitFtdcReqOpenAccountField_Gender_set
    __swig_getmethods__["Gender"] = _pyctp.CSgitFtdcReqOpenAccountField_Gender_get
    if _newclass:
        Gender = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_Gender_get, _pyctp.CSgitFtdcReqOpenAccountField_Gender_set)
    __swig_setmethods__["CountryCode"] = _pyctp.CSgitFtdcReqOpenAccountField_CountryCode_set
    __swig_getmethods__["CountryCode"] = _pyctp.CSgitFtdcReqOpenAccountField_CountryCode_get
    if _newclass:
        CountryCode = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_CountryCode_get, _pyctp.CSgitFtdcReqOpenAccountField_CountryCode_set)
    __swig_setmethods__["CustType"] = _pyctp.CSgitFtdcReqOpenAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CSgitFtdcReqOpenAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_CustType_get, _pyctp.CSgitFtdcReqOpenAccountField_CustType_set)
    __swig_setmethods__["Address"] = _pyctp.CSgitFtdcReqOpenAccountField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CSgitFtdcReqOpenAccountField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_Address_get, _pyctp.CSgitFtdcReqOpenAccountField_Address_set)
    __swig_setmethods__["ZipCode"] = _pyctp.CSgitFtdcReqOpenAccountField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _pyctp.CSgitFtdcReqOpenAccountField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_ZipCode_get, _pyctp.CSgitFtdcReqOpenAccountField_ZipCode_set)
    __swig_setmethods__["Telephone"] = _pyctp.CSgitFtdcReqOpenAccountField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CSgitFtdcReqOpenAccountField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_Telephone_get, _pyctp.CSgitFtdcReqOpenAccountField_Telephone_set)
    __swig_setmethods__["MobilePhone"] = _pyctp.CSgitFtdcReqOpenAccountField_MobilePhone_set
    __swig_getmethods__["MobilePhone"] = _pyctp.CSgitFtdcReqOpenAccountField_MobilePhone_get
    if _newclass:
        MobilePhone = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_MobilePhone_get, _pyctp.CSgitFtdcReqOpenAccountField_MobilePhone_set)
    __swig_setmethods__["Fax"] = _pyctp.CSgitFtdcReqOpenAccountField_Fax_set
    __swig_getmethods__["Fax"] = _pyctp.CSgitFtdcReqOpenAccountField_Fax_get
    if _newclass:
        Fax = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_Fax_get, _pyctp.CSgitFtdcReqOpenAccountField_Fax_set)
    __swig_setmethods__["EMail"] = _pyctp.CSgitFtdcReqOpenAccountField_EMail_set
    __swig_getmethods__["EMail"] = _pyctp.CSgitFtdcReqOpenAccountField_EMail_get
    if _newclass:
        EMail = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_EMail_get, _pyctp.CSgitFtdcReqOpenAccountField_EMail_set)
    __swig_setmethods__["MoneyAccountStatus"] = _pyctp.CSgitFtdcReqOpenAccountField_MoneyAccountStatus_set
    __swig_getmethods__["MoneyAccountStatus"] = _pyctp.CSgitFtdcReqOpenAccountField_MoneyAccountStatus_get
    if _newclass:
        MoneyAccountStatus = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_MoneyAccountStatus_get, _pyctp.CSgitFtdcReqOpenAccountField_MoneyAccountStatus_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcReqOpenAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcReqOpenAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_BankAccount_get, _pyctp.CSgitFtdcReqOpenAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CSgitFtdcReqOpenAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CSgitFtdcReqOpenAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_BankPassWord_get, _pyctp.CSgitFtdcReqOpenAccountField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcReqOpenAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcReqOpenAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_AccountID_get, _pyctp.CSgitFtdcReqOpenAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcReqOpenAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcReqOpenAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_Password_get, _pyctp.CSgitFtdcReqOpenAccountField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcReqOpenAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcReqOpenAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_InstallID_get, _pyctp.CSgitFtdcReqOpenAccountField_InstallID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcReqOpenAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcReqOpenAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_VerifyCertNoFlag_get, _pyctp.CSgitFtdcReqOpenAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcReqOpenAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcReqOpenAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_CurrencyID_get, _pyctp.CSgitFtdcReqOpenAccountField_CurrencyID_set)
    __swig_setmethods__["CashExchangeCode"] = _pyctp.CSgitFtdcReqOpenAccountField_CashExchangeCode_set
    __swig_getmethods__["CashExchangeCode"] = _pyctp.CSgitFtdcReqOpenAccountField_CashExchangeCode_get
    if _newclass:
        CashExchangeCode = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_CashExchangeCode_get, _pyctp.CSgitFtdcReqOpenAccountField_CashExchangeCode_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcReqOpenAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcReqOpenAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_Digest_get, _pyctp.CSgitFtdcReqOpenAccountField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CSgitFtdcReqOpenAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CSgitFtdcReqOpenAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_BankAccType_get, _pyctp.CSgitFtdcReqOpenAccountField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcReqOpenAccountField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcReqOpenAccountField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_DeviceID_get, _pyctp.CSgitFtdcReqOpenAccountField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcReqOpenAccountField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcReqOpenAccountField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_BankSecuAccType_get, _pyctp.CSgitFtdcReqOpenAccountField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcReqOpenAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcReqOpenAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_BrokerIDByBank_get, _pyctp.CSgitFtdcReqOpenAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcReqOpenAccountField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcReqOpenAccountField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_BankSecuAcc_get, _pyctp.CSgitFtdcReqOpenAccountField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcReqOpenAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcReqOpenAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_BankPwdFlag_get, _pyctp.CSgitFtdcReqOpenAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcReqOpenAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcReqOpenAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_SecuPwdFlag_get, _pyctp.CSgitFtdcReqOpenAccountField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcReqOpenAccountField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcReqOpenAccountField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_OperNo_get, _pyctp.CSgitFtdcReqOpenAccountField_OperNo_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcReqOpenAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcReqOpenAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcReqOpenAccountField_TID_get, _pyctp.CSgitFtdcReqOpenAccountField_TID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcReqOpenAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcReqOpenAccountField
    __del__ = lambda self: None
CSgitFtdcReqOpenAccountField_swigregister = _pyctp.CSgitFtdcReqOpenAccountField_swigregister
CSgitFtdcReqOpenAccountField_swigregister(CSgitFtdcReqOpenAccountField)

class CSgitFtdcReqCancelAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcReqCancelAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcReqCancelAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcReqCancelAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcReqCancelAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_TradeCode_get, _pyctp.CSgitFtdcReqCancelAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcReqCancelAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcReqCancelAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_BankID_get, _pyctp.CSgitFtdcReqCancelAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqCancelAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqCancelAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_BankBranchID_get, _pyctp.CSgitFtdcReqCancelAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcReqCancelAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcReqCancelAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_BrokerID_get, _pyctp.CSgitFtdcReqCancelAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqCancelAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqCancelAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_BrokerBranchID_get, _pyctp.CSgitFtdcReqCancelAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcReqCancelAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcReqCancelAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_TradeDate_get, _pyctp.CSgitFtdcReqCancelAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcReqCancelAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcReqCancelAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_TradeTime_get, _pyctp.CSgitFtdcReqCancelAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcReqCancelAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcReqCancelAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_BankSerial_get, _pyctp.CSgitFtdcReqCancelAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcReqCancelAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcReqCancelAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_TradingDay_get, _pyctp.CSgitFtdcReqCancelAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqCancelAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqCancelAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_PlateSerial_get, _pyctp.CSgitFtdcReqCancelAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcReqCancelAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcReqCancelAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_LastFragment_get, _pyctp.CSgitFtdcReqCancelAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcReqCancelAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcReqCancelAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_SessionID_get, _pyctp.CSgitFtdcReqCancelAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CSgitFtdcReqCancelAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CSgitFtdcReqCancelAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_CustomerName_get, _pyctp.CSgitFtdcReqCancelAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcReqCancelAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcReqCancelAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_IdCardType_get, _pyctp.CSgitFtdcReqCancelAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcReqCancelAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcReqCancelAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_IdentifiedCardNo_get, _pyctp.CSgitFtdcReqCancelAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["Gender"] = _pyctp.CSgitFtdcReqCancelAccountField_Gender_set
    __swig_getmethods__["Gender"] = _pyctp.CSgitFtdcReqCancelAccountField_Gender_get
    if _newclass:
        Gender = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_Gender_get, _pyctp.CSgitFtdcReqCancelAccountField_Gender_set)
    __swig_setmethods__["CountryCode"] = _pyctp.CSgitFtdcReqCancelAccountField_CountryCode_set
    __swig_getmethods__["CountryCode"] = _pyctp.CSgitFtdcReqCancelAccountField_CountryCode_get
    if _newclass:
        CountryCode = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_CountryCode_get, _pyctp.CSgitFtdcReqCancelAccountField_CountryCode_set)
    __swig_setmethods__["CustType"] = _pyctp.CSgitFtdcReqCancelAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CSgitFtdcReqCancelAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_CustType_get, _pyctp.CSgitFtdcReqCancelAccountField_CustType_set)
    __swig_setmethods__["Address"] = _pyctp.CSgitFtdcReqCancelAccountField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CSgitFtdcReqCancelAccountField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_Address_get, _pyctp.CSgitFtdcReqCancelAccountField_Address_set)
    __swig_setmethods__["ZipCode"] = _pyctp.CSgitFtdcReqCancelAccountField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _pyctp.CSgitFtdcReqCancelAccountField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_ZipCode_get, _pyctp.CSgitFtdcReqCancelAccountField_ZipCode_set)
    __swig_setmethods__["Telephone"] = _pyctp.CSgitFtdcReqCancelAccountField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CSgitFtdcReqCancelAccountField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_Telephone_get, _pyctp.CSgitFtdcReqCancelAccountField_Telephone_set)
    __swig_setmethods__["MobilePhone"] = _pyctp.CSgitFtdcReqCancelAccountField_MobilePhone_set
    __swig_getmethods__["MobilePhone"] = _pyctp.CSgitFtdcReqCancelAccountField_MobilePhone_get
    if _newclass:
        MobilePhone = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_MobilePhone_get, _pyctp.CSgitFtdcReqCancelAccountField_MobilePhone_set)
    __swig_setmethods__["Fax"] = _pyctp.CSgitFtdcReqCancelAccountField_Fax_set
    __swig_getmethods__["Fax"] = _pyctp.CSgitFtdcReqCancelAccountField_Fax_get
    if _newclass:
        Fax = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_Fax_get, _pyctp.CSgitFtdcReqCancelAccountField_Fax_set)
    __swig_setmethods__["EMail"] = _pyctp.CSgitFtdcReqCancelAccountField_EMail_set
    __swig_getmethods__["EMail"] = _pyctp.CSgitFtdcReqCancelAccountField_EMail_get
    if _newclass:
        EMail = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_EMail_get, _pyctp.CSgitFtdcReqCancelAccountField_EMail_set)
    __swig_setmethods__["MoneyAccountStatus"] = _pyctp.CSgitFtdcReqCancelAccountField_MoneyAccountStatus_set
    __swig_getmethods__["MoneyAccountStatus"] = _pyctp.CSgitFtdcReqCancelAccountField_MoneyAccountStatus_get
    if _newclass:
        MoneyAccountStatus = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_MoneyAccountStatus_get, _pyctp.CSgitFtdcReqCancelAccountField_MoneyAccountStatus_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcReqCancelAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcReqCancelAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_BankAccount_get, _pyctp.CSgitFtdcReqCancelAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CSgitFtdcReqCancelAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CSgitFtdcReqCancelAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_BankPassWord_get, _pyctp.CSgitFtdcReqCancelAccountField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcReqCancelAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcReqCancelAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_AccountID_get, _pyctp.CSgitFtdcReqCancelAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcReqCancelAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcReqCancelAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_Password_get, _pyctp.CSgitFtdcReqCancelAccountField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcReqCancelAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcReqCancelAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_InstallID_get, _pyctp.CSgitFtdcReqCancelAccountField_InstallID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcReqCancelAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcReqCancelAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_VerifyCertNoFlag_get, _pyctp.CSgitFtdcReqCancelAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcReqCancelAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcReqCancelAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_CurrencyID_get, _pyctp.CSgitFtdcReqCancelAccountField_CurrencyID_set)
    __swig_setmethods__["CashExchangeCode"] = _pyctp.CSgitFtdcReqCancelAccountField_CashExchangeCode_set
    __swig_getmethods__["CashExchangeCode"] = _pyctp.CSgitFtdcReqCancelAccountField_CashExchangeCode_get
    if _newclass:
        CashExchangeCode = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_CashExchangeCode_get, _pyctp.CSgitFtdcReqCancelAccountField_CashExchangeCode_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcReqCancelAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcReqCancelAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_Digest_get, _pyctp.CSgitFtdcReqCancelAccountField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CSgitFtdcReqCancelAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CSgitFtdcReqCancelAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_BankAccType_get, _pyctp.CSgitFtdcReqCancelAccountField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcReqCancelAccountField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcReqCancelAccountField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_DeviceID_get, _pyctp.CSgitFtdcReqCancelAccountField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcReqCancelAccountField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcReqCancelAccountField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_BankSecuAccType_get, _pyctp.CSgitFtdcReqCancelAccountField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcReqCancelAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcReqCancelAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_BrokerIDByBank_get, _pyctp.CSgitFtdcReqCancelAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcReqCancelAccountField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcReqCancelAccountField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_BankSecuAcc_get, _pyctp.CSgitFtdcReqCancelAccountField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcReqCancelAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcReqCancelAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_BankPwdFlag_get, _pyctp.CSgitFtdcReqCancelAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcReqCancelAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcReqCancelAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_SecuPwdFlag_get, _pyctp.CSgitFtdcReqCancelAccountField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcReqCancelAccountField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcReqCancelAccountField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_OperNo_get, _pyctp.CSgitFtdcReqCancelAccountField_OperNo_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcReqCancelAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcReqCancelAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcReqCancelAccountField_TID_get, _pyctp.CSgitFtdcReqCancelAccountField_TID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcReqCancelAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcReqCancelAccountField
    __del__ = lambda self: None
CSgitFtdcReqCancelAccountField_swigregister = _pyctp.CSgitFtdcReqCancelAccountField_swigregister
CSgitFtdcReqCancelAccountField_swigregister(CSgitFtdcReqCancelAccountField)

class CSgitFtdcReqChangeAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcReqChangeAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcReqChangeAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcReqChangeAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcReqChangeAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_TradeCode_get, _pyctp.CSgitFtdcReqChangeAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcReqChangeAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcReqChangeAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_BankID_get, _pyctp.CSgitFtdcReqChangeAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqChangeAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqChangeAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_BankBranchID_get, _pyctp.CSgitFtdcReqChangeAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcReqChangeAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcReqChangeAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_BrokerID_get, _pyctp.CSgitFtdcReqChangeAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqChangeAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqChangeAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_BrokerBranchID_get, _pyctp.CSgitFtdcReqChangeAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcReqChangeAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcReqChangeAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_TradeDate_get, _pyctp.CSgitFtdcReqChangeAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcReqChangeAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcReqChangeAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_TradeTime_get, _pyctp.CSgitFtdcReqChangeAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcReqChangeAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcReqChangeAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_BankSerial_get, _pyctp.CSgitFtdcReqChangeAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcReqChangeAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcReqChangeAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_TradingDay_get, _pyctp.CSgitFtdcReqChangeAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqChangeAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqChangeAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_PlateSerial_get, _pyctp.CSgitFtdcReqChangeAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcReqChangeAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcReqChangeAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_LastFragment_get, _pyctp.CSgitFtdcReqChangeAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcReqChangeAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcReqChangeAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_SessionID_get, _pyctp.CSgitFtdcReqChangeAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CSgitFtdcReqChangeAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CSgitFtdcReqChangeAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_CustomerName_get, _pyctp.CSgitFtdcReqChangeAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcReqChangeAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcReqChangeAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_IdCardType_get, _pyctp.CSgitFtdcReqChangeAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcReqChangeAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcReqChangeAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_IdentifiedCardNo_get, _pyctp.CSgitFtdcReqChangeAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["Gender"] = _pyctp.CSgitFtdcReqChangeAccountField_Gender_set
    __swig_getmethods__["Gender"] = _pyctp.CSgitFtdcReqChangeAccountField_Gender_get
    if _newclass:
        Gender = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_Gender_get, _pyctp.CSgitFtdcReqChangeAccountField_Gender_set)
    __swig_setmethods__["CountryCode"] = _pyctp.CSgitFtdcReqChangeAccountField_CountryCode_set
    __swig_getmethods__["CountryCode"] = _pyctp.CSgitFtdcReqChangeAccountField_CountryCode_get
    if _newclass:
        CountryCode = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_CountryCode_get, _pyctp.CSgitFtdcReqChangeAccountField_CountryCode_set)
    __swig_setmethods__["CustType"] = _pyctp.CSgitFtdcReqChangeAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CSgitFtdcReqChangeAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_CustType_get, _pyctp.CSgitFtdcReqChangeAccountField_CustType_set)
    __swig_setmethods__["Address"] = _pyctp.CSgitFtdcReqChangeAccountField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CSgitFtdcReqChangeAccountField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_Address_get, _pyctp.CSgitFtdcReqChangeAccountField_Address_set)
    __swig_setmethods__["ZipCode"] = _pyctp.CSgitFtdcReqChangeAccountField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _pyctp.CSgitFtdcReqChangeAccountField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_ZipCode_get, _pyctp.CSgitFtdcReqChangeAccountField_ZipCode_set)
    __swig_setmethods__["Telephone"] = _pyctp.CSgitFtdcReqChangeAccountField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CSgitFtdcReqChangeAccountField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_Telephone_get, _pyctp.CSgitFtdcReqChangeAccountField_Telephone_set)
    __swig_setmethods__["MobilePhone"] = _pyctp.CSgitFtdcReqChangeAccountField_MobilePhone_set
    __swig_getmethods__["MobilePhone"] = _pyctp.CSgitFtdcReqChangeAccountField_MobilePhone_get
    if _newclass:
        MobilePhone = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_MobilePhone_get, _pyctp.CSgitFtdcReqChangeAccountField_MobilePhone_set)
    __swig_setmethods__["Fax"] = _pyctp.CSgitFtdcReqChangeAccountField_Fax_set
    __swig_getmethods__["Fax"] = _pyctp.CSgitFtdcReqChangeAccountField_Fax_get
    if _newclass:
        Fax = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_Fax_get, _pyctp.CSgitFtdcReqChangeAccountField_Fax_set)
    __swig_setmethods__["EMail"] = _pyctp.CSgitFtdcReqChangeAccountField_EMail_set
    __swig_getmethods__["EMail"] = _pyctp.CSgitFtdcReqChangeAccountField_EMail_get
    if _newclass:
        EMail = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_EMail_get, _pyctp.CSgitFtdcReqChangeAccountField_EMail_set)
    __swig_setmethods__["MoneyAccountStatus"] = _pyctp.CSgitFtdcReqChangeAccountField_MoneyAccountStatus_set
    __swig_getmethods__["MoneyAccountStatus"] = _pyctp.CSgitFtdcReqChangeAccountField_MoneyAccountStatus_get
    if _newclass:
        MoneyAccountStatus = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_MoneyAccountStatus_get, _pyctp.CSgitFtdcReqChangeAccountField_MoneyAccountStatus_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcReqChangeAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcReqChangeAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_BankAccount_get, _pyctp.CSgitFtdcReqChangeAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CSgitFtdcReqChangeAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CSgitFtdcReqChangeAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_BankPassWord_get, _pyctp.CSgitFtdcReqChangeAccountField_BankPassWord_set)
    __swig_setmethods__["NewBankAccount"] = _pyctp.CSgitFtdcReqChangeAccountField_NewBankAccount_set
    __swig_getmethods__["NewBankAccount"] = _pyctp.CSgitFtdcReqChangeAccountField_NewBankAccount_get
    if _newclass:
        NewBankAccount = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_NewBankAccount_get, _pyctp.CSgitFtdcReqChangeAccountField_NewBankAccount_set)
    __swig_setmethods__["NewBankPassWord"] = _pyctp.CSgitFtdcReqChangeAccountField_NewBankPassWord_set
    __swig_getmethods__["NewBankPassWord"] = _pyctp.CSgitFtdcReqChangeAccountField_NewBankPassWord_get
    if _newclass:
        NewBankPassWord = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_NewBankPassWord_get, _pyctp.CSgitFtdcReqChangeAccountField_NewBankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcReqChangeAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcReqChangeAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_AccountID_get, _pyctp.CSgitFtdcReqChangeAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcReqChangeAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcReqChangeAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_Password_get, _pyctp.CSgitFtdcReqChangeAccountField_Password_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CSgitFtdcReqChangeAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CSgitFtdcReqChangeAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_BankAccType_get, _pyctp.CSgitFtdcReqChangeAccountField_BankAccType_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcReqChangeAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcReqChangeAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_InstallID_get, _pyctp.CSgitFtdcReqChangeAccountField_InstallID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcReqChangeAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcReqChangeAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_VerifyCertNoFlag_get, _pyctp.CSgitFtdcReqChangeAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcReqChangeAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcReqChangeAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_CurrencyID_get, _pyctp.CSgitFtdcReqChangeAccountField_CurrencyID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcReqChangeAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcReqChangeAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_BrokerIDByBank_get, _pyctp.CSgitFtdcReqChangeAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcReqChangeAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcReqChangeAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_BankPwdFlag_get, _pyctp.CSgitFtdcReqChangeAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcReqChangeAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcReqChangeAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_SecuPwdFlag_get, _pyctp.CSgitFtdcReqChangeAccountField_SecuPwdFlag_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcReqChangeAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcReqChangeAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_TID_get, _pyctp.CSgitFtdcReqChangeAccountField_TID_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcReqChangeAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcReqChangeAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcReqChangeAccountField_Digest_get, _pyctp.CSgitFtdcReqChangeAccountField_Digest_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcReqChangeAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcReqChangeAccountField
    __del__ = lambda self: None
CSgitFtdcReqChangeAccountField_swigregister = _pyctp.CSgitFtdcReqChangeAccountField_swigregister
CSgitFtdcReqChangeAccountField_swigregister(CSgitFtdcReqChangeAccountField)

class CSgitFtdcReqTransferField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcReqTransferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcReqTransferField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcReqTransferField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcReqTransferField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcReqTransferField_TradeCode_get, _pyctp.CSgitFtdcReqTransferField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcReqTransferField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcReqTransferField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcReqTransferField_BankID_get, _pyctp.CSgitFtdcReqTransferField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqTransferField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqTransferField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcReqTransferField_BankBranchID_get, _pyctp.CSgitFtdcReqTransferField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcReqTransferField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcReqTransferField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcReqTransferField_BrokerID_get, _pyctp.CSgitFtdcReqTransferField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqTransferField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqTransferField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcReqTransferField_BrokerBranchID_get, _pyctp.CSgitFtdcReqTransferField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcReqTransferField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcReqTransferField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcReqTransferField_TradeDate_get, _pyctp.CSgitFtdcReqTransferField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcReqTransferField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcReqTransferField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcReqTransferField_TradeTime_get, _pyctp.CSgitFtdcReqTransferField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcReqTransferField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcReqTransferField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcReqTransferField_BankSerial_get, _pyctp.CSgitFtdcReqTransferField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcReqTransferField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcReqTransferField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcReqTransferField_TradingDay_get, _pyctp.CSgitFtdcReqTransferField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqTransferField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqTransferField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcReqTransferField_PlateSerial_get, _pyctp.CSgitFtdcReqTransferField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcReqTransferField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcReqTransferField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcReqTransferField_LastFragment_get, _pyctp.CSgitFtdcReqTransferField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcReqTransferField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcReqTransferField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcReqTransferField_SessionID_get, _pyctp.CSgitFtdcReqTransferField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CSgitFtdcReqTransferField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CSgitFtdcReqTransferField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CSgitFtdcReqTransferField_CustomerName_get, _pyctp.CSgitFtdcReqTransferField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcReqTransferField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcReqTransferField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcReqTransferField_IdCardType_get, _pyctp.CSgitFtdcReqTransferField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcReqTransferField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcReqTransferField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcReqTransferField_IdentifiedCardNo_get, _pyctp.CSgitFtdcReqTransferField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CSgitFtdcReqTransferField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CSgitFtdcReqTransferField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CSgitFtdcReqTransferField_CustType_get, _pyctp.CSgitFtdcReqTransferField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcReqTransferField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcReqTransferField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcReqTransferField_BankAccount_get, _pyctp.CSgitFtdcReqTransferField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CSgitFtdcReqTransferField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CSgitFtdcReqTransferField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CSgitFtdcReqTransferField_BankPassWord_get, _pyctp.CSgitFtdcReqTransferField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcReqTransferField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcReqTransferField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcReqTransferField_AccountID_get, _pyctp.CSgitFtdcReqTransferField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcReqTransferField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcReqTransferField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcReqTransferField_Password_get, _pyctp.CSgitFtdcReqTransferField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcReqTransferField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcReqTransferField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcReqTransferField_InstallID_get, _pyctp.CSgitFtdcReqTransferField_InstallID_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CSgitFtdcReqTransferField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CSgitFtdcReqTransferField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CSgitFtdcReqTransferField_FutureSerial_get, _pyctp.CSgitFtdcReqTransferField_FutureSerial_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcReqTransferField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcReqTransferField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcReqTransferField_UserID_get, _pyctp.CSgitFtdcReqTransferField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcReqTransferField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcReqTransferField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CSgitFtdcReqTransferField_VerifyCertNoFlag_get, _pyctp.CSgitFtdcReqTransferField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcReqTransferField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcReqTransferField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcReqTransferField_CurrencyID_get, _pyctp.CSgitFtdcReqTransferField_CurrencyID_set)
    __swig_setmethods__["TradeAmount"] = _pyctp.CSgitFtdcReqTransferField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _pyctp.CSgitFtdcReqTransferField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_pyctp.CSgitFtdcReqTransferField_TradeAmount_get, _pyctp.CSgitFtdcReqTransferField_TradeAmount_set)
    __swig_setmethods__["FutureFetchAmount"] = _pyctp.CSgitFtdcReqTransferField_FutureFetchAmount_set
    __swig_getmethods__["FutureFetchAmount"] = _pyctp.CSgitFtdcReqTransferField_FutureFetchAmount_get
    if _newclass:
        FutureFetchAmount = _swig_property(_pyctp.CSgitFtdcReqTransferField_FutureFetchAmount_get, _pyctp.CSgitFtdcReqTransferField_FutureFetchAmount_set)
    __swig_setmethods__["FeePayFlag"] = _pyctp.CSgitFtdcReqTransferField_FeePayFlag_set
    __swig_getmethods__["FeePayFlag"] = _pyctp.CSgitFtdcReqTransferField_FeePayFlag_get
    if _newclass:
        FeePayFlag = _swig_property(_pyctp.CSgitFtdcReqTransferField_FeePayFlag_get, _pyctp.CSgitFtdcReqTransferField_FeePayFlag_set)
    __swig_setmethods__["CustFee"] = _pyctp.CSgitFtdcReqTransferField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CSgitFtdcReqTransferField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CSgitFtdcReqTransferField_CustFee_get, _pyctp.CSgitFtdcReqTransferField_CustFee_set)
    __swig_setmethods__["BrokerFee"] = _pyctp.CSgitFtdcReqTransferField_BrokerFee_set
    __swig_getmethods__["BrokerFee"] = _pyctp.CSgitFtdcReqTransferField_BrokerFee_get
    if _newclass:
        BrokerFee = _swig_property(_pyctp.CSgitFtdcReqTransferField_BrokerFee_get, _pyctp.CSgitFtdcReqTransferField_BrokerFee_set)
    __swig_setmethods__["Message"] = _pyctp.CSgitFtdcReqTransferField_Message_set
    __swig_getmethods__["Message"] = _pyctp.CSgitFtdcReqTransferField_Message_get
    if _newclass:
        Message = _swig_property(_pyctp.CSgitFtdcReqTransferField_Message_get, _pyctp.CSgitFtdcReqTransferField_Message_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcReqTransferField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcReqTransferField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcReqTransferField_Digest_get, _pyctp.CSgitFtdcReqTransferField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CSgitFtdcReqTransferField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CSgitFtdcReqTransferField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CSgitFtdcReqTransferField_BankAccType_get, _pyctp.CSgitFtdcReqTransferField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcReqTransferField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcReqTransferField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcReqTransferField_DeviceID_get, _pyctp.CSgitFtdcReqTransferField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcReqTransferField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcReqTransferField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CSgitFtdcReqTransferField_BankSecuAccType_get, _pyctp.CSgitFtdcReqTransferField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcReqTransferField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcReqTransferField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcReqTransferField_BrokerIDByBank_get, _pyctp.CSgitFtdcReqTransferField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcReqTransferField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcReqTransferField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CSgitFtdcReqTransferField_BankSecuAcc_get, _pyctp.CSgitFtdcReqTransferField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcReqTransferField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcReqTransferField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CSgitFtdcReqTransferField_BankPwdFlag_get, _pyctp.CSgitFtdcReqTransferField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcReqTransferField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcReqTransferField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CSgitFtdcReqTransferField_SecuPwdFlag_get, _pyctp.CSgitFtdcReqTransferField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcReqTransferField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcReqTransferField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcReqTransferField_OperNo_get, _pyctp.CSgitFtdcReqTransferField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcReqTransferField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcReqTransferField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcReqTransferField_RequestID_get, _pyctp.CSgitFtdcReqTransferField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcReqTransferField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcReqTransferField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcReqTransferField_TID_get, _pyctp.CSgitFtdcReqTransferField_TID_set)
    __swig_setmethods__["TransferStatus"] = _pyctp.CSgitFtdcReqTransferField_TransferStatus_set
    __swig_getmethods__["TransferStatus"] = _pyctp.CSgitFtdcReqTransferField_TransferStatus_get
    if _newclass:
        TransferStatus = _swig_property(_pyctp.CSgitFtdcReqTransferField_TransferStatus_get, _pyctp.CSgitFtdcReqTransferField_TransferStatus_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcReqTransferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcReqTransferField
    __del__ = lambda self: None
CSgitFtdcReqTransferField_swigregister = _pyctp.CSgitFtdcReqTransferField_swigregister
CSgitFtdcReqTransferField_swigregister(CSgitFtdcReqTransferField)

class CSgitFtdcRspTransferField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcRspTransferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcRspTransferField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcRspTransferField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcRspTransferField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcRspTransferField_TradeCode_get, _pyctp.CSgitFtdcRspTransferField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcRspTransferField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcRspTransferField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcRspTransferField_BankID_get, _pyctp.CSgitFtdcRspTransferField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcRspTransferField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcRspTransferField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcRspTransferField_BankBranchID_get, _pyctp.CSgitFtdcRspTransferField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcRspTransferField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcRspTransferField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcRspTransferField_BrokerID_get, _pyctp.CSgitFtdcRspTransferField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcRspTransferField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcRspTransferField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcRspTransferField_BrokerBranchID_get, _pyctp.CSgitFtdcRspTransferField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcRspTransferField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcRspTransferField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcRspTransferField_TradeDate_get, _pyctp.CSgitFtdcRspTransferField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcRspTransferField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcRspTransferField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcRspTransferField_TradeTime_get, _pyctp.CSgitFtdcRspTransferField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcRspTransferField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcRspTransferField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcRspTransferField_BankSerial_get, _pyctp.CSgitFtdcRspTransferField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcRspTransferField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcRspTransferField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcRspTransferField_TradingDay_get, _pyctp.CSgitFtdcRspTransferField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcRspTransferField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcRspTransferField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcRspTransferField_PlateSerial_get, _pyctp.CSgitFtdcRspTransferField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcRspTransferField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcRspTransferField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcRspTransferField_LastFragment_get, _pyctp.CSgitFtdcRspTransferField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcRspTransferField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcRspTransferField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcRspTransferField_SessionID_get, _pyctp.CSgitFtdcRspTransferField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CSgitFtdcRspTransferField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CSgitFtdcRspTransferField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CSgitFtdcRspTransferField_CustomerName_get, _pyctp.CSgitFtdcRspTransferField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcRspTransferField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcRspTransferField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcRspTransferField_IdCardType_get, _pyctp.CSgitFtdcRspTransferField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcRspTransferField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcRspTransferField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcRspTransferField_IdentifiedCardNo_get, _pyctp.CSgitFtdcRspTransferField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CSgitFtdcRspTransferField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CSgitFtdcRspTransferField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CSgitFtdcRspTransferField_CustType_get, _pyctp.CSgitFtdcRspTransferField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcRspTransferField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcRspTransferField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcRspTransferField_BankAccount_get, _pyctp.CSgitFtdcRspTransferField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CSgitFtdcRspTransferField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CSgitFtdcRspTransferField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CSgitFtdcRspTransferField_BankPassWord_get, _pyctp.CSgitFtdcRspTransferField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcRspTransferField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcRspTransferField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcRspTransferField_AccountID_get, _pyctp.CSgitFtdcRspTransferField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcRspTransferField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcRspTransferField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcRspTransferField_Password_get, _pyctp.CSgitFtdcRspTransferField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcRspTransferField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcRspTransferField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcRspTransferField_InstallID_get, _pyctp.CSgitFtdcRspTransferField_InstallID_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CSgitFtdcRspTransferField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CSgitFtdcRspTransferField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CSgitFtdcRspTransferField_FutureSerial_get, _pyctp.CSgitFtdcRspTransferField_FutureSerial_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcRspTransferField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcRspTransferField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcRspTransferField_UserID_get, _pyctp.CSgitFtdcRspTransferField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcRspTransferField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcRspTransferField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CSgitFtdcRspTransferField_VerifyCertNoFlag_get, _pyctp.CSgitFtdcRspTransferField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcRspTransferField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcRspTransferField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcRspTransferField_CurrencyID_get, _pyctp.CSgitFtdcRspTransferField_CurrencyID_set)
    __swig_setmethods__["TradeAmount"] = _pyctp.CSgitFtdcRspTransferField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _pyctp.CSgitFtdcRspTransferField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_pyctp.CSgitFtdcRspTransferField_TradeAmount_get, _pyctp.CSgitFtdcRspTransferField_TradeAmount_set)
    __swig_setmethods__["FutureFetchAmount"] = _pyctp.CSgitFtdcRspTransferField_FutureFetchAmount_set
    __swig_getmethods__["FutureFetchAmount"] = _pyctp.CSgitFtdcRspTransferField_FutureFetchAmount_get
    if _newclass:
        FutureFetchAmount = _swig_property(_pyctp.CSgitFtdcRspTransferField_FutureFetchAmount_get, _pyctp.CSgitFtdcRspTransferField_FutureFetchAmount_set)
    __swig_setmethods__["FeePayFlag"] = _pyctp.CSgitFtdcRspTransferField_FeePayFlag_set
    __swig_getmethods__["FeePayFlag"] = _pyctp.CSgitFtdcRspTransferField_FeePayFlag_get
    if _newclass:
        FeePayFlag = _swig_property(_pyctp.CSgitFtdcRspTransferField_FeePayFlag_get, _pyctp.CSgitFtdcRspTransferField_FeePayFlag_set)
    __swig_setmethods__["CustFee"] = _pyctp.CSgitFtdcRspTransferField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CSgitFtdcRspTransferField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CSgitFtdcRspTransferField_CustFee_get, _pyctp.CSgitFtdcRspTransferField_CustFee_set)
    __swig_setmethods__["BrokerFee"] = _pyctp.CSgitFtdcRspTransferField_BrokerFee_set
    __swig_getmethods__["BrokerFee"] = _pyctp.CSgitFtdcRspTransferField_BrokerFee_get
    if _newclass:
        BrokerFee = _swig_property(_pyctp.CSgitFtdcRspTransferField_BrokerFee_get, _pyctp.CSgitFtdcRspTransferField_BrokerFee_set)
    __swig_setmethods__["Message"] = _pyctp.CSgitFtdcRspTransferField_Message_set
    __swig_getmethods__["Message"] = _pyctp.CSgitFtdcRspTransferField_Message_get
    if _newclass:
        Message = _swig_property(_pyctp.CSgitFtdcRspTransferField_Message_get, _pyctp.CSgitFtdcRspTransferField_Message_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcRspTransferField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcRspTransferField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcRspTransferField_Digest_get, _pyctp.CSgitFtdcRspTransferField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CSgitFtdcRspTransferField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CSgitFtdcRspTransferField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CSgitFtdcRspTransferField_BankAccType_get, _pyctp.CSgitFtdcRspTransferField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcRspTransferField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcRspTransferField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcRspTransferField_DeviceID_get, _pyctp.CSgitFtdcRspTransferField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcRspTransferField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcRspTransferField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CSgitFtdcRspTransferField_BankSecuAccType_get, _pyctp.CSgitFtdcRspTransferField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcRspTransferField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcRspTransferField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcRspTransferField_BrokerIDByBank_get, _pyctp.CSgitFtdcRspTransferField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcRspTransferField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcRspTransferField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CSgitFtdcRspTransferField_BankSecuAcc_get, _pyctp.CSgitFtdcRspTransferField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcRspTransferField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcRspTransferField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CSgitFtdcRspTransferField_BankPwdFlag_get, _pyctp.CSgitFtdcRspTransferField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcRspTransferField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcRspTransferField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CSgitFtdcRspTransferField_SecuPwdFlag_get, _pyctp.CSgitFtdcRspTransferField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcRspTransferField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcRspTransferField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcRspTransferField_OperNo_get, _pyctp.CSgitFtdcRspTransferField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcRspTransferField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcRspTransferField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcRspTransferField_RequestID_get, _pyctp.CSgitFtdcRspTransferField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcRspTransferField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcRspTransferField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcRspTransferField_TID_get, _pyctp.CSgitFtdcRspTransferField_TID_set)
    __swig_setmethods__["TransferStatus"] = _pyctp.CSgitFtdcRspTransferField_TransferStatus_set
    __swig_getmethods__["TransferStatus"] = _pyctp.CSgitFtdcRspTransferField_TransferStatus_get
    if _newclass:
        TransferStatus = _swig_property(_pyctp.CSgitFtdcRspTransferField_TransferStatus_get, _pyctp.CSgitFtdcRspTransferField_TransferStatus_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcRspTransferField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcRspTransferField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcRspTransferField_ErrorID_get, _pyctp.CSgitFtdcRspTransferField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcRspTransferField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcRspTransferField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcRspTransferField_ErrorMsg_get, _pyctp.CSgitFtdcRspTransferField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcRspTransferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcRspTransferField
    __del__ = lambda self: None
CSgitFtdcRspTransferField_swigregister = _pyctp.CSgitFtdcRspTransferField_swigregister
CSgitFtdcRspTransferField_swigregister(CSgitFtdcRspTransferField)

class CSgitFtdcReqRepealField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcReqRepealField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcReqRepealField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["RepealTimeInterval"] = _pyctp.CSgitFtdcReqRepealField_RepealTimeInterval_set
    __swig_getmethods__["RepealTimeInterval"] = _pyctp.CSgitFtdcReqRepealField_RepealTimeInterval_get
    if _newclass:
        RepealTimeInterval = _swig_property(_pyctp.CSgitFtdcReqRepealField_RepealTimeInterval_get, _pyctp.CSgitFtdcReqRepealField_RepealTimeInterval_set)
    __swig_setmethods__["RepealedTimes"] = _pyctp.CSgitFtdcReqRepealField_RepealedTimes_set
    __swig_getmethods__["RepealedTimes"] = _pyctp.CSgitFtdcReqRepealField_RepealedTimes_get
    if _newclass:
        RepealedTimes = _swig_property(_pyctp.CSgitFtdcReqRepealField_RepealedTimes_get, _pyctp.CSgitFtdcReqRepealField_RepealedTimes_set)
    __swig_setmethods__["BankRepealFlag"] = _pyctp.CSgitFtdcReqRepealField_BankRepealFlag_set
    __swig_getmethods__["BankRepealFlag"] = _pyctp.CSgitFtdcReqRepealField_BankRepealFlag_get
    if _newclass:
        BankRepealFlag = _swig_property(_pyctp.CSgitFtdcReqRepealField_BankRepealFlag_get, _pyctp.CSgitFtdcReqRepealField_BankRepealFlag_set)
    __swig_setmethods__["BrokerRepealFlag"] = _pyctp.CSgitFtdcReqRepealField_BrokerRepealFlag_set
    __swig_getmethods__["BrokerRepealFlag"] = _pyctp.CSgitFtdcReqRepealField_BrokerRepealFlag_get
    if _newclass:
        BrokerRepealFlag = _swig_property(_pyctp.CSgitFtdcReqRepealField_BrokerRepealFlag_get, _pyctp.CSgitFtdcReqRepealField_BrokerRepealFlag_set)
    __swig_setmethods__["PlateRepealSerial"] = _pyctp.CSgitFtdcReqRepealField_PlateRepealSerial_set
    __swig_getmethods__["PlateRepealSerial"] = _pyctp.CSgitFtdcReqRepealField_PlateRepealSerial_get
    if _newclass:
        PlateRepealSerial = _swig_property(_pyctp.CSgitFtdcReqRepealField_PlateRepealSerial_get, _pyctp.CSgitFtdcReqRepealField_PlateRepealSerial_set)
    __swig_setmethods__["BankRepealSerial"] = _pyctp.CSgitFtdcReqRepealField_BankRepealSerial_set
    __swig_getmethods__["BankRepealSerial"] = _pyctp.CSgitFtdcReqRepealField_BankRepealSerial_get
    if _newclass:
        BankRepealSerial = _swig_property(_pyctp.CSgitFtdcReqRepealField_BankRepealSerial_get, _pyctp.CSgitFtdcReqRepealField_BankRepealSerial_set)
    __swig_setmethods__["FutureRepealSerial"] = _pyctp.CSgitFtdcReqRepealField_FutureRepealSerial_set
    __swig_getmethods__["FutureRepealSerial"] = _pyctp.CSgitFtdcReqRepealField_FutureRepealSerial_get
    if _newclass:
        FutureRepealSerial = _swig_property(_pyctp.CSgitFtdcReqRepealField_FutureRepealSerial_get, _pyctp.CSgitFtdcReqRepealField_FutureRepealSerial_set)
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcReqRepealField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcReqRepealField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcReqRepealField_TradeCode_get, _pyctp.CSgitFtdcReqRepealField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcReqRepealField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcReqRepealField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcReqRepealField_BankID_get, _pyctp.CSgitFtdcReqRepealField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqRepealField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqRepealField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcReqRepealField_BankBranchID_get, _pyctp.CSgitFtdcReqRepealField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcReqRepealField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcReqRepealField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcReqRepealField_BrokerID_get, _pyctp.CSgitFtdcReqRepealField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqRepealField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqRepealField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcReqRepealField_BrokerBranchID_get, _pyctp.CSgitFtdcReqRepealField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcReqRepealField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcReqRepealField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcReqRepealField_TradeDate_get, _pyctp.CSgitFtdcReqRepealField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcReqRepealField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcReqRepealField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcReqRepealField_TradeTime_get, _pyctp.CSgitFtdcReqRepealField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcReqRepealField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcReqRepealField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcReqRepealField_BankSerial_get, _pyctp.CSgitFtdcReqRepealField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcReqRepealField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcReqRepealField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcReqRepealField_TradingDay_get, _pyctp.CSgitFtdcReqRepealField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqRepealField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqRepealField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcReqRepealField_PlateSerial_get, _pyctp.CSgitFtdcReqRepealField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcReqRepealField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcReqRepealField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcReqRepealField_LastFragment_get, _pyctp.CSgitFtdcReqRepealField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcReqRepealField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcReqRepealField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcReqRepealField_SessionID_get, _pyctp.CSgitFtdcReqRepealField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CSgitFtdcReqRepealField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CSgitFtdcReqRepealField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CSgitFtdcReqRepealField_CustomerName_get, _pyctp.CSgitFtdcReqRepealField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcReqRepealField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcReqRepealField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcReqRepealField_IdCardType_get, _pyctp.CSgitFtdcReqRepealField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcReqRepealField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcReqRepealField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcReqRepealField_IdentifiedCardNo_get, _pyctp.CSgitFtdcReqRepealField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CSgitFtdcReqRepealField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CSgitFtdcReqRepealField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CSgitFtdcReqRepealField_CustType_get, _pyctp.CSgitFtdcReqRepealField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcReqRepealField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcReqRepealField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcReqRepealField_BankAccount_get, _pyctp.CSgitFtdcReqRepealField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CSgitFtdcReqRepealField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CSgitFtdcReqRepealField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CSgitFtdcReqRepealField_BankPassWord_get, _pyctp.CSgitFtdcReqRepealField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcReqRepealField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcReqRepealField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcReqRepealField_AccountID_get, _pyctp.CSgitFtdcReqRepealField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcReqRepealField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcReqRepealField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcReqRepealField_Password_get, _pyctp.CSgitFtdcReqRepealField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcReqRepealField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcReqRepealField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcReqRepealField_InstallID_get, _pyctp.CSgitFtdcReqRepealField_InstallID_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CSgitFtdcReqRepealField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CSgitFtdcReqRepealField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CSgitFtdcReqRepealField_FutureSerial_get, _pyctp.CSgitFtdcReqRepealField_FutureSerial_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcReqRepealField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcReqRepealField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcReqRepealField_UserID_get, _pyctp.CSgitFtdcReqRepealField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcReqRepealField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcReqRepealField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CSgitFtdcReqRepealField_VerifyCertNoFlag_get, _pyctp.CSgitFtdcReqRepealField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcReqRepealField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcReqRepealField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcReqRepealField_CurrencyID_get, _pyctp.CSgitFtdcReqRepealField_CurrencyID_set)
    __swig_setmethods__["TradeAmount"] = _pyctp.CSgitFtdcReqRepealField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _pyctp.CSgitFtdcReqRepealField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_pyctp.CSgitFtdcReqRepealField_TradeAmount_get, _pyctp.CSgitFtdcReqRepealField_TradeAmount_set)
    __swig_setmethods__["FutureFetchAmount"] = _pyctp.CSgitFtdcReqRepealField_FutureFetchAmount_set
    __swig_getmethods__["FutureFetchAmount"] = _pyctp.CSgitFtdcReqRepealField_FutureFetchAmount_get
    if _newclass:
        FutureFetchAmount = _swig_property(_pyctp.CSgitFtdcReqRepealField_FutureFetchAmount_get, _pyctp.CSgitFtdcReqRepealField_FutureFetchAmount_set)
    __swig_setmethods__["FeePayFlag"] = _pyctp.CSgitFtdcReqRepealField_FeePayFlag_set
    __swig_getmethods__["FeePayFlag"] = _pyctp.CSgitFtdcReqRepealField_FeePayFlag_get
    if _newclass:
        FeePayFlag = _swig_property(_pyctp.CSgitFtdcReqRepealField_FeePayFlag_get, _pyctp.CSgitFtdcReqRepealField_FeePayFlag_set)
    __swig_setmethods__["CustFee"] = _pyctp.CSgitFtdcReqRepealField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CSgitFtdcReqRepealField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CSgitFtdcReqRepealField_CustFee_get, _pyctp.CSgitFtdcReqRepealField_CustFee_set)
    __swig_setmethods__["BrokerFee"] = _pyctp.CSgitFtdcReqRepealField_BrokerFee_set
    __swig_getmethods__["BrokerFee"] = _pyctp.CSgitFtdcReqRepealField_BrokerFee_get
    if _newclass:
        BrokerFee = _swig_property(_pyctp.CSgitFtdcReqRepealField_BrokerFee_get, _pyctp.CSgitFtdcReqRepealField_BrokerFee_set)
    __swig_setmethods__["Message"] = _pyctp.CSgitFtdcReqRepealField_Message_set
    __swig_getmethods__["Message"] = _pyctp.CSgitFtdcReqRepealField_Message_get
    if _newclass:
        Message = _swig_property(_pyctp.CSgitFtdcReqRepealField_Message_get, _pyctp.CSgitFtdcReqRepealField_Message_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcReqRepealField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcReqRepealField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcReqRepealField_Digest_get, _pyctp.CSgitFtdcReqRepealField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CSgitFtdcReqRepealField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CSgitFtdcReqRepealField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CSgitFtdcReqRepealField_BankAccType_get, _pyctp.CSgitFtdcReqRepealField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcReqRepealField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcReqRepealField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcReqRepealField_DeviceID_get, _pyctp.CSgitFtdcReqRepealField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcReqRepealField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcReqRepealField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CSgitFtdcReqRepealField_BankSecuAccType_get, _pyctp.CSgitFtdcReqRepealField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcReqRepealField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcReqRepealField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcReqRepealField_BrokerIDByBank_get, _pyctp.CSgitFtdcReqRepealField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcReqRepealField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcReqRepealField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CSgitFtdcReqRepealField_BankSecuAcc_get, _pyctp.CSgitFtdcReqRepealField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcReqRepealField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcReqRepealField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CSgitFtdcReqRepealField_BankPwdFlag_get, _pyctp.CSgitFtdcReqRepealField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcReqRepealField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcReqRepealField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CSgitFtdcReqRepealField_SecuPwdFlag_get, _pyctp.CSgitFtdcReqRepealField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcReqRepealField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcReqRepealField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcReqRepealField_OperNo_get, _pyctp.CSgitFtdcReqRepealField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcReqRepealField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcReqRepealField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcReqRepealField_RequestID_get, _pyctp.CSgitFtdcReqRepealField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcReqRepealField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcReqRepealField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcReqRepealField_TID_get, _pyctp.CSgitFtdcReqRepealField_TID_set)
    __swig_setmethods__["TransferStatus"] = _pyctp.CSgitFtdcReqRepealField_TransferStatus_set
    __swig_getmethods__["TransferStatus"] = _pyctp.CSgitFtdcReqRepealField_TransferStatus_get
    if _newclass:
        TransferStatus = _swig_property(_pyctp.CSgitFtdcReqRepealField_TransferStatus_get, _pyctp.CSgitFtdcReqRepealField_TransferStatus_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcReqRepealField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcReqRepealField
    __del__ = lambda self: None
CSgitFtdcReqRepealField_swigregister = _pyctp.CSgitFtdcReqRepealField_swigregister
CSgitFtdcReqRepealField_swigregister(CSgitFtdcReqRepealField)

class CSgitFtdcRspRepealField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcRspRepealField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcRspRepealField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["RepealTimeInterval"] = _pyctp.CSgitFtdcRspRepealField_RepealTimeInterval_set
    __swig_getmethods__["RepealTimeInterval"] = _pyctp.CSgitFtdcRspRepealField_RepealTimeInterval_get
    if _newclass:
        RepealTimeInterval = _swig_property(_pyctp.CSgitFtdcRspRepealField_RepealTimeInterval_get, _pyctp.CSgitFtdcRspRepealField_RepealTimeInterval_set)
    __swig_setmethods__["RepealedTimes"] = _pyctp.CSgitFtdcRspRepealField_RepealedTimes_set
    __swig_getmethods__["RepealedTimes"] = _pyctp.CSgitFtdcRspRepealField_RepealedTimes_get
    if _newclass:
        RepealedTimes = _swig_property(_pyctp.CSgitFtdcRspRepealField_RepealedTimes_get, _pyctp.CSgitFtdcRspRepealField_RepealedTimes_set)
    __swig_setmethods__["BankRepealFlag"] = _pyctp.CSgitFtdcRspRepealField_BankRepealFlag_set
    __swig_getmethods__["BankRepealFlag"] = _pyctp.CSgitFtdcRspRepealField_BankRepealFlag_get
    if _newclass:
        BankRepealFlag = _swig_property(_pyctp.CSgitFtdcRspRepealField_BankRepealFlag_get, _pyctp.CSgitFtdcRspRepealField_BankRepealFlag_set)
    __swig_setmethods__["BrokerRepealFlag"] = _pyctp.CSgitFtdcRspRepealField_BrokerRepealFlag_set
    __swig_getmethods__["BrokerRepealFlag"] = _pyctp.CSgitFtdcRspRepealField_BrokerRepealFlag_get
    if _newclass:
        BrokerRepealFlag = _swig_property(_pyctp.CSgitFtdcRspRepealField_BrokerRepealFlag_get, _pyctp.CSgitFtdcRspRepealField_BrokerRepealFlag_set)
    __swig_setmethods__["PlateRepealSerial"] = _pyctp.CSgitFtdcRspRepealField_PlateRepealSerial_set
    __swig_getmethods__["PlateRepealSerial"] = _pyctp.CSgitFtdcRspRepealField_PlateRepealSerial_get
    if _newclass:
        PlateRepealSerial = _swig_property(_pyctp.CSgitFtdcRspRepealField_PlateRepealSerial_get, _pyctp.CSgitFtdcRspRepealField_PlateRepealSerial_set)
    __swig_setmethods__["BankRepealSerial"] = _pyctp.CSgitFtdcRspRepealField_BankRepealSerial_set
    __swig_getmethods__["BankRepealSerial"] = _pyctp.CSgitFtdcRspRepealField_BankRepealSerial_get
    if _newclass:
        BankRepealSerial = _swig_property(_pyctp.CSgitFtdcRspRepealField_BankRepealSerial_get, _pyctp.CSgitFtdcRspRepealField_BankRepealSerial_set)
    __swig_setmethods__["FutureRepealSerial"] = _pyctp.CSgitFtdcRspRepealField_FutureRepealSerial_set
    __swig_getmethods__["FutureRepealSerial"] = _pyctp.CSgitFtdcRspRepealField_FutureRepealSerial_get
    if _newclass:
        FutureRepealSerial = _swig_property(_pyctp.CSgitFtdcRspRepealField_FutureRepealSerial_get, _pyctp.CSgitFtdcRspRepealField_FutureRepealSerial_set)
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcRspRepealField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcRspRepealField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcRspRepealField_TradeCode_get, _pyctp.CSgitFtdcRspRepealField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcRspRepealField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcRspRepealField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcRspRepealField_BankID_get, _pyctp.CSgitFtdcRspRepealField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcRspRepealField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcRspRepealField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcRspRepealField_BankBranchID_get, _pyctp.CSgitFtdcRspRepealField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcRspRepealField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcRspRepealField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcRspRepealField_BrokerID_get, _pyctp.CSgitFtdcRspRepealField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcRspRepealField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcRspRepealField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcRspRepealField_BrokerBranchID_get, _pyctp.CSgitFtdcRspRepealField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcRspRepealField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcRspRepealField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcRspRepealField_TradeDate_get, _pyctp.CSgitFtdcRspRepealField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcRspRepealField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcRspRepealField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcRspRepealField_TradeTime_get, _pyctp.CSgitFtdcRspRepealField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcRspRepealField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcRspRepealField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcRspRepealField_BankSerial_get, _pyctp.CSgitFtdcRspRepealField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcRspRepealField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcRspRepealField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcRspRepealField_TradingDay_get, _pyctp.CSgitFtdcRspRepealField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcRspRepealField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcRspRepealField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcRspRepealField_PlateSerial_get, _pyctp.CSgitFtdcRspRepealField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcRspRepealField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcRspRepealField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcRspRepealField_LastFragment_get, _pyctp.CSgitFtdcRspRepealField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcRspRepealField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcRspRepealField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcRspRepealField_SessionID_get, _pyctp.CSgitFtdcRspRepealField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CSgitFtdcRspRepealField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CSgitFtdcRspRepealField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CSgitFtdcRspRepealField_CustomerName_get, _pyctp.CSgitFtdcRspRepealField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcRspRepealField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcRspRepealField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcRspRepealField_IdCardType_get, _pyctp.CSgitFtdcRspRepealField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcRspRepealField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcRspRepealField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcRspRepealField_IdentifiedCardNo_get, _pyctp.CSgitFtdcRspRepealField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CSgitFtdcRspRepealField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CSgitFtdcRspRepealField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CSgitFtdcRspRepealField_CustType_get, _pyctp.CSgitFtdcRspRepealField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcRspRepealField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcRspRepealField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcRspRepealField_BankAccount_get, _pyctp.CSgitFtdcRspRepealField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CSgitFtdcRspRepealField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CSgitFtdcRspRepealField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CSgitFtdcRspRepealField_BankPassWord_get, _pyctp.CSgitFtdcRspRepealField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcRspRepealField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcRspRepealField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcRspRepealField_AccountID_get, _pyctp.CSgitFtdcRspRepealField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcRspRepealField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcRspRepealField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcRspRepealField_Password_get, _pyctp.CSgitFtdcRspRepealField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcRspRepealField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcRspRepealField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcRspRepealField_InstallID_get, _pyctp.CSgitFtdcRspRepealField_InstallID_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CSgitFtdcRspRepealField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CSgitFtdcRspRepealField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CSgitFtdcRspRepealField_FutureSerial_get, _pyctp.CSgitFtdcRspRepealField_FutureSerial_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcRspRepealField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcRspRepealField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcRspRepealField_UserID_get, _pyctp.CSgitFtdcRspRepealField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcRspRepealField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcRspRepealField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CSgitFtdcRspRepealField_VerifyCertNoFlag_get, _pyctp.CSgitFtdcRspRepealField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcRspRepealField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcRspRepealField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcRspRepealField_CurrencyID_get, _pyctp.CSgitFtdcRspRepealField_CurrencyID_set)
    __swig_setmethods__["TradeAmount"] = _pyctp.CSgitFtdcRspRepealField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _pyctp.CSgitFtdcRspRepealField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_pyctp.CSgitFtdcRspRepealField_TradeAmount_get, _pyctp.CSgitFtdcRspRepealField_TradeAmount_set)
    __swig_setmethods__["FutureFetchAmount"] = _pyctp.CSgitFtdcRspRepealField_FutureFetchAmount_set
    __swig_getmethods__["FutureFetchAmount"] = _pyctp.CSgitFtdcRspRepealField_FutureFetchAmount_get
    if _newclass:
        FutureFetchAmount = _swig_property(_pyctp.CSgitFtdcRspRepealField_FutureFetchAmount_get, _pyctp.CSgitFtdcRspRepealField_FutureFetchAmount_set)
    __swig_setmethods__["FeePayFlag"] = _pyctp.CSgitFtdcRspRepealField_FeePayFlag_set
    __swig_getmethods__["FeePayFlag"] = _pyctp.CSgitFtdcRspRepealField_FeePayFlag_get
    if _newclass:
        FeePayFlag = _swig_property(_pyctp.CSgitFtdcRspRepealField_FeePayFlag_get, _pyctp.CSgitFtdcRspRepealField_FeePayFlag_set)
    __swig_setmethods__["CustFee"] = _pyctp.CSgitFtdcRspRepealField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CSgitFtdcRspRepealField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CSgitFtdcRspRepealField_CustFee_get, _pyctp.CSgitFtdcRspRepealField_CustFee_set)
    __swig_setmethods__["BrokerFee"] = _pyctp.CSgitFtdcRspRepealField_BrokerFee_set
    __swig_getmethods__["BrokerFee"] = _pyctp.CSgitFtdcRspRepealField_BrokerFee_get
    if _newclass:
        BrokerFee = _swig_property(_pyctp.CSgitFtdcRspRepealField_BrokerFee_get, _pyctp.CSgitFtdcRspRepealField_BrokerFee_set)
    __swig_setmethods__["Message"] = _pyctp.CSgitFtdcRspRepealField_Message_set
    __swig_getmethods__["Message"] = _pyctp.CSgitFtdcRspRepealField_Message_get
    if _newclass:
        Message = _swig_property(_pyctp.CSgitFtdcRspRepealField_Message_get, _pyctp.CSgitFtdcRspRepealField_Message_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcRspRepealField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcRspRepealField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcRspRepealField_Digest_get, _pyctp.CSgitFtdcRspRepealField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CSgitFtdcRspRepealField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CSgitFtdcRspRepealField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CSgitFtdcRspRepealField_BankAccType_get, _pyctp.CSgitFtdcRspRepealField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcRspRepealField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcRspRepealField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcRspRepealField_DeviceID_get, _pyctp.CSgitFtdcRspRepealField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcRspRepealField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcRspRepealField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CSgitFtdcRspRepealField_BankSecuAccType_get, _pyctp.CSgitFtdcRspRepealField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcRspRepealField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcRspRepealField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcRspRepealField_BrokerIDByBank_get, _pyctp.CSgitFtdcRspRepealField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcRspRepealField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcRspRepealField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CSgitFtdcRspRepealField_BankSecuAcc_get, _pyctp.CSgitFtdcRspRepealField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcRspRepealField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcRspRepealField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CSgitFtdcRspRepealField_BankPwdFlag_get, _pyctp.CSgitFtdcRspRepealField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcRspRepealField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcRspRepealField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CSgitFtdcRspRepealField_SecuPwdFlag_get, _pyctp.CSgitFtdcRspRepealField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcRspRepealField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcRspRepealField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcRspRepealField_OperNo_get, _pyctp.CSgitFtdcRspRepealField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcRspRepealField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcRspRepealField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcRspRepealField_RequestID_get, _pyctp.CSgitFtdcRspRepealField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcRspRepealField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcRspRepealField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcRspRepealField_TID_get, _pyctp.CSgitFtdcRspRepealField_TID_set)
    __swig_setmethods__["TransferStatus"] = _pyctp.CSgitFtdcRspRepealField_TransferStatus_set
    __swig_getmethods__["TransferStatus"] = _pyctp.CSgitFtdcRspRepealField_TransferStatus_get
    if _newclass:
        TransferStatus = _swig_property(_pyctp.CSgitFtdcRspRepealField_TransferStatus_get, _pyctp.CSgitFtdcRspRepealField_TransferStatus_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcRspRepealField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcRspRepealField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcRspRepealField_ErrorID_get, _pyctp.CSgitFtdcRspRepealField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcRspRepealField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcRspRepealField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcRspRepealField_ErrorMsg_get, _pyctp.CSgitFtdcRspRepealField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcRspRepealField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcRspRepealField
    __del__ = lambda self: None
CSgitFtdcRspRepealField_swigregister = _pyctp.CSgitFtdcRspRepealField_swigregister
CSgitFtdcRspRepealField_swigregister(CSgitFtdcRspRepealField)

class CSgitFtdcReqQueryAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcReqQueryAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcReqQueryAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcReqQueryAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcReqQueryAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_TradeCode_get, _pyctp.CSgitFtdcReqQueryAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcReqQueryAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcReqQueryAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_BankID_get, _pyctp.CSgitFtdcReqQueryAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqQueryAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqQueryAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_BankBranchID_get, _pyctp.CSgitFtdcReqQueryAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcReqQueryAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcReqQueryAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_BrokerID_get, _pyctp.CSgitFtdcReqQueryAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqQueryAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqQueryAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_BrokerBranchID_get, _pyctp.CSgitFtdcReqQueryAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcReqQueryAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcReqQueryAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_TradeDate_get, _pyctp.CSgitFtdcReqQueryAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcReqQueryAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcReqQueryAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_TradeTime_get, _pyctp.CSgitFtdcReqQueryAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcReqQueryAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcReqQueryAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_BankSerial_get, _pyctp.CSgitFtdcReqQueryAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcReqQueryAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcReqQueryAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_TradingDay_get, _pyctp.CSgitFtdcReqQueryAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqQueryAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqQueryAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_PlateSerial_get, _pyctp.CSgitFtdcReqQueryAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcReqQueryAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcReqQueryAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_LastFragment_get, _pyctp.CSgitFtdcReqQueryAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcReqQueryAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcReqQueryAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_SessionID_get, _pyctp.CSgitFtdcReqQueryAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CSgitFtdcReqQueryAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CSgitFtdcReqQueryAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_CustomerName_get, _pyctp.CSgitFtdcReqQueryAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcReqQueryAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcReqQueryAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_IdCardType_get, _pyctp.CSgitFtdcReqQueryAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcReqQueryAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcReqQueryAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_IdentifiedCardNo_get, _pyctp.CSgitFtdcReqQueryAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CSgitFtdcReqQueryAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CSgitFtdcReqQueryAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_CustType_get, _pyctp.CSgitFtdcReqQueryAccountField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcReqQueryAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcReqQueryAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_BankAccount_get, _pyctp.CSgitFtdcReqQueryAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CSgitFtdcReqQueryAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CSgitFtdcReqQueryAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_BankPassWord_get, _pyctp.CSgitFtdcReqQueryAccountField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcReqQueryAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcReqQueryAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_AccountID_get, _pyctp.CSgitFtdcReqQueryAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcReqQueryAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcReqQueryAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_Password_get, _pyctp.CSgitFtdcReqQueryAccountField_Password_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CSgitFtdcReqQueryAccountField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CSgitFtdcReqQueryAccountField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_FutureSerial_get, _pyctp.CSgitFtdcReqQueryAccountField_FutureSerial_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcReqQueryAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcReqQueryAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_InstallID_get, _pyctp.CSgitFtdcReqQueryAccountField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcReqQueryAccountField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcReqQueryAccountField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_UserID_get, _pyctp.CSgitFtdcReqQueryAccountField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcReqQueryAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcReqQueryAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_VerifyCertNoFlag_get, _pyctp.CSgitFtdcReqQueryAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcReqQueryAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcReqQueryAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_CurrencyID_get, _pyctp.CSgitFtdcReqQueryAccountField_CurrencyID_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcReqQueryAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcReqQueryAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_Digest_get, _pyctp.CSgitFtdcReqQueryAccountField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CSgitFtdcReqQueryAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CSgitFtdcReqQueryAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_BankAccType_get, _pyctp.CSgitFtdcReqQueryAccountField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcReqQueryAccountField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcReqQueryAccountField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_DeviceID_get, _pyctp.CSgitFtdcReqQueryAccountField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcReqQueryAccountField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcReqQueryAccountField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_BankSecuAccType_get, _pyctp.CSgitFtdcReqQueryAccountField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcReqQueryAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcReqQueryAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_BrokerIDByBank_get, _pyctp.CSgitFtdcReqQueryAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcReqQueryAccountField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcReqQueryAccountField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_BankSecuAcc_get, _pyctp.CSgitFtdcReqQueryAccountField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcReqQueryAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcReqQueryAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_BankPwdFlag_get, _pyctp.CSgitFtdcReqQueryAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcReqQueryAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcReqQueryAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_SecuPwdFlag_get, _pyctp.CSgitFtdcReqQueryAccountField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcReqQueryAccountField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcReqQueryAccountField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_OperNo_get, _pyctp.CSgitFtdcReqQueryAccountField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcReqQueryAccountField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcReqQueryAccountField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_RequestID_get, _pyctp.CSgitFtdcReqQueryAccountField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcReqQueryAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcReqQueryAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcReqQueryAccountField_TID_get, _pyctp.CSgitFtdcReqQueryAccountField_TID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcReqQueryAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcReqQueryAccountField
    __del__ = lambda self: None
CSgitFtdcReqQueryAccountField_swigregister = _pyctp.CSgitFtdcReqQueryAccountField_swigregister
CSgitFtdcReqQueryAccountField_swigregister(CSgitFtdcReqQueryAccountField)

class CSgitFtdcRspQueryAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcRspQueryAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcRspQueryAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcRspQueryAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcRspQueryAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_TradeCode_get, _pyctp.CSgitFtdcRspQueryAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcRspQueryAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcRspQueryAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_BankID_get, _pyctp.CSgitFtdcRspQueryAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcRspQueryAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcRspQueryAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_BankBranchID_get, _pyctp.CSgitFtdcRspQueryAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcRspQueryAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcRspQueryAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_BrokerID_get, _pyctp.CSgitFtdcRspQueryAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcRspQueryAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcRspQueryAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_BrokerBranchID_get, _pyctp.CSgitFtdcRspQueryAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcRspQueryAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcRspQueryAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_TradeDate_get, _pyctp.CSgitFtdcRspQueryAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcRspQueryAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcRspQueryAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_TradeTime_get, _pyctp.CSgitFtdcRspQueryAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcRspQueryAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcRspQueryAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_BankSerial_get, _pyctp.CSgitFtdcRspQueryAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcRspQueryAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcRspQueryAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_TradingDay_get, _pyctp.CSgitFtdcRspQueryAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcRspQueryAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcRspQueryAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_PlateSerial_get, _pyctp.CSgitFtdcRspQueryAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcRspQueryAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcRspQueryAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_LastFragment_get, _pyctp.CSgitFtdcRspQueryAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcRspQueryAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcRspQueryAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_SessionID_get, _pyctp.CSgitFtdcRspQueryAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CSgitFtdcRspQueryAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CSgitFtdcRspQueryAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_CustomerName_get, _pyctp.CSgitFtdcRspQueryAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcRspQueryAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcRspQueryAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_IdCardType_get, _pyctp.CSgitFtdcRspQueryAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcRspQueryAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcRspQueryAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_IdentifiedCardNo_get, _pyctp.CSgitFtdcRspQueryAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CSgitFtdcRspQueryAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CSgitFtdcRspQueryAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_CustType_get, _pyctp.CSgitFtdcRspQueryAccountField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcRspQueryAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcRspQueryAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_BankAccount_get, _pyctp.CSgitFtdcRspQueryAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CSgitFtdcRspQueryAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CSgitFtdcRspQueryAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_BankPassWord_get, _pyctp.CSgitFtdcRspQueryAccountField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcRspQueryAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcRspQueryAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_AccountID_get, _pyctp.CSgitFtdcRspQueryAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcRspQueryAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcRspQueryAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_Password_get, _pyctp.CSgitFtdcRspQueryAccountField_Password_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CSgitFtdcRspQueryAccountField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CSgitFtdcRspQueryAccountField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_FutureSerial_get, _pyctp.CSgitFtdcRspQueryAccountField_FutureSerial_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcRspQueryAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcRspQueryAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_InstallID_get, _pyctp.CSgitFtdcRspQueryAccountField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcRspQueryAccountField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcRspQueryAccountField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_UserID_get, _pyctp.CSgitFtdcRspQueryAccountField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcRspQueryAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcRspQueryAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_VerifyCertNoFlag_get, _pyctp.CSgitFtdcRspQueryAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcRspQueryAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcRspQueryAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_CurrencyID_get, _pyctp.CSgitFtdcRspQueryAccountField_CurrencyID_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcRspQueryAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcRspQueryAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_Digest_get, _pyctp.CSgitFtdcRspQueryAccountField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CSgitFtdcRspQueryAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CSgitFtdcRspQueryAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_BankAccType_get, _pyctp.CSgitFtdcRspQueryAccountField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcRspQueryAccountField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcRspQueryAccountField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_DeviceID_get, _pyctp.CSgitFtdcRspQueryAccountField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcRspQueryAccountField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcRspQueryAccountField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_BankSecuAccType_get, _pyctp.CSgitFtdcRspQueryAccountField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcRspQueryAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcRspQueryAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_BrokerIDByBank_get, _pyctp.CSgitFtdcRspQueryAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcRspQueryAccountField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcRspQueryAccountField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_BankSecuAcc_get, _pyctp.CSgitFtdcRspQueryAccountField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcRspQueryAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcRspQueryAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_BankPwdFlag_get, _pyctp.CSgitFtdcRspQueryAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcRspQueryAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcRspQueryAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_SecuPwdFlag_get, _pyctp.CSgitFtdcRspQueryAccountField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcRspQueryAccountField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcRspQueryAccountField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_OperNo_get, _pyctp.CSgitFtdcRspQueryAccountField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcRspQueryAccountField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcRspQueryAccountField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_RequestID_get, _pyctp.CSgitFtdcRspQueryAccountField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcRspQueryAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcRspQueryAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_TID_get, _pyctp.CSgitFtdcRspQueryAccountField_TID_set)
    __swig_setmethods__["BankUseAmount"] = _pyctp.CSgitFtdcRspQueryAccountField_BankUseAmount_set
    __swig_getmethods__["BankUseAmount"] = _pyctp.CSgitFtdcRspQueryAccountField_BankUseAmount_get
    if _newclass:
        BankUseAmount = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_BankUseAmount_get, _pyctp.CSgitFtdcRspQueryAccountField_BankUseAmount_set)
    __swig_setmethods__["BankFetchAmount"] = _pyctp.CSgitFtdcRspQueryAccountField_BankFetchAmount_set
    __swig_getmethods__["BankFetchAmount"] = _pyctp.CSgitFtdcRspQueryAccountField_BankFetchAmount_get
    if _newclass:
        BankFetchAmount = _swig_property(_pyctp.CSgitFtdcRspQueryAccountField_BankFetchAmount_get, _pyctp.CSgitFtdcRspQueryAccountField_BankFetchAmount_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcRspQueryAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcRspQueryAccountField
    __del__ = lambda self: None
CSgitFtdcRspQueryAccountField_swigregister = _pyctp.CSgitFtdcRspQueryAccountField_swigregister
CSgitFtdcRspQueryAccountField_swigregister(CSgitFtdcRspQueryAccountField)

class CSgitFtdcFutureSignIOField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcFutureSignIOField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcFutureSignIOField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcFutureSignIOField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcFutureSignIOField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_TradeCode_get, _pyctp.CSgitFtdcFutureSignIOField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcFutureSignIOField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcFutureSignIOField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_BankID_get, _pyctp.CSgitFtdcFutureSignIOField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcFutureSignIOField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcFutureSignIOField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_BankBranchID_get, _pyctp.CSgitFtdcFutureSignIOField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcFutureSignIOField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcFutureSignIOField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_BrokerID_get, _pyctp.CSgitFtdcFutureSignIOField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcFutureSignIOField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcFutureSignIOField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_BrokerBranchID_get, _pyctp.CSgitFtdcFutureSignIOField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcFutureSignIOField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcFutureSignIOField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_TradeDate_get, _pyctp.CSgitFtdcFutureSignIOField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcFutureSignIOField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcFutureSignIOField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_TradeTime_get, _pyctp.CSgitFtdcFutureSignIOField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcFutureSignIOField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcFutureSignIOField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_BankSerial_get, _pyctp.CSgitFtdcFutureSignIOField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcFutureSignIOField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcFutureSignIOField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_TradingDay_get, _pyctp.CSgitFtdcFutureSignIOField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcFutureSignIOField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcFutureSignIOField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_PlateSerial_get, _pyctp.CSgitFtdcFutureSignIOField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcFutureSignIOField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcFutureSignIOField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_LastFragment_get, _pyctp.CSgitFtdcFutureSignIOField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcFutureSignIOField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcFutureSignIOField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_SessionID_get, _pyctp.CSgitFtdcFutureSignIOField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcFutureSignIOField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcFutureSignIOField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_InstallID_get, _pyctp.CSgitFtdcFutureSignIOField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcFutureSignIOField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcFutureSignIOField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_UserID_get, _pyctp.CSgitFtdcFutureSignIOField_UserID_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcFutureSignIOField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcFutureSignIOField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_Digest_get, _pyctp.CSgitFtdcFutureSignIOField_Digest_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcFutureSignIOField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcFutureSignIOField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_CurrencyID_get, _pyctp.CSgitFtdcFutureSignIOField_CurrencyID_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcFutureSignIOField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcFutureSignIOField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_DeviceID_get, _pyctp.CSgitFtdcFutureSignIOField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcFutureSignIOField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcFutureSignIOField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_BrokerIDByBank_get, _pyctp.CSgitFtdcFutureSignIOField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcFutureSignIOField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcFutureSignIOField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_OperNo_get, _pyctp.CSgitFtdcFutureSignIOField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcFutureSignIOField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcFutureSignIOField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_RequestID_get, _pyctp.CSgitFtdcFutureSignIOField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcFutureSignIOField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcFutureSignIOField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcFutureSignIOField_TID_get, _pyctp.CSgitFtdcFutureSignIOField_TID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcFutureSignIOField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcFutureSignIOField
    __del__ = lambda self: None
CSgitFtdcFutureSignIOField_swigregister = _pyctp.CSgitFtdcFutureSignIOField_swigregister
CSgitFtdcFutureSignIOField_swigregister(CSgitFtdcFutureSignIOField)

class CSgitFtdcRspFutureSignInField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcRspFutureSignInField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcRspFutureSignInField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcRspFutureSignInField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcRspFutureSignInField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_TradeCode_get, _pyctp.CSgitFtdcRspFutureSignInField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcRspFutureSignInField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcRspFutureSignInField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_BankID_get, _pyctp.CSgitFtdcRspFutureSignInField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcRspFutureSignInField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcRspFutureSignInField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_BankBranchID_get, _pyctp.CSgitFtdcRspFutureSignInField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcRspFutureSignInField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcRspFutureSignInField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_BrokerID_get, _pyctp.CSgitFtdcRspFutureSignInField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcRspFutureSignInField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcRspFutureSignInField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_BrokerBranchID_get, _pyctp.CSgitFtdcRspFutureSignInField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcRspFutureSignInField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcRspFutureSignInField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_TradeDate_get, _pyctp.CSgitFtdcRspFutureSignInField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcRspFutureSignInField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcRspFutureSignInField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_TradeTime_get, _pyctp.CSgitFtdcRspFutureSignInField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcRspFutureSignInField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcRspFutureSignInField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_BankSerial_get, _pyctp.CSgitFtdcRspFutureSignInField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcRspFutureSignInField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcRspFutureSignInField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_TradingDay_get, _pyctp.CSgitFtdcRspFutureSignInField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcRspFutureSignInField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcRspFutureSignInField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_PlateSerial_get, _pyctp.CSgitFtdcRspFutureSignInField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcRspFutureSignInField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcRspFutureSignInField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_LastFragment_get, _pyctp.CSgitFtdcRspFutureSignInField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcRspFutureSignInField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcRspFutureSignInField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_SessionID_get, _pyctp.CSgitFtdcRspFutureSignInField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcRspFutureSignInField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcRspFutureSignInField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_InstallID_get, _pyctp.CSgitFtdcRspFutureSignInField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcRspFutureSignInField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcRspFutureSignInField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_UserID_get, _pyctp.CSgitFtdcRspFutureSignInField_UserID_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcRspFutureSignInField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcRspFutureSignInField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_Digest_get, _pyctp.CSgitFtdcRspFutureSignInField_Digest_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcRspFutureSignInField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcRspFutureSignInField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_CurrencyID_get, _pyctp.CSgitFtdcRspFutureSignInField_CurrencyID_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcRspFutureSignInField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcRspFutureSignInField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_DeviceID_get, _pyctp.CSgitFtdcRspFutureSignInField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcRspFutureSignInField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcRspFutureSignInField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_BrokerIDByBank_get, _pyctp.CSgitFtdcRspFutureSignInField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcRspFutureSignInField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcRspFutureSignInField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_OperNo_get, _pyctp.CSgitFtdcRspFutureSignInField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcRspFutureSignInField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcRspFutureSignInField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_RequestID_get, _pyctp.CSgitFtdcRspFutureSignInField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcRspFutureSignInField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcRspFutureSignInField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_TID_get, _pyctp.CSgitFtdcRspFutureSignInField_TID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcRspFutureSignInField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcRspFutureSignInField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_ErrorID_get, _pyctp.CSgitFtdcRspFutureSignInField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcRspFutureSignInField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcRspFutureSignInField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_ErrorMsg_get, _pyctp.CSgitFtdcRspFutureSignInField_ErrorMsg_set)
    __swig_setmethods__["PinKey"] = _pyctp.CSgitFtdcRspFutureSignInField_PinKey_set
    __swig_getmethods__["PinKey"] = _pyctp.CSgitFtdcRspFutureSignInField_PinKey_get
    if _newclass:
        PinKey = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_PinKey_get, _pyctp.CSgitFtdcRspFutureSignInField_PinKey_set)
    __swig_setmethods__["MacKey"] = _pyctp.CSgitFtdcRspFutureSignInField_MacKey_set
    __swig_getmethods__["MacKey"] = _pyctp.CSgitFtdcRspFutureSignInField_MacKey_get
    if _newclass:
        MacKey = _swig_property(_pyctp.CSgitFtdcRspFutureSignInField_MacKey_get, _pyctp.CSgitFtdcRspFutureSignInField_MacKey_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcRspFutureSignInField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcRspFutureSignInField
    __del__ = lambda self: None
CSgitFtdcRspFutureSignInField_swigregister = _pyctp.CSgitFtdcRspFutureSignInField_swigregister
CSgitFtdcRspFutureSignInField_swigregister(CSgitFtdcRspFutureSignInField)

class CSgitFtdcReqFutureSignOutField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcReqFutureSignOutField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcReqFutureSignOutField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcReqFutureSignOutField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcReqFutureSignOutField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_TradeCode_get, _pyctp.CSgitFtdcReqFutureSignOutField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcReqFutureSignOutField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcReqFutureSignOutField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_BankID_get, _pyctp.CSgitFtdcReqFutureSignOutField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqFutureSignOutField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqFutureSignOutField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_BankBranchID_get, _pyctp.CSgitFtdcReqFutureSignOutField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcReqFutureSignOutField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcReqFutureSignOutField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_BrokerID_get, _pyctp.CSgitFtdcReqFutureSignOutField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqFutureSignOutField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqFutureSignOutField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_BrokerBranchID_get, _pyctp.CSgitFtdcReqFutureSignOutField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcReqFutureSignOutField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcReqFutureSignOutField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_TradeDate_get, _pyctp.CSgitFtdcReqFutureSignOutField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcReqFutureSignOutField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcReqFutureSignOutField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_TradeTime_get, _pyctp.CSgitFtdcReqFutureSignOutField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcReqFutureSignOutField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcReqFutureSignOutField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_BankSerial_get, _pyctp.CSgitFtdcReqFutureSignOutField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcReqFutureSignOutField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcReqFutureSignOutField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_TradingDay_get, _pyctp.CSgitFtdcReqFutureSignOutField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqFutureSignOutField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqFutureSignOutField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_PlateSerial_get, _pyctp.CSgitFtdcReqFutureSignOutField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcReqFutureSignOutField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcReqFutureSignOutField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_LastFragment_get, _pyctp.CSgitFtdcReqFutureSignOutField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcReqFutureSignOutField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcReqFutureSignOutField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_SessionID_get, _pyctp.CSgitFtdcReqFutureSignOutField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcReqFutureSignOutField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcReqFutureSignOutField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_InstallID_get, _pyctp.CSgitFtdcReqFutureSignOutField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcReqFutureSignOutField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcReqFutureSignOutField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_UserID_get, _pyctp.CSgitFtdcReqFutureSignOutField_UserID_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcReqFutureSignOutField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcReqFutureSignOutField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_Digest_get, _pyctp.CSgitFtdcReqFutureSignOutField_Digest_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcReqFutureSignOutField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcReqFutureSignOutField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_CurrencyID_get, _pyctp.CSgitFtdcReqFutureSignOutField_CurrencyID_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcReqFutureSignOutField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcReqFutureSignOutField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_DeviceID_get, _pyctp.CSgitFtdcReqFutureSignOutField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcReqFutureSignOutField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcReqFutureSignOutField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_BrokerIDByBank_get, _pyctp.CSgitFtdcReqFutureSignOutField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcReqFutureSignOutField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcReqFutureSignOutField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_OperNo_get, _pyctp.CSgitFtdcReqFutureSignOutField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcReqFutureSignOutField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcReqFutureSignOutField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_RequestID_get, _pyctp.CSgitFtdcReqFutureSignOutField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcReqFutureSignOutField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcReqFutureSignOutField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcReqFutureSignOutField_TID_get, _pyctp.CSgitFtdcReqFutureSignOutField_TID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcReqFutureSignOutField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcReqFutureSignOutField
    __del__ = lambda self: None
CSgitFtdcReqFutureSignOutField_swigregister = _pyctp.CSgitFtdcReqFutureSignOutField_swigregister
CSgitFtdcReqFutureSignOutField_swigregister(CSgitFtdcReqFutureSignOutField)

class CSgitFtdcRspFutureSignOutField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcRspFutureSignOutField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcRspFutureSignOutField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcRspFutureSignOutField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcRspFutureSignOutField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_TradeCode_get, _pyctp.CSgitFtdcRspFutureSignOutField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcRspFutureSignOutField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcRspFutureSignOutField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_BankID_get, _pyctp.CSgitFtdcRspFutureSignOutField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcRspFutureSignOutField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcRspFutureSignOutField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_BankBranchID_get, _pyctp.CSgitFtdcRspFutureSignOutField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcRspFutureSignOutField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcRspFutureSignOutField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_BrokerID_get, _pyctp.CSgitFtdcRspFutureSignOutField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcRspFutureSignOutField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcRspFutureSignOutField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_BrokerBranchID_get, _pyctp.CSgitFtdcRspFutureSignOutField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcRspFutureSignOutField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcRspFutureSignOutField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_TradeDate_get, _pyctp.CSgitFtdcRspFutureSignOutField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcRspFutureSignOutField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcRspFutureSignOutField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_TradeTime_get, _pyctp.CSgitFtdcRspFutureSignOutField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcRspFutureSignOutField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcRspFutureSignOutField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_BankSerial_get, _pyctp.CSgitFtdcRspFutureSignOutField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcRspFutureSignOutField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcRspFutureSignOutField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_TradingDay_get, _pyctp.CSgitFtdcRspFutureSignOutField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcRspFutureSignOutField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcRspFutureSignOutField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_PlateSerial_get, _pyctp.CSgitFtdcRspFutureSignOutField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcRspFutureSignOutField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcRspFutureSignOutField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_LastFragment_get, _pyctp.CSgitFtdcRspFutureSignOutField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcRspFutureSignOutField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcRspFutureSignOutField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_SessionID_get, _pyctp.CSgitFtdcRspFutureSignOutField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcRspFutureSignOutField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcRspFutureSignOutField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_InstallID_get, _pyctp.CSgitFtdcRspFutureSignOutField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcRspFutureSignOutField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcRspFutureSignOutField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_UserID_get, _pyctp.CSgitFtdcRspFutureSignOutField_UserID_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcRspFutureSignOutField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcRspFutureSignOutField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_Digest_get, _pyctp.CSgitFtdcRspFutureSignOutField_Digest_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcRspFutureSignOutField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcRspFutureSignOutField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_CurrencyID_get, _pyctp.CSgitFtdcRspFutureSignOutField_CurrencyID_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcRspFutureSignOutField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcRspFutureSignOutField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_DeviceID_get, _pyctp.CSgitFtdcRspFutureSignOutField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcRspFutureSignOutField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcRspFutureSignOutField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_BrokerIDByBank_get, _pyctp.CSgitFtdcRspFutureSignOutField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcRspFutureSignOutField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcRspFutureSignOutField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_OperNo_get, _pyctp.CSgitFtdcRspFutureSignOutField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcRspFutureSignOutField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcRspFutureSignOutField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_RequestID_get, _pyctp.CSgitFtdcRspFutureSignOutField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcRspFutureSignOutField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcRspFutureSignOutField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_TID_get, _pyctp.CSgitFtdcRspFutureSignOutField_TID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcRspFutureSignOutField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcRspFutureSignOutField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_ErrorID_get, _pyctp.CSgitFtdcRspFutureSignOutField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcRspFutureSignOutField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcRspFutureSignOutField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcRspFutureSignOutField_ErrorMsg_get, _pyctp.CSgitFtdcRspFutureSignOutField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcRspFutureSignOutField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcRspFutureSignOutField
    __del__ = lambda self: None
CSgitFtdcRspFutureSignOutField_swigregister = _pyctp.CSgitFtdcRspFutureSignOutField_swigregister
CSgitFtdcRspFutureSignOutField_swigregister(CSgitFtdcRspFutureSignOutField)

class CSgitFtdcReqQueryTradeResultBySerialField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcReqQueryTradeResultBySerialField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcReqQueryTradeResultBySerialField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradeCode_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankID_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankBranchID_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BrokerID_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BrokerBranchID_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradeDate_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradeTime_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankSerial_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradingDay_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_PlateSerial_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_LastFragment_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_SessionID_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_SessionID_set)
    __swig_setmethods__["Reference"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_Reference_set
    __swig_getmethods__["Reference"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_Reference_get
    if _newclass:
        Reference = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_Reference_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_Reference_set)
    __swig_setmethods__["RefrenceIssureType"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_set
    __swig_getmethods__["RefrenceIssureType"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_get
    if _newclass:
        RefrenceIssureType = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_set)
    __swig_setmethods__["RefrenceIssure"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_RefrenceIssure_set
    __swig_getmethods__["RefrenceIssure"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_RefrenceIssure_get
    if _newclass:
        RefrenceIssure = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_RefrenceIssure_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_RefrenceIssure_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_CustomerName_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_IdCardType_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_CustType_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankAccount_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankPassWord_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_AccountID_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_Password_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_Password_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_CurrencyID_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_CurrencyID_set)
    __swig_setmethods__["TradeAmount"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradeAmount_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_TradeAmount_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcReqQueryTradeResultBySerialField_Digest_get, _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_Digest_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcReqQueryTradeResultBySerialField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcReqQueryTradeResultBySerialField
    __del__ = lambda self: None
CSgitFtdcReqQueryTradeResultBySerialField_swigregister = _pyctp.CSgitFtdcReqQueryTradeResultBySerialField_swigregister
CSgitFtdcReqQueryTradeResultBySerialField_swigregister(CSgitFtdcReqQueryTradeResultBySerialField)

class CSgitFtdcRspQueryTradeResultBySerialField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcRspQueryTradeResultBySerialField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcRspQueryTradeResultBySerialField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradeCode_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankID_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankBranchID_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BrokerID_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BrokerBranchID_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradeDate_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradeTime_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankSerial_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradingDay_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_PlateSerial_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_LastFragment_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_SessionID_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_SessionID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_ErrorID_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_ErrorMsg_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_ErrorMsg_set)
    __swig_setmethods__["Reference"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_Reference_set
    __swig_getmethods__["Reference"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_Reference_get
    if _newclass:
        Reference = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_Reference_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_Reference_set)
    __swig_setmethods__["RefrenceIssureType"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_set
    __swig_getmethods__["RefrenceIssureType"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_get
    if _newclass:
        RefrenceIssureType = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_set)
    __swig_setmethods__["RefrenceIssure"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_RefrenceIssure_set
    __swig_getmethods__["RefrenceIssure"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_RefrenceIssure_get
    if _newclass:
        RefrenceIssure = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_RefrenceIssure_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_RefrenceIssure_set)
    __swig_setmethods__["OriginReturnCode"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_OriginReturnCode_set
    __swig_getmethods__["OriginReturnCode"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_OriginReturnCode_get
    if _newclass:
        OriginReturnCode = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_OriginReturnCode_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_OriginReturnCode_set)
    __swig_setmethods__["OriginDescrInfoForReturnCode"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_set
    __swig_getmethods__["OriginDescrInfoForReturnCode"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_get
    if _newclass:
        OriginDescrInfoForReturnCode = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankAccount_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankPassWord_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_AccountID_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_Password_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_Password_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_CurrencyID_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_CurrencyID_set)
    __swig_setmethods__["TradeAmount"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradeAmount_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_TradeAmount_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcRspQueryTradeResultBySerialField_Digest_get, _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_Digest_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcRspQueryTradeResultBySerialField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcRspQueryTradeResultBySerialField
    __del__ = lambda self: None
CSgitFtdcRspQueryTradeResultBySerialField_swigregister = _pyctp.CSgitFtdcRspQueryTradeResultBySerialField_swigregister
CSgitFtdcRspQueryTradeResultBySerialField_swigregister(CSgitFtdcRspQueryTradeResultBySerialField)

class CSgitFtdcReqDayEndFileReadyField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcReqDayEndFileReadyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcReqDayEndFileReadyField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcReqDayEndFileReadyField_TradeCode_get, _pyctp.CSgitFtdcReqDayEndFileReadyField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcReqDayEndFileReadyField_BankID_get, _pyctp.CSgitFtdcReqDayEndFileReadyField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcReqDayEndFileReadyField_BankBranchID_get, _pyctp.CSgitFtdcReqDayEndFileReadyField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcReqDayEndFileReadyField_BrokerID_get, _pyctp.CSgitFtdcReqDayEndFileReadyField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcReqDayEndFileReadyField_BrokerBranchID_get, _pyctp.CSgitFtdcReqDayEndFileReadyField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcReqDayEndFileReadyField_TradeDate_get, _pyctp.CSgitFtdcReqDayEndFileReadyField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcReqDayEndFileReadyField_TradeTime_get, _pyctp.CSgitFtdcReqDayEndFileReadyField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcReqDayEndFileReadyField_BankSerial_get, _pyctp.CSgitFtdcReqDayEndFileReadyField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcReqDayEndFileReadyField_TradingDay_get, _pyctp.CSgitFtdcReqDayEndFileReadyField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcReqDayEndFileReadyField_PlateSerial_get, _pyctp.CSgitFtdcReqDayEndFileReadyField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcReqDayEndFileReadyField_LastFragment_get, _pyctp.CSgitFtdcReqDayEndFileReadyField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcReqDayEndFileReadyField_SessionID_get, _pyctp.CSgitFtdcReqDayEndFileReadyField_SessionID_set)
    __swig_setmethods__["FileBusinessCode"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_FileBusinessCode_set
    __swig_getmethods__["FileBusinessCode"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_FileBusinessCode_get
    if _newclass:
        FileBusinessCode = _swig_property(_pyctp.CSgitFtdcReqDayEndFileReadyField_FileBusinessCode_get, _pyctp.CSgitFtdcReqDayEndFileReadyField_FileBusinessCode_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcReqDayEndFileReadyField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcReqDayEndFileReadyField_Digest_get, _pyctp.CSgitFtdcReqDayEndFileReadyField_Digest_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcReqDayEndFileReadyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcReqDayEndFileReadyField
    __del__ = lambda self: None
CSgitFtdcReqDayEndFileReadyField_swigregister = _pyctp.CSgitFtdcReqDayEndFileReadyField_swigregister
CSgitFtdcReqDayEndFileReadyField_swigregister(CSgitFtdcReqDayEndFileReadyField)

class CSgitFtdcReturnResultField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcReturnResultField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcReturnResultField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ReturnCode"] = _pyctp.CSgitFtdcReturnResultField_ReturnCode_set
    __swig_getmethods__["ReturnCode"] = _pyctp.CSgitFtdcReturnResultField_ReturnCode_get
    if _newclass:
        ReturnCode = _swig_property(_pyctp.CSgitFtdcReturnResultField_ReturnCode_get, _pyctp.CSgitFtdcReturnResultField_ReturnCode_set)
    __swig_setmethods__["DescrInfoForReturnCode"] = _pyctp.CSgitFtdcReturnResultField_DescrInfoForReturnCode_set
    __swig_getmethods__["DescrInfoForReturnCode"] = _pyctp.CSgitFtdcReturnResultField_DescrInfoForReturnCode_get
    if _newclass:
        DescrInfoForReturnCode = _swig_property(_pyctp.CSgitFtdcReturnResultField_DescrInfoForReturnCode_get, _pyctp.CSgitFtdcReturnResultField_DescrInfoForReturnCode_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcReturnResultField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcReturnResultField
    __del__ = lambda self: None
CSgitFtdcReturnResultField_swigregister = _pyctp.CSgitFtdcReturnResultField_swigregister
CSgitFtdcReturnResultField_swigregister(CSgitFtdcReturnResultField)

class CSgitFtdcVerifyFuturePasswordField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcVerifyFuturePasswordField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcVerifyFuturePasswordField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_TradeCode_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_BankID_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_BankBranchID_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_BrokerID_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_BrokerBranchID_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_TradeDate_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_TradeTime_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_BankSerial_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_TradingDay_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_PlateSerial_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_LastFragment_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_SessionID_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_SessionID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_AccountID_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_Password_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_Password_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_BankAccount_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_BankPassWord_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_BankPassWord_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_InstallID_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_InstallID_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcVerifyFuturePasswordField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordField_TID_get, _pyctp.CSgitFtdcVerifyFuturePasswordField_TID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcVerifyFuturePasswordField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcVerifyFuturePasswordField
    __del__ = lambda self: None
CSgitFtdcVerifyFuturePasswordField_swigregister = _pyctp.CSgitFtdcVerifyFuturePasswordField_swigregister
CSgitFtdcVerifyFuturePasswordField_swigregister(CSgitFtdcVerifyFuturePasswordField)

class CSgitFtdcVerifyCustInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcVerifyCustInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcVerifyCustInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["CustomerName"] = _pyctp.CSgitFtdcVerifyCustInfoField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CSgitFtdcVerifyCustInfoField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CSgitFtdcVerifyCustInfoField_CustomerName_get, _pyctp.CSgitFtdcVerifyCustInfoField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcVerifyCustInfoField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcVerifyCustInfoField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcVerifyCustInfoField_IdCardType_get, _pyctp.CSgitFtdcVerifyCustInfoField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcVerifyCustInfoField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcVerifyCustInfoField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcVerifyCustInfoField_IdentifiedCardNo_get, _pyctp.CSgitFtdcVerifyCustInfoField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CSgitFtdcVerifyCustInfoField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CSgitFtdcVerifyCustInfoField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CSgitFtdcVerifyCustInfoField_CustType_get, _pyctp.CSgitFtdcVerifyCustInfoField_CustType_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcVerifyCustInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcVerifyCustInfoField
    __del__ = lambda self: None
CSgitFtdcVerifyCustInfoField_swigregister = _pyctp.CSgitFtdcVerifyCustInfoField_swigregister
CSgitFtdcVerifyCustInfoField_swigregister(CSgitFtdcVerifyCustInfoField)

class CSgitFtdcVerifyFuturePasswordAndCustInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcVerifyFuturePasswordAndCustInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcVerifyFuturePasswordAndCustInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["CustomerName"] = _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_get, _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_get, _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_get, _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_CustType_get, _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_CustType_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_AccountID_get, _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_Password_get, _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_Password_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcVerifyFuturePasswordAndCustInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcVerifyFuturePasswordAndCustInfoField
    __del__ = lambda self: None
CSgitFtdcVerifyFuturePasswordAndCustInfoField_swigregister = _pyctp.CSgitFtdcVerifyFuturePasswordAndCustInfoField_swigregister
CSgitFtdcVerifyFuturePasswordAndCustInfoField_swigregister(CSgitFtdcVerifyFuturePasswordAndCustInfoField)

class CSgitFtdcDepositResultInformField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcDepositResultInformField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcDepositResultInformField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["DepositSeqNo"] = _pyctp.CSgitFtdcDepositResultInformField_DepositSeqNo_set
    __swig_getmethods__["DepositSeqNo"] = _pyctp.CSgitFtdcDepositResultInformField_DepositSeqNo_get
    if _newclass:
        DepositSeqNo = _swig_property(_pyctp.CSgitFtdcDepositResultInformField_DepositSeqNo_get, _pyctp.CSgitFtdcDepositResultInformField_DepositSeqNo_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcDepositResultInformField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcDepositResultInformField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcDepositResultInformField_BrokerID_get, _pyctp.CSgitFtdcDepositResultInformField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcDepositResultInformField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcDepositResultInformField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcDepositResultInformField_InvestorID_get, _pyctp.CSgitFtdcDepositResultInformField_InvestorID_set)
    __swig_setmethods__["Deposit"] = _pyctp.CSgitFtdcDepositResultInformField_Deposit_set
    __swig_getmethods__["Deposit"] = _pyctp.CSgitFtdcDepositResultInformField_Deposit_get
    if _newclass:
        Deposit = _swig_property(_pyctp.CSgitFtdcDepositResultInformField_Deposit_get, _pyctp.CSgitFtdcDepositResultInformField_Deposit_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcDepositResultInformField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcDepositResultInformField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcDepositResultInformField_RequestID_get, _pyctp.CSgitFtdcDepositResultInformField_RequestID_set)
    __swig_setmethods__["ReturnCode"] = _pyctp.CSgitFtdcDepositResultInformField_ReturnCode_set
    __swig_getmethods__["ReturnCode"] = _pyctp.CSgitFtdcDepositResultInformField_ReturnCode_get
    if _newclass:
        ReturnCode = _swig_property(_pyctp.CSgitFtdcDepositResultInformField_ReturnCode_get, _pyctp.CSgitFtdcDepositResultInformField_ReturnCode_set)
    __swig_setmethods__["DescrInfoForReturnCode"] = _pyctp.CSgitFtdcDepositResultInformField_DescrInfoForReturnCode_set
    __swig_getmethods__["DescrInfoForReturnCode"] = _pyctp.CSgitFtdcDepositResultInformField_DescrInfoForReturnCode_get
    if _newclass:
        DescrInfoForReturnCode = _swig_property(_pyctp.CSgitFtdcDepositResultInformField_DescrInfoForReturnCode_get, _pyctp.CSgitFtdcDepositResultInformField_DescrInfoForReturnCode_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcDepositResultInformField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcDepositResultInformField
    __del__ = lambda self: None
CSgitFtdcDepositResultInformField_swigregister = _pyctp.CSgitFtdcDepositResultInformField_swigregister
CSgitFtdcDepositResultInformField_swigregister(CSgitFtdcDepositResultInformField)

class CSgitFtdcReqSyncKeyField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcReqSyncKeyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcReqSyncKeyField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcReqSyncKeyField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcReqSyncKeyField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_TradeCode_get, _pyctp.CSgitFtdcReqSyncKeyField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcReqSyncKeyField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcReqSyncKeyField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_BankID_get, _pyctp.CSgitFtdcReqSyncKeyField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqSyncKeyField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcReqSyncKeyField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_BankBranchID_get, _pyctp.CSgitFtdcReqSyncKeyField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcReqSyncKeyField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcReqSyncKeyField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_BrokerID_get, _pyctp.CSgitFtdcReqSyncKeyField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqSyncKeyField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcReqSyncKeyField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_BrokerBranchID_get, _pyctp.CSgitFtdcReqSyncKeyField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcReqSyncKeyField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcReqSyncKeyField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_TradeDate_get, _pyctp.CSgitFtdcReqSyncKeyField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcReqSyncKeyField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcReqSyncKeyField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_TradeTime_get, _pyctp.CSgitFtdcReqSyncKeyField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcReqSyncKeyField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcReqSyncKeyField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_BankSerial_get, _pyctp.CSgitFtdcReqSyncKeyField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcReqSyncKeyField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcReqSyncKeyField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_TradingDay_get, _pyctp.CSgitFtdcReqSyncKeyField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqSyncKeyField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcReqSyncKeyField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_PlateSerial_get, _pyctp.CSgitFtdcReqSyncKeyField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcReqSyncKeyField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcReqSyncKeyField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_LastFragment_get, _pyctp.CSgitFtdcReqSyncKeyField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcReqSyncKeyField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcReqSyncKeyField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_SessionID_get, _pyctp.CSgitFtdcReqSyncKeyField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcReqSyncKeyField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcReqSyncKeyField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_InstallID_get, _pyctp.CSgitFtdcReqSyncKeyField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcReqSyncKeyField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcReqSyncKeyField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_UserID_get, _pyctp.CSgitFtdcReqSyncKeyField_UserID_set)
    __swig_setmethods__["Message"] = _pyctp.CSgitFtdcReqSyncKeyField_Message_set
    __swig_getmethods__["Message"] = _pyctp.CSgitFtdcReqSyncKeyField_Message_get
    if _newclass:
        Message = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_Message_get, _pyctp.CSgitFtdcReqSyncKeyField_Message_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcReqSyncKeyField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcReqSyncKeyField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_DeviceID_get, _pyctp.CSgitFtdcReqSyncKeyField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcReqSyncKeyField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcReqSyncKeyField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_BrokerIDByBank_get, _pyctp.CSgitFtdcReqSyncKeyField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcReqSyncKeyField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcReqSyncKeyField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_OperNo_get, _pyctp.CSgitFtdcReqSyncKeyField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcReqSyncKeyField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcReqSyncKeyField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_RequestID_get, _pyctp.CSgitFtdcReqSyncKeyField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcReqSyncKeyField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcReqSyncKeyField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcReqSyncKeyField_TID_get, _pyctp.CSgitFtdcReqSyncKeyField_TID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcReqSyncKeyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcReqSyncKeyField
    __del__ = lambda self: None
CSgitFtdcReqSyncKeyField_swigregister = _pyctp.CSgitFtdcReqSyncKeyField_swigregister
CSgitFtdcReqSyncKeyField_swigregister(CSgitFtdcReqSyncKeyField)

class CSgitFtdcRspSyncKeyField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcRspSyncKeyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcRspSyncKeyField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcRspSyncKeyField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcRspSyncKeyField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_TradeCode_get, _pyctp.CSgitFtdcRspSyncKeyField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcRspSyncKeyField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcRspSyncKeyField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_BankID_get, _pyctp.CSgitFtdcRspSyncKeyField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcRspSyncKeyField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcRspSyncKeyField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_BankBranchID_get, _pyctp.CSgitFtdcRspSyncKeyField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcRspSyncKeyField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcRspSyncKeyField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_BrokerID_get, _pyctp.CSgitFtdcRspSyncKeyField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcRspSyncKeyField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcRspSyncKeyField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_BrokerBranchID_get, _pyctp.CSgitFtdcRspSyncKeyField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcRspSyncKeyField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcRspSyncKeyField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_TradeDate_get, _pyctp.CSgitFtdcRspSyncKeyField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcRspSyncKeyField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcRspSyncKeyField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_TradeTime_get, _pyctp.CSgitFtdcRspSyncKeyField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcRspSyncKeyField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcRspSyncKeyField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_BankSerial_get, _pyctp.CSgitFtdcRspSyncKeyField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcRspSyncKeyField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcRspSyncKeyField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_TradingDay_get, _pyctp.CSgitFtdcRspSyncKeyField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcRspSyncKeyField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcRspSyncKeyField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_PlateSerial_get, _pyctp.CSgitFtdcRspSyncKeyField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcRspSyncKeyField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcRspSyncKeyField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_LastFragment_get, _pyctp.CSgitFtdcRspSyncKeyField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcRspSyncKeyField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcRspSyncKeyField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_SessionID_get, _pyctp.CSgitFtdcRspSyncKeyField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcRspSyncKeyField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcRspSyncKeyField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_InstallID_get, _pyctp.CSgitFtdcRspSyncKeyField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcRspSyncKeyField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcRspSyncKeyField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_UserID_get, _pyctp.CSgitFtdcRspSyncKeyField_UserID_set)
    __swig_setmethods__["Message"] = _pyctp.CSgitFtdcRspSyncKeyField_Message_set
    __swig_getmethods__["Message"] = _pyctp.CSgitFtdcRspSyncKeyField_Message_get
    if _newclass:
        Message = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_Message_get, _pyctp.CSgitFtdcRspSyncKeyField_Message_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcRspSyncKeyField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcRspSyncKeyField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_DeviceID_get, _pyctp.CSgitFtdcRspSyncKeyField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcRspSyncKeyField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcRspSyncKeyField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_BrokerIDByBank_get, _pyctp.CSgitFtdcRspSyncKeyField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcRspSyncKeyField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcRspSyncKeyField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_OperNo_get, _pyctp.CSgitFtdcRspSyncKeyField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcRspSyncKeyField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcRspSyncKeyField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_RequestID_get, _pyctp.CSgitFtdcRspSyncKeyField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcRspSyncKeyField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcRspSyncKeyField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_TID_get, _pyctp.CSgitFtdcRspSyncKeyField_TID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcRspSyncKeyField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcRspSyncKeyField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_ErrorID_get, _pyctp.CSgitFtdcRspSyncKeyField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcRspSyncKeyField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcRspSyncKeyField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcRspSyncKeyField_ErrorMsg_get, _pyctp.CSgitFtdcRspSyncKeyField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcRspSyncKeyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcRspSyncKeyField
    __del__ = lambda self: None
CSgitFtdcRspSyncKeyField_swigregister = _pyctp.CSgitFtdcRspSyncKeyField_swigregister
CSgitFtdcRspSyncKeyField_swigregister(CSgitFtdcRspSyncKeyField)

class CSgitFtdcNotifyQueryAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcNotifyQueryAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcNotifyQueryAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcNotifyQueryAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcNotifyQueryAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_TradeCode_get, _pyctp.CSgitFtdcNotifyQueryAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_BankID_get, _pyctp.CSgitFtdcNotifyQueryAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_BankBranchID_get, _pyctp.CSgitFtdcNotifyQueryAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_BrokerID_get, _pyctp.CSgitFtdcNotifyQueryAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_BrokerBranchID_get, _pyctp.CSgitFtdcNotifyQueryAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcNotifyQueryAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcNotifyQueryAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_TradeDate_get, _pyctp.CSgitFtdcNotifyQueryAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcNotifyQueryAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcNotifyQueryAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_TradeTime_get, _pyctp.CSgitFtdcNotifyQueryAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_BankSerial_get, _pyctp.CSgitFtdcNotifyQueryAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcNotifyQueryAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcNotifyQueryAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_TradingDay_get, _pyctp.CSgitFtdcNotifyQueryAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcNotifyQueryAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcNotifyQueryAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_PlateSerial_get, _pyctp.CSgitFtdcNotifyQueryAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcNotifyQueryAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcNotifyQueryAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_LastFragment_get, _pyctp.CSgitFtdcNotifyQueryAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_SessionID_get, _pyctp.CSgitFtdcNotifyQueryAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CSgitFtdcNotifyQueryAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CSgitFtdcNotifyQueryAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_CustomerName_get, _pyctp.CSgitFtdcNotifyQueryAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcNotifyQueryAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcNotifyQueryAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_IdCardType_get, _pyctp.CSgitFtdcNotifyQueryAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcNotifyQueryAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcNotifyQueryAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_IdentifiedCardNo_get, _pyctp.CSgitFtdcNotifyQueryAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CSgitFtdcNotifyQueryAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CSgitFtdcNotifyQueryAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_CustType_get, _pyctp.CSgitFtdcNotifyQueryAccountField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_BankAccount_get, _pyctp.CSgitFtdcNotifyQueryAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_BankPassWord_get, _pyctp.CSgitFtdcNotifyQueryAccountField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_AccountID_get, _pyctp.CSgitFtdcNotifyQueryAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcNotifyQueryAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcNotifyQueryAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_Password_get, _pyctp.CSgitFtdcNotifyQueryAccountField_Password_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CSgitFtdcNotifyQueryAccountField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CSgitFtdcNotifyQueryAccountField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_FutureSerial_get, _pyctp.CSgitFtdcNotifyQueryAccountField_FutureSerial_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_InstallID_get, _pyctp.CSgitFtdcNotifyQueryAccountField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_UserID_get, _pyctp.CSgitFtdcNotifyQueryAccountField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcNotifyQueryAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcNotifyQueryAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_VerifyCertNoFlag_get, _pyctp.CSgitFtdcNotifyQueryAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_CurrencyID_get, _pyctp.CSgitFtdcNotifyQueryAccountField_CurrencyID_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcNotifyQueryAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcNotifyQueryAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_Digest_get, _pyctp.CSgitFtdcNotifyQueryAccountField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_BankAccType_get, _pyctp.CSgitFtdcNotifyQueryAccountField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_DeviceID_get, _pyctp.CSgitFtdcNotifyQueryAccountField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_BankSecuAccType_get, _pyctp.CSgitFtdcNotifyQueryAccountField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_BrokerIDByBank_get, _pyctp.CSgitFtdcNotifyQueryAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_BankSecuAcc_get, _pyctp.CSgitFtdcNotifyQueryAccountField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_BankPwdFlag_get, _pyctp.CSgitFtdcNotifyQueryAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcNotifyQueryAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcNotifyQueryAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_SecuPwdFlag_get, _pyctp.CSgitFtdcNotifyQueryAccountField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcNotifyQueryAccountField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcNotifyQueryAccountField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_OperNo_get, _pyctp.CSgitFtdcNotifyQueryAccountField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_RequestID_get, _pyctp.CSgitFtdcNotifyQueryAccountField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_TID_get, _pyctp.CSgitFtdcNotifyQueryAccountField_TID_set)
    __swig_setmethods__["BankUseAmount"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankUseAmount_set
    __swig_getmethods__["BankUseAmount"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankUseAmount_get
    if _newclass:
        BankUseAmount = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_BankUseAmount_get, _pyctp.CSgitFtdcNotifyQueryAccountField_BankUseAmount_set)
    __swig_setmethods__["BankFetchAmount"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankFetchAmount_set
    __swig_getmethods__["BankFetchAmount"] = _pyctp.CSgitFtdcNotifyQueryAccountField_BankFetchAmount_get
    if _newclass:
        BankFetchAmount = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_BankFetchAmount_get, _pyctp.CSgitFtdcNotifyQueryAccountField_BankFetchAmount_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcNotifyQueryAccountField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_ErrorID_get, _pyctp.CSgitFtdcNotifyQueryAccountField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcNotifyQueryAccountField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcNotifyQueryAccountField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcNotifyQueryAccountField_ErrorMsg_get, _pyctp.CSgitFtdcNotifyQueryAccountField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcNotifyQueryAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcNotifyQueryAccountField
    __del__ = lambda self: None
CSgitFtdcNotifyQueryAccountField_swigregister = _pyctp.CSgitFtdcNotifyQueryAccountField_swigregister
CSgitFtdcNotifyQueryAccountField_swigregister(CSgitFtdcNotifyQueryAccountField)

class CSgitFtdcTransferSerialField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTransferSerialField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTransferSerialField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcTransferSerialField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcTransferSerialField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcTransferSerialField_PlateSerial_get, _pyctp.CSgitFtdcTransferSerialField_PlateSerial_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcTransferSerialField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcTransferSerialField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcTransferSerialField_TradeDate_get, _pyctp.CSgitFtdcTransferSerialField_TradeDate_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcTransferSerialField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcTransferSerialField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcTransferSerialField_TradingDay_get, _pyctp.CSgitFtdcTransferSerialField_TradingDay_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcTransferSerialField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcTransferSerialField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcTransferSerialField_TradeTime_get, _pyctp.CSgitFtdcTransferSerialField_TradeTime_set)
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcTransferSerialField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcTransferSerialField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcTransferSerialField_TradeCode_get, _pyctp.CSgitFtdcTransferSerialField_TradeCode_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcTransferSerialField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcTransferSerialField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcTransferSerialField_SessionID_get, _pyctp.CSgitFtdcTransferSerialField_SessionID_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcTransferSerialField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcTransferSerialField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcTransferSerialField_BankID_get, _pyctp.CSgitFtdcTransferSerialField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcTransferSerialField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcTransferSerialField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcTransferSerialField_BankBranchID_get, _pyctp.CSgitFtdcTransferSerialField_BankBranchID_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CSgitFtdcTransferSerialField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CSgitFtdcTransferSerialField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CSgitFtdcTransferSerialField_BankAccType_get, _pyctp.CSgitFtdcTransferSerialField_BankAccType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcTransferSerialField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcTransferSerialField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcTransferSerialField_BankAccount_get, _pyctp.CSgitFtdcTransferSerialField_BankAccount_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcTransferSerialField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcTransferSerialField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcTransferSerialField_BankSerial_get, _pyctp.CSgitFtdcTransferSerialField_BankSerial_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcTransferSerialField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcTransferSerialField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcTransferSerialField_BrokerID_get, _pyctp.CSgitFtdcTransferSerialField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcTransferSerialField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcTransferSerialField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcTransferSerialField_BrokerBranchID_get, _pyctp.CSgitFtdcTransferSerialField_BrokerBranchID_set)
    __swig_setmethods__["FutureAccType"] = _pyctp.CSgitFtdcTransferSerialField_FutureAccType_set
    __swig_getmethods__["FutureAccType"] = _pyctp.CSgitFtdcTransferSerialField_FutureAccType_get
    if _newclass:
        FutureAccType = _swig_property(_pyctp.CSgitFtdcTransferSerialField_FutureAccType_get, _pyctp.CSgitFtdcTransferSerialField_FutureAccType_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcTransferSerialField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcTransferSerialField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcTransferSerialField_AccountID_get, _pyctp.CSgitFtdcTransferSerialField_AccountID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CSgitFtdcTransferSerialField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CSgitFtdcTransferSerialField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CSgitFtdcTransferSerialField_InvestorID_get, _pyctp.CSgitFtdcTransferSerialField_InvestorID_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CSgitFtdcTransferSerialField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CSgitFtdcTransferSerialField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CSgitFtdcTransferSerialField_FutureSerial_get, _pyctp.CSgitFtdcTransferSerialField_FutureSerial_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcTransferSerialField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcTransferSerialField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcTransferSerialField_IdCardType_get, _pyctp.CSgitFtdcTransferSerialField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcTransferSerialField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcTransferSerialField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcTransferSerialField_IdentifiedCardNo_get, _pyctp.CSgitFtdcTransferSerialField_IdentifiedCardNo_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcTransferSerialField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcTransferSerialField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcTransferSerialField_CurrencyID_get, _pyctp.CSgitFtdcTransferSerialField_CurrencyID_set)
    __swig_setmethods__["TradeAmount"] = _pyctp.CSgitFtdcTransferSerialField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _pyctp.CSgitFtdcTransferSerialField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_pyctp.CSgitFtdcTransferSerialField_TradeAmount_get, _pyctp.CSgitFtdcTransferSerialField_TradeAmount_set)
    __swig_setmethods__["CustFee"] = _pyctp.CSgitFtdcTransferSerialField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CSgitFtdcTransferSerialField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CSgitFtdcTransferSerialField_CustFee_get, _pyctp.CSgitFtdcTransferSerialField_CustFee_set)
    __swig_setmethods__["BrokerFee"] = _pyctp.CSgitFtdcTransferSerialField_BrokerFee_set
    __swig_getmethods__["BrokerFee"] = _pyctp.CSgitFtdcTransferSerialField_BrokerFee_get
    if _newclass:
        BrokerFee = _swig_property(_pyctp.CSgitFtdcTransferSerialField_BrokerFee_get, _pyctp.CSgitFtdcTransferSerialField_BrokerFee_set)
    __swig_setmethods__["AvailabilityFlag"] = _pyctp.CSgitFtdcTransferSerialField_AvailabilityFlag_set
    __swig_getmethods__["AvailabilityFlag"] = _pyctp.CSgitFtdcTransferSerialField_AvailabilityFlag_get
    if _newclass:
        AvailabilityFlag = _swig_property(_pyctp.CSgitFtdcTransferSerialField_AvailabilityFlag_get, _pyctp.CSgitFtdcTransferSerialField_AvailabilityFlag_set)
    __swig_setmethods__["OperatorCode"] = _pyctp.CSgitFtdcTransferSerialField_OperatorCode_set
    __swig_getmethods__["OperatorCode"] = _pyctp.CSgitFtdcTransferSerialField_OperatorCode_get
    if _newclass:
        OperatorCode = _swig_property(_pyctp.CSgitFtdcTransferSerialField_OperatorCode_get, _pyctp.CSgitFtdcTransferSerialField_OperatorCode_set)
    __swig_setmethods__["BankNewAccount"] = _pyctp.CSgitFtdcTransferSerialField_BankNewAccount_set
    __swig_getmethods__["BankNewAccount"] = _pyctp.CSgitFtdcTransferSerialField_BankNewAccount_get
    if _newclass:
        BankNewAccount = _swig_property(_pyctp.CSgitFtdcTransferSerialField_BankNewAccount_get, _pyctp.CSgitFtdcTransferSerialField_BankNewAccount_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcTransferSerialField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcTransferSerialField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcTransferSerialField_ErrorID_get, _pyctp.CSgitFtdcTransferSerialField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcTransferSerialField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcTransferSerialField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcTransferSerialField_ErrorMsg_get, _pyctp.CSgitFtdcTransferSerialField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcTransferSerialField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTransferSerialField
    __del__ = lambda self: None
CSgitFtdcTransferSerialField_swigregister = _pyctp.CSgitFtdcTransferSerialField_swigregister
CSgitFtdcTransferSerialField_swigregister(CSgitFtdcTransferSerialField)

class CSgitFtdcQryTransferSerialField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryTransferSerialField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryTransferSerialField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryTransferSerialField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryTransferSerialField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryTransferSerialField_BrokerID_get, _pyctp.CSgitFtdcQryTransferSerialField_BrokerID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcQryTransferSerialField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcQryTransferSerialField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcQryTransferSerialField_AccountID_get, _pyctp.CSgitFtdcQryTransferSerialField_AccountID_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcQryTransferSerialField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcQryTransferSerialField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcQryTransferSerialField_BankID_get, _pyctp.CSgitFtdcQryTransferSerialField_BankID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryTransferSerialField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryTransferSerialField
    __del__ = lambda self: None
CSgitFtdcQryTransferSerialField_swigregister = _pyctp.CSgitFtdcQryTransferSerialField_swigregister
CSgitFtdcQryTransferSerialField_swigregister(CSgitFtdcQryTransferSerialField)

class CSgitFtdcNotifyFutureSignInField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcNotifyFutureSignInField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcNotifyFutureSignInField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcNotifyFutureSignInField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcNotifyFutureSignInField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_TradeCode_get, _pyctp.CSgitFtdcNotifyFutureSignInField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_BankID_get, _pyctp.CSgitFtdcNotifyFutureSignInField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_BankBranchID_get, _pyctp.CSgitFtdcNotifyFutureSignInField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_BrokerID_get, _pyctp.CSgitFtdcNotifyFutureSignInField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_BrokerBranchID_get, _pyctp.CSgitFtdcNotifyFutureSignInField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcNotifyFutureSignInField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcNotifyFutureSignInField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_TradeDate_get, _pyctp.CSgitFtdcNotifyFutureSignInField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcNotifyFutureSignInField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcNotifyFutureSignInField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_TradeTime_get, _pyctp.CSgitFtdcNotifyFutureSignInField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcNotifyFutureSignInField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcNotifyFutureSignInField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_BankSerial_get, _pyctp.CSgitFtdcNotifyFutureSignInField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcNotifyFutureSignInField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcNotifyFutureSignInField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_TradingDay_get, _pyctp.CSgitFtdcNotifyFutureSignInField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcNotifyFutureSignInField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcNotifyFutureSignInField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_PlateSerial_get, _pyctp.CSgitFtdcNotifyFutureSignInField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcNotifyFutureSignInField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcNotifyFutureSignInField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_LastFragment_get, _pyctp.CSgitFtdcNotifyFutureSignInField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_SessionID_get, _pyctp.CSgitFtdcNotifyFutureSignInField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_InstallID_get, _pyctp.CSgitFtdcNotifyFutureSignInField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_UserID_get, _pyctp.CSgitFtdcNotifyFutureSignInField_UserID_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcNotifyFutureSignInField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcNotifyFutureSignInField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_Digest_get, _pyctp.CSgitFtdcNotifyFutureSignInField_Digest_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_CurrencyID_get, _pyctp.CSgitFtdcNotifyFutureSignInField_CurrencyID_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_DeviceID_get, _pyctp.CSgitFtdcNotifyFutureSignInField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcNotifyFutureSignInField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcNotifyFutureSignInField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_BrokerIDByBank_get, _pyctp.CSgitFtdcNotifyFutureSignInField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcNotifyFutureSignInField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcNotifyFutureSignInField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_OperNo_get, _pyctp.CSgitFtdcNotifyFutureSignInField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_RequestID_get, _pyctp.CSgitFtdcNotifyFutureSignInField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_TID_get, _pyctp.CSgitFtdcNotifyFutureSignInField_TID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcNotifyFutureSignInField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_ErrorID_get, _pyctp.CSgitFtdcNotifyFutureSignInField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcNotifyFutureSignInField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcNotifyFutureSignInField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_ErrorMsg_get, _pyctp.CSgitFtdcNotifyFutureSignInField_ErrorMsg_set)
    __swig_setmethods__["PinKey"] = _pyctp.CSgitFtdcNotifyFutureSignInField_PinKey_set
    __swig_getmethods__["PinKey"] = _pyctp.CSgitFtdcNotifyFutureSignInField_PinKey_get
    if _newclass:
        PinKey = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_PinKey_get, _pyctp.CSgitFtdcNotifyFutureSignInField_PinKey_set)
    __swig_setmethods__["MacKey"] = _pyctp.CSgitFtdcNotifyFutureSignInField_MacKey_set
    __swig_getmethods__["MacKey"] = _pyctp.CSgitFtdcNotifyFutureSignInField_MacKey_get
    if _newclass:
        MacKey = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignInField_MacKey_get, _pyctp.CSgitFtdcNotifyFutureSignInField_MacKey_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcNotifyFutureSignInField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcNotifyFutureSignInField
    __del__ = lambda self: None
CSgitFtdcNotifyFutureSignInField_swigregister = _pyctp.CSgitFtdcNotifyFutureSignInField_swigregister
CSgitFtdcNotifyFutureSignInField_swigregister(CSgitFtdcNotifyFutureSignInField)

class CSgitFtdcNotifyFutureSignOutField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcNotifyFutureSignOutField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcNotifyFutureSignOutField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_TradeCode_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_BankID_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_BankBranchID_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_BrokerID_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_BrokerBranchID_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_TradeDate_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_TradeTime_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_BankSerial_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_TradingDay_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_PlateSerial_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_LastFragment_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_SessionID_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_InstallID_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_UserID_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_UserID_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_Digest_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_Digest_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_CurrencyID_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_CurrencyID_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_DeviceID_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_BrokerIDByBank_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_OperNo_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_RequestID_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_TID_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_TID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_ErrorID_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcNotifyFutureSignOutField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcNotifyFutureSignOutField_ErrorMsg_get, _pyctp.CSgitFtdcNotifyFutureSignOutField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcNotifyFutureSignOutField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcNotifyFutureSignOutField
    __del__ = lambda self: None
CSgitFtdcNotifyFutureSignOutField_swigregister = _pyctp.CSgitFtdcNotifyFutureSignOutField_swigregister
CSgitFtdcNotifyFutureSignOutField_swigregister(CSgitFtdcNotifyFutureSignOutField)

class CSgitFtdcNotifySyncKeyField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcNotifySyncKeyField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcNotifySyncKeyField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcNotifySyncKeyField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcNotifySyncKeyField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_TradeCode_get, _pyctp.CSgitFtdcNotifySyncKeyField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcNotifySyncKeyField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcNotifySyncKeyField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_BankID_get, _pyctp.CSgitFtdcNotifySyncKeyField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcNotifySyncKeyField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcNotifySyncKeyField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_BankBranchID_get, _pyctp.CSgitFtdcNotifySyncKeyField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcNotifySyncKeyField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcNotifySyncKeyField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_BrokerID_get, _pyctp.CSgitFtdcNotifySyncKeyField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcNotifySyncKeyField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcNotifySyncKeyField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_BrokerBranchID_get, _pyctp.CSgitFtdcNotifySyncKeyField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcNotifySyncKeyField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcNotifySyncKeyField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_TradeDate_get, _pyctp.CSgitFtdcNotifySyncKeyField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcNotifySyncKeyField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcNotifySyncKeyField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_TradeTime_get, _pyctp.CSgitFtdcNotifySyncKeyField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcNotifySyncKeyField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcNotifySyncKeyField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_BankSerial_get, _pyctp.CSgitFtdcNotifySyncKeyField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcNotifySyncKeyField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcNotifySyncKeyField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_TradingDay_get, _pyctp.CSgitFtdcNotifySyncKeyField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcNotifySyncKeyField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcNotifySyncKeyField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_PlateSerial_get, _pyctp.CSgitFtdcNotifySyncKeyField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcNotifySyncKeyField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcNotifySyncKeyField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_LastFragment_get, _pyctp.CSgitFtdcNotifySyncKeyField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcNotifySyncKeyField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcNotifySyncKeyField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_SessionID_get, _pyctp.CSgitFtdcNotifySyncKeyField_SessionID_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcNotifySyncKeyField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcNotifySyncKeyField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_InstallID_get, _pyctp.CSgitFtdcNotifySyncKeyField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcNotifySyncKeyField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcNotifySyncKeyField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_UserID_get, _pyctp.CSgitFtdcNotifySyncKeyField_UserID_set)
    __swig_setmethods__["Message"] = _pyctp.CSgitFtdcNotifySyncKeyField_Message_set
    __swig_getmethods__["Message"] = _pyctp.CSgitFtdcNotifySyncKeyField_Message_get
    if _newclass:
        Message = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_Message_get, _pyctp.CSgitFtdcNotifySyncKeyField_Message_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcNotifySyncKeyField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcNotifySyncKeyField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_DeviceID_get, _pyctp.CSgitFtdcNotifySyncKeyField_DeviceID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcNotifySyncKeyField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcNotifySyncKeyField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_BrokerIDByBank_get, _pyctp.CSgitFtdcNotifySyncKeyField_BrokerIDByBank_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcNotifySyncKeyField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcNotifySyncKeyField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_OperNo_get, _pyctp.CSgitFtdcNotifySyncKeyField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CSgitFtdcNotifySyncKeyField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CSgitFtdcNotifySyncKeyField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_RequestID_get, _pyctp.CSgitFtdcNotifySyncKeyField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcNotifySyncKeyField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcNotifySyncKeyField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_TID_get, _pyctp.CSgitFtdcNotifySyncKeyField_TID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcNotifySyncKeyField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcNotifySyncKeyField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_ErrorID_get, _pyctp.CSgitFtdcNotifySyncKeyField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcNotifySyncKeyField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcNotifySyncKeyField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcNotifySyncKeyField_ErrorMsg_get, _pyctp.CSgitFtdcNotifySyncKeyField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcNotifySyncKeyField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcNotifySyncKeyField
    __del__ = lambda self: None
CSgitFtdcNotifySyncKeyField_swigregister = _pyctp.CSgitFtdcNotifySyncKeyField_swigregister
CSgitFtdcNotifySyncKeyField_swigregister(CSgitFtdcNotifySyncKeyField)

class CSgitFtdcQryAccountregisterField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcQryAccountregisterField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcQryAccountregisterField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcQryAccountregisterField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcQryAccountregisterField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcQryAccountregisterField_BrokerID_get, _pyctp.CSgitFtdcQryAccountregisterField_BrokerID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcQryAccountregisterField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcQryAccountregisterField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcQryAccountregisterField_AccountID_get, _pyctp.CSgitFtdcQryAccountregisterField_AccountID_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcQryAccountregisterField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcQryAccountregisterField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcQryAccountregisterField_BankID_get, _pyctp.CSgitFtdcQryAccountregisterField_BankID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcQryAccountregisterField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcQryAccountregisterField
    __del__ = lambda self: None
CSgitFtdcQryAccountregisterField_swigregister = _pyctp.CSgitFtdcQryAccountregisterField_swigregister
CSgitFtdcQryAccountregisterField_swigregister(CSgitFtdcQryAccountregisterField)

class CSgitFtdcAccountregisterField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcAccountregisterField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcAccountregisterField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeDay"] = _pyctp.CSgitFtdcAccountregisterField_TradeDay_set
    __swig_getmethods__["TradeDay"] = _pyctp.CSgitFtdcAccountregisterField_TradeDay_get
    if _newclass:
        TradeDay = _swig_property(_pyctp.CSgitFtdcAccountregisterField_TradeDay_get, _pyctp.CSgitFtdcAccountregisterField_TradeDay_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcAccountregisterField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcAccountregisterField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcAccountregisterField_BankID_get, _pyctp.CSgitFtdcAccountregisterField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcAccountregisterField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcAccountregisterField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcAccountregisterField_BankBranchID_get, _pyctp.CSgitFtdcAccountregisterField_BankBranchID_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcAccountregisterField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcAccountregisterField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcAccountregisterField_BankAccount_get, _pyctp.CSgitFtdcAccountregisterField_BankAccount_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcAccountregisterField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcAccountregisterField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcAccountregisterField_BrokerID_get, _pyctp.CSgitFtdcAccountregisterField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcAccountregisterField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcAccountregisterField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcAccountregisterField_BrokerBranchID_get, _pyctp.CSgitFtdcAccountregisterField_BrokerBranchID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcAccountregisterField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcAccountregisterField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcAccountregisterField_AccountID_get, _pyctp.CSgitFtdcAccountregisterField_AccountID_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcAccountregisterField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcAccountregisterField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcAccountregisterField_IdCardType_get, _pyctp.CSgitFtdcAccountregisterField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcAccountregisterField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcAccountregisterField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcAccountregisterField_IdentifiedCardNo_get, _pyctp.CSgitFtdcAccountregisterField_IdentifiedCardNo_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CSgitFtdcAccountregisterField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CSgitFtdcAccountregisterField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CSgitFtdcAccountregisterField_CustomerName_get, _pyctp.CSgitFtdcAccountregisterField_CustomerName_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcAccountregisterField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcAccountregisterField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcAccountregisterField_CurrencyID_get, _pyctp.CSgitFtdcAccountregisterField_CurrencyID_set)
    __swig_setmethods__["OpenOrDestroy"] = _pyctp.CSgitFtdcAccountregisterField_OpenOrDestroy_set
    __swig_getmethods__["OpenOrDestroy"] = _pyctp.CSgitFtdcAccountregisterField_OpenOrDestroy_get
    if _newclass:
        OpenOrDestroy = _swig_property(_pyctp.CSgitFtdcAccountregisterField_OpenOrDestroy_get, _pyctp.CSgitFtdcAccountregisterField_OpenOrDestroy_set)
    __swig_setmethods__["RegDate"] = _pyctp.CSgitFtdcAccountregisterField_RegDate_set
    __swig_getmethods__["RegDate"] = _pyctp.CSgitFtdcAccountregisterField_RegDate_get
    if _newclass:
        RegDate = _swig_property(_pyctp.CSgitFtdcAccountregisterField_RegDate_get, _pyctp.CSgitFtdcAccountregisterField_RegDate_set)
    __swig_setmethods__["OutDate"] = _pyctp.CSgitFtdcAccountregisterField_OutDate_set
    __swig_getmethods__["OutDate"] = _pyctp.CSgitFtdcAccountregisterField_OutDate_get
    if _newclass:
        OutDate = _swig_property(_pyctp.CSgitFtdcAccountregisterField_OutDate_get, _pyctp.CSgitFtdcAccountregisterField_OutDate_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcAccountregisterField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcAccountregisterField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcAccountregisterField_TID_get, _pyctp.CSgitFtdcAccountregisterField_TID_set)
    __swig_setmethods__["CustType"] = _pyctp.CSgitFtdcAccountregisterField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CSgitFtdcAccountregisterField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CSgitFtdcAccountregisterField_CustType_get, _pyctp.CSgitFtdcAccountregisterField_CustType_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CSgitFtdcAccountregisterField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CSgitFtdcAccountregisterField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CSgitFtdcAccountregisterField_BankAccType_get, _pyctp.CSgitFtdcAccountregisterField_BankAccType_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcAccountregisterField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcAccountregisterField
    __del__ = lambda self: None
CSgitFtdcAccountregisterField_swigregister = _pyctp.CSgitFtdcAccountregisterField_swigregister
CSgitFtdcAccountregisterField_swigregister(CSgitFtdcAccountregisterField)

class CSgitFtdcOpenAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcOpenAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcOpenAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcOpenAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcOpenAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcOpenAccountField_TradeCode_get, _pyctp.CSgitFtdcOpenAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcOpenAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcOpenAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcOpenAccountField_BankID_get, _pyctp.CSgitFtdcOpenAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcOpenAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcOpenAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcOpenAccountField_BankBranchID_get, _pyctp.CSgitFtdcOpenAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcOpenAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcOpenAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcOpenAccountField_BrokerID_get, _pyctp.CSgitFtdcOpenAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcOpenAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcOpenAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcOpenAccountField_BrokerBranchID_get, _pyctp.CSgitFtdcOpenAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcOpenAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcOpenAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcOpenAccountField_TradeDate_get, _pyctp.CSgitFtdcOpenAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcOpenAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcOpenAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcOpenAccountField_TradeTime_get, _pyctp.CSgitFtdcOpenAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcOpenAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcOpenAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcOpenAccountField_BankSerial_get, _pyctp.CSgitFtdcOpenAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcOpenAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcOpenAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcOpenAccountField_TradingDay_get, _pyctp.CSgitFtdcOpenAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcOpenAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcOpenAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcOpenAccountField_PlateSerial_get, _pyctp.CSgitFtdcOpenAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcOpenAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcOpenAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcOpenAccountField_LastFragment_get, _pyctp.CSgitFtdcOpenAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcOpenAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcOpenAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcOpenAccountField_SessionID_get, _pyctp.CSgitFtdcOpenAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CSgitFtdcOpenAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CSgitFtdcOpenAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CSgitFtdcOpenAccountField_CustomerName_get, _pyctp.CSgitFtdcOpenAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcOpenAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcOpenAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcOpenAccountField_IdCardType_get, _pyctp.CSgitFtdcOpenAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcOpenAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcOpenAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcOpenAccountField_IdentifiedCardNo_get, _pyctp.CSgitFtdcOpenAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["Gender"] = _pyctp.CSgitFtdcOpenAccountField_Gender_set
    __swig_getmethods__["Gender"] = _pyctp.CSgitFtdcOpenAccountField_Gender_get
    if _newclass:
        Gender = _swig_property(_pyctp.CSgitFtdcOpenAccountField_Gender_get, _pyctp.CSgitFtdcOpenAccountField_Gender_set)
    __swig_setmethods__["CountryCode"] = _pyctp.CSgitFtdcOpenAccountField_CountryCode_set
    __swig_getmethods__["CountryCode"] = _pyctp.CSgitFtdcOpenAccountField_CountryCode_get
    if _newclass:
        CountryCode = _swig_property(_pyctp.CSgitFtdcOpenAccountField_CountryCode_get, _pyctp.CSgitFtdcOpenAccountField_CountryCode_set)
    __swig_setmethods__["CustType"] = _pyctp.CSgitFtdcOpenAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CSgitFtdcOpenAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CSgitFtdcOpenAccountField_CustType_get, _pyctp.CSgitFtdcOpenAccountField_CustType_set)
    __swig_setmethods__["Address"] = _pyctp.CSgitFtdcOpenAccountField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CSgitFtdcOpenAccountField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CSgitFtdcOpenAccountField_Address_get, _pyctp.CSgitFtdcOpenAccountField_Address_set)
    __swig_setmethods__["ZipCode"] = _pyctp.CSgitFtdcOpenAccountField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _pyctp.CSgitFtdcOpenAccountField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_pyctp.CSgitFtdcOpenAccountField_ZipCode_get, _pyctp.CSgitFtdcOpenAccountField_ZipCode_set)
    __swig_setmethods__["Telephone"] = _pyctp.CSgitFtdcOpenAccountField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CSgitFtdcOpenAccountField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CSgitFtdcOpenAccountField_Telephone_get, _pyctp.CSgitFtdcOpenAccountField_Telephone_set)
    __swig_setmethods__["MobilePhone"] = _pyctp.CSgitFtdcOpenAccountField_MobilePhone_set
    __swig_getmethods__["MobilePhone"] = _pyctp.CSgitFtdcOpenAccountField_MobilePhone_get
    if _newclass:
        MobilePhone = _swig_property(_pyctp.CSgitFtdcOpenAccountField_MobilePhone_get, _pyctp.CSgitFtdcOpenAccountField_MobilePhone_set)
    __swig_setmethods__["Fax"] = _pyctp.CSgitFtdcOpenAccountField_Fax_set
    __swig_getmethods__["Fax"] = _pyctp.CSgitFtdcOpenAccountField_Fax_get
    if _newclass:
        Fax = _swig_property(_pyctp.CSgitFtdcOpenAccountField_Fax_get, _pyctp.CSgitFtdcOpenAccountField_Fax_set)
    __swig_setmethods__["EMail"] = _pyctp.CSgitFtdcOpenAccountField_EMail_set
    __swig_getmethods__["EMail"] = _pyctp.CSgitFtdcOpenAccountField_EMail_get
    if _newclass:
        EMail = _swig_property(_pyctp.CSgitFtdcOpenAccountField_EMail_get, _pyctp.CSgitFtdcOpenAccountField_EMail_set)
    __swig_setmethods__["MoneyAccountStatus"] = _pyctp.CSgitFtdcOpenAccountField_MoneyAccountStatus_set
    __swig_getmethods__["MoneyAccountStatus"] = _pyctp.CSgitFtdcOpenAccountField_MoneyAccountStatus_get
    if _newclass:
        MoneyAccountStatus = _swig_property(_pyctp.CSgitFtdcOpenAccountField_MoneyAccountStatus_get, _pyctp.CSgitFtdcOpenAccountField_MoneyAccountStatus_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcOpenAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcOpenAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcOpenAccountField_BankAccount_get, _pyctp.CSgitFtdcOpenAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CSgitFtdcOpenAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CSgitFtdcOpenAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CSgitFtdcOpenAccountField_BankPassWord_get, _pyctp.CSgitFtdcOpenAccountField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcOpenAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcOpenAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcOpenAccountField_AccountID_get, _pyctp.CSgitFtdcOpenAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcOpenAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcOpenAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcOpenAccountField_Password_get, _pyctp.CSgitFtdcOpenAccountField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcOpenAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcOpenAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcOpenAccountField_InstallID_get, _pyctp.CSgitFtdcOpenAccountField_InstallID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcOpenAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcOpenAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CSgitFtdcOpenAccountField_VerifyCertNoFlag_get, _pyctp.CSgitFtdcOpenAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcOpenAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcOpenAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcOpenAccountField_CurrencyID_get, _pyctp.CSgitFtdcOpenAccountField_CurrencyID_set)
    __swig_setmethods__["CashExchangeCode"] = _pyctp.CSgitFtdcOpenAccountField_CashExchangeCode_set
    __swig_getmethods__["CashExchangeCode"] = _pyctp.CSgitFtdcOpenAccountField_CashExchangeCode_get
    if _newclass:
        CashExchangeCode = _swig_property(_pyctp.CSgitFtdcOpenAccountField_CashExchangeCode_get, _pyctp.CSgitFtdcOpenAccountField_CashExchangeCode_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcOpenAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcOpenAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcOpenAccountField_Digest_get, _pyctp.CSgitFtdcOpenAccountField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CSgitFtdcOpenAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CSgitFtdcOpenAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CSgitFtdcOpenAccountField_BankAccType_get, _pyctp.CSgitFtdcOpenAccountField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcOpenAccountField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcOpenAccountField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcOpenAccountField_DeviceID_get, _pyctp.CSgitFtdcOpenAccountField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcOpenAccountField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcOpenAccountField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CSgitFtdcOpenAccountField_BankSecuAccType_get, _pyctp.CSgitFtdcOpenAccountField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcOpenAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcOpenAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcOpenAccountField_BrokerIDByBank_get, _pyctp.CSgitFtdcOpenAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcOpenAccountField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcOpenAccountField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CSgitFtdcOpenAccountField_BankSecuAcc_get, _pyctp.CSgitFtdcOpenAccountField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcOpenAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcOpenAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CSgitFtdcOpenAccountField_BankPwdFlag_get, _pyctp.CSgitFtdcOpenAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcOpenAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcOpenAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CSgitFtdcOpenAccountField_SecuPwdFlag_get, _pyctp.CSgitFtdcOpenAccountField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcOpenAccountField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcOpenAccountField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcOpenAccountField_OperNo_get, _pyctp.CSgitFtdcOpenAccountField_OperNo_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcOpenAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcOpenAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcOpenAccountField_TID_get, _pyctp.CSgitFtdcOpenAccountField_TID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcOpenAccountField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcOpenAccountField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcOpenAccountField_ErrorID_get, _pyctp.CSgitFtdcOpenAccountField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcOpenAccountField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcOpenAccountField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcOpenAccountField_ErrorMsg_get, _pyctp.CSgitFtdcOpenAccountField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcOpenAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcOpenAccountField
    __del__ = lambda self: None
CSgitFtdcOpenAccountField_swigregister = _pyctp.CSgitFtdcOpenAccountField_swigregister
CSgitFtdcOpenAccountField_swigregister(CSgitFtdcOpenAccountField)

class CSgitFtdcCancelAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcCancelAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcCancelAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcCancelAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcCancelAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcCancelAccountField_TradeCode_get, _pyctp.CSgitFtdcCancelAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcCancelAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcCancelAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcCancelAccountField_BankID_get, _pyctp.CSgitFtdcCancelAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcCancelAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcCancelAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcCancelAccountField_BankBranchID_get, _pyctp.CSgitFtdcCancelAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcCancelAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcCancelAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcCancelAccountField_BrokerID_get, _pyctp.CSgitFtdcCancelAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcCancelAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcCancelAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcCancelAccountField_BrokerBranchID_get, _pyctp.CSgitFtdcCancelAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcCancelAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcCancelAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcCancelAccountField_TradeDate_get, _pyctp.CSgitFtdcCancelAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcCancelAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcCancelAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcCancelAccountField_TradeTime_get, _pyctp.CSgitFtdcCancelAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcCancelAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcCancelAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcCancelAccountField_BankSerial_get, _pyctp.CSgitFtdcCancelAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcCancelAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcCancelAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcCancelAccountField_TradingDay_get, _pyctp.CSgitFtdcCancelAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcCancelAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcCancelAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcCancelAccountField_PlateSerial_get, _pyctp.CSgitFtdcCancelAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcCancelAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcCancelAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcCancelAccountField_LastFragment_get, _pyctp.CSgitFtdcCancelAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcCancelAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcCancelAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcCancelAccountField_SessionID_get, _pyctp.CSgitFtdcCancelAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CSgitFtdcCancelAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CSgitFtdcCancelAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CSgitFtdcCancelAccountField_CustomerName_get, _pyctp.CSgitFtdcCancelAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcCancelAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcCancelAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcCancelAccountField_IdCardType_get, _pyctp.CSgitFtdcCancelAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcCancelAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcCancelAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcCancelAccountField_IdentifiedCardNo_get, _pyctp.CSgitFtdcCancelAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["Gender"] = _pyctp.CSgitFtdcCancelAccountField_Gender_set
    __swig_getmethods__["Gender"] = _pyctp.CSgitFtdcCancelAccountField_Gender_get
    if _newclass:
        Gender = _swig_property(_pyctp.CSgitFtdcCancelAccountField_Gender_get, _pyctp.CSgitFtdcCancelAccountField_Gender_set)
    __swig_setmethods__["CountryCode"] = _pyctp.CSgitFtdcCancelAccountField_CountryCode_set
    __swig_getmethods__["CountryCode"] = _pyctp.CSgitFtdcCancelAccountField_CountryCode_get
    if _newclass:
        CountryCode = _swig_property(_pyctp.CSgitFtdcCancelAccountField_CountryCode_get, _pyctp.CSgitFtdcCancelAccountField_CountryCode_set)
    __swig_setmethods__["CustType"] = _pyctp.CSgitFtdcCancelAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CSgitFtdcCancelAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CSgitFtdcCancelAccountField_CustType_get, _pyctp.CSgitFtdcCancelAccountField_CustType_set)
    __swig_setmethods__["Address"] = _pyctp.CSgitFtdcCancelAccountField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CSgitFtdcCancelAccountField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CSgitFtdcCancelAccountField_Address_get, _pyctp.CSgitFtdcCancelAccountField_Address_set)
    __swig_setmethods__["ZipCode"] = _pyctp.CSgitFtdcCancelAccountField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _pyctp.CSgitFtdcCancelAccountField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_pyctp.CSgitFtdcCancelAccountField_ZipCode_get, _pyctp.CSgitFtdcCancelAccountField_ZipCode_set)
    __swig_setmethods__["Telephone"] = _pyctp.CSgitFtdcCancelAccountField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CSgitFtdcCancelAccountField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CSgitFtdcCancelAccountField_Telephone_get, _pyctp.CSgitFtdcCancelAccountField_Telephone_set)
    __swig_setmethods__["MobilePhone"] = _pyctp.CSgitFtdcCancelAccountField_MobilePhone_set
    __swig_getmethods__["MobilePhone"] = _pyctp.CSgitFtdcCancelAccountField_MobilePhone_get
    if _newclass:
        MobilePhone = _swig_property(_pyctp.CSgitFtdcCancelAccountField_MobilePhone_get, _pyctp.CSgitFtdcCancelAccountField_MobilePhone_set)
    __swig_setmethods__["Fax"] = _pyctp.CSgitFtdcCancelAccountField_Fax_set
    __swig_getmethods__["Fax"] = _pyctp.CSgitFtdcCancelAccountField_Fax_get
    if _newclass:
        Fax = _swig_property(_pyctp.CSgitFtdcCancelAccountField_Fax_get, _pyctp.CSgitFtdcCancelAccountField_Fax_set)
    __swig_setmethods__["EMail"] = _pyctp.CSgitFtdcCancelAccountField_EMail_set
    __swig_getmethods__["EMail"] = _pyctp.CSgitFtdcCancelAccountField_EMail_get
    if _newclass:
        EMail = _swig_property(_pyctp.CSgitFtdcCancelAccountField_EMail_get, _pyctp.CSgitFtdcCancelAccountField_EMail_set)
    __swig_setmethods__["MoneyAccountStatus"] = _pyctp.CSgitFtdcCancelAccountField_MoneyAccountStatus_set
    __swig_getmethods__["MoneyAccountStatus"] = _pyctp.CSgitFtdcCancelAccountField_MoneyAccountStatus_get
    if _newclass:
        MoneyAccountStatus = _swig_property(_pyctp.CSgitFtdcCancelAccountField_MoneyAccountStatus_get, _pyctp.CSgitFtdcCancelAccountField_MoneyAccountStatus_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcCancelAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcCancelAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcCancelAccountField_BankAccount_get, _pyctp.CSgitFtdcCancelAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CSgitFtdcCancelAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CSgitFtdcCancelAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CSgitFtdcCancelAccountField_BankPassWord_get, _pyctp.CSgitFtdcCancelAccountField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcCancelAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcCancelAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcCancelAccountField_AccountID_get, _pyctp.CSgitFtdcCancelAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcCancelAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcCancelAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcCancelAccountField_Password_get, _pyctp.CSgitFtdcCancelAccountField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcCancelAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcCancelAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcCancelAccountField_InstallID_get, _pyctp.CSgitFtdcCancelAccountField_InstallID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcCancelAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcCancelAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CSgitFtdcCancelAccountField_VerifyCertNoFlag_get, _pyctp.CSgitFtdcCancelAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcCancelAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcCancelAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcCancelAccountField_CurrencyID_get, _pyctp.CSgitFtdcCancelAccountField_CurrencyID_set)
    __swig_setmethods__["CashExchangeCode"] = _pyctp.CSgitFtdcCancelAccountField_CashExchangeCode_set
    __swig_getmethods__["CashExchangeCode"] = _pyctp.CSgitFtdcCancelAccountField_CashExchangeCode_get
    if _newclass:
        CashExchangeCode = _swig_property(_pyctp.CSgitFtdcCancelAccountField_CashExchangeCode_get, _pyctp.CSgitFtdcCancelAccountField_CashExchangeCode_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcCancelAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcCancelAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcCancelAccountField_Digest_get, _pyctp.CSgitFtdcCancelAccountField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CSgitFtdcCancelAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CSgitFtdcCancelAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CSgitFtdcCancelAccountField_BankAccType_get, _pyctp.CSgitFtdcCancelAccountField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CSgitFtdcCancelAccountField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CSgitFtdcCancelAccountField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CSgitFtdcCancelAccountField_DeviceID_get, _pyctp.CSgitFtdcCancelAccountField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcCancelAccountField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CSgitFtdcCancelAccountField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CSgitFtdcCancelAccountField_BankSecuAccType_get, _pyctp.CSgitFtdcCancelAccountField_BankSecuAccType_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcCancelAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcCancelAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcCancelAccountField_BrokerIDByBank_get, _pyctp.CSgitFtdcCancelAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcCancelAccountField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CSgitFtdcCancelAccountField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CSgitFtdcCancelAccountField_BankSecuAcc_get, _pyctp.CSgitFtdcCancelAccountField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcCancelAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcCancelAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CSgitFtdcCancelAccountField_BankPwdFlag_get, _pyctp.CSgitFtdcCancelAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcCancelAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcCancelAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CSgitFtdcCancelAccountField_SecuPwdFlag_get, _pyctp.CSgitFtdcCancelAccountField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CSgitFtdcCancelAccountField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CSgitFtdcCancelAccountField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CSgitFtdcCancelAccountField_OperNo_get, _pyctp.CSgitFtdcCancelAccountField_OperNo_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcCancelAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcCancelAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcCancelAccountField_TID_get, _pyctp.CSgitFtdcCancelAccountField_TID_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcCancelAccountField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcCancelAccountField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcCancelAccountField_ErrorID_get, _pyctp.CSgitFtdcCancelAccountField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcCancelAccountField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcCancelAccountField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcCancelAccountField_ErrorMsg_get, _pyctp.CSgitFtdcCancelAccountField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcCancelAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcCancelAccountField
    __del__ = lambda self: None
CSgitFtdcCancelAccountField_swigregister = _pyctp.CSgitFtdcCancelAccountField_swigregister
CSgitFtdcCancelAccountField_swigregister(CSgitFtdcCancelAccountField)

class CSgitFtdcChangeAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcChangeAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcChangeAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CSgitFtdcChangeAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CSgitFtdcChangeAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CSgitFtdcChangeAccountField_TradeCode_get, _pyctp.CSgitFtdcChangeAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CSgitFtdcChangeAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CSgitFtdcChangeAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CSgitFtdcChangeAccountField_BankID_get, _pyctp.CSgitFtdcChangeAccountField_BankID_set)
    __swig_setmethods__["BankBranchID"] = _pyctp.CSgitFtdcChangeAccountField_BankBranchID_set
    __swig_getmethods__["BankBranchID"] = _pyctp.CSgitFtdcChangeAccountField_BankBranchID_get
    if _newclass:
        BankBranchID = _swig_property(_pyctp.CSgitFtdcChangeAccountField_BankBranchID_get, _pyctp.CSgitFtdcChangeAccountField_BankBranchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcChangeAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcChangeAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcChangeAccountField_BrokerID_get, _pyctp.CSgitFtdcChangeAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcChangeAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CSgitFtdcChangeAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CSgitFtdcChangeAccountField_BrokerBranchID_get, _pyctp.CSgitFtdcChangeAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CSgitFtdcChangeAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CSgitFtdcChangeAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CSgitFtdcChangeAccountField_TradeDate_get, _pyctp.CSgitFtdcChangeAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CSgitFtdcChangeAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CSgitFtdcChangeAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CSgitFtdcChangeAccountField_TradeTime_get, _pyctp.CSgitFtdcChangeAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CSgitFtdcChangeAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CSgitFtdcChangeAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CSgitFtdcChangeAccountField_BankSerial_get, _pyctp.CSgitFtdcChangeAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CSgitFtdcChangeAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CSgitFtdcChangeAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CSgitFtdcChangeAccountField_TradingDay_get, _pyctp.CSgitFtdcChangeAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CSgitFtdcChangeAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CSgitFtdcChangeAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CSgitFtdcChangeAccountField_PlateSerial_get, _pyctp.CSgitFtdcChangeAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CSgitFtdcChangeAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CSgitFtdcChangeAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CSgitFtdcChangeAccountField_LastFragment_get, _pyctp.CSgitFtdcChangeAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CSgitFtdcChangeAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CSgitFtdcChangeAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CSgitFtdcChangeAccountField_SessionID_get, _pyctp.CSgitFtdcChangeAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CSgitFtdcChangeAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CSgitFtdcChangeAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CSgitFtdcChangeAccountField_CustomerName_get, _pyctp.CSgitFtdcChangeAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CSgitFtdcChangeAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CSgitFtdcChangeAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CSgitFtdcChangeAccountField_IdCardType_get, _pyctp.CSgitFtdcChangeAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcChangeAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CSgitFtdcChangeAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CSgitFtdcChangeAccountField_IdentifiedCardNo_get, _pyctp.CSgitFtdcChangeAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["Gender"] = _pyctp.CSgitFtdcChangeAccountField_Gender_set
    __swig_getmethods__["Gender"] = _pyctp.CSgitFtdcChangeAccountField_Gender_get
    if _newclass:
        Gender = _swig_property(_pyctp.CSgitFtdcChangeAccountField_Gender_get, _pyctp.CSgitFtdcChangeAccountField_Gender_set)
    __swig_setmethods__["CountryCode"] = _pyctp.CSgitFtdcChangeAccountField_CountryCode_set
    __swig_getmethods__["CountryCode"] = _pyctp.CSgitFtdcChangeAccountField_CountryCode_get
    if _newclass:
        CountryCode = _swig_property(_pyctp.CSgitFtdcChangeAccountField_CountryCode_get, _pyctp.CSgitFtdcChangeAccountField_CountryCode_set)
    __swig_setmethods__["CustType"] = _pyctp.CSgitFtdcChangeAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CSgitFtdcChangeAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CSgitFtdcChangeAccountField_CustType_get, _pyctp.CSgitFtdcChangeAccountField_CustType_set)
    __swig_setmethods__["Address"] = _pyctp.CSgitFtdcChangeAccountField_Address_set
    __swig_getmethods__["Address"] = _pyctp.CSgitFtdcChangeAccountField_Address_get
    if _newclass:
        Address = _swig_property(_pyctp.CSgitFtdcChangeAccountField_Address_get, _pyctp.CSgitFtdcChangeAccountField_Address_set)
    __swig_setmethods__["ZipCode"] = _pyctp.CSgitFtdcChangeAccountField_ZipCode_set
    __swig_getmethods__["ZipCode"] = _pyctp.CSgitFtdcChangeAccountField_ZipCode_get
    if _newclass:
        ZipCode = _swig_property(_pyctp.CSgitFtdcChangeAccountField_ZipCode_get, _pyctp.CSgitFtdcChangeAccountField_ZipCode_set)
    __swig_setmethods__["Telephone"] = _pyctp.CSgitFtdcChangeAccountField_Telephone_set
    __swig_getmethods__["Telephone"] = _pyctp.CSgitFtdcChangeAccountField_Telephone_get
    if _newclass:
        Telephone = _swig_property(_pyctp.CSgitFtdcChangeAccountField_Telephone_get, _pyctp.CSgitFtdcChangeAccountField_Telephone_set)
    __swig_setmethods__["MobilePhone"] = _pyctp.CSgitFtdcChangeAccountField_MobilePhone_set
    __swig_getmethods__["MobilePhone"] = _pyctp.CSgitFtdcChangeAccountField_MobilePhone_get
    if _newclass:
        MobilePhone = _swig_property(_pyctp.CSgitFtdcChangeAccountField_MobilePhone_get, _pyctp.CSgitFtdcChangeAccountField_MobilePhone_set)
    __swig_setmethods__["Fax"] = _pyctp.CSgitFtdcChangeAccountField_Fax_set
    __swig_getmethods__["Fax"] = _pyctp.CSgitFtdcChangeAccountField_Fax_get
    if _newclass:
        Fax = _swig_property(_pyctp.CSgitFtdcChangeAccountField_Fax_get, _pyctp.CSgitFtdcChangeAccountField_Fax_set)
    __swig_setmethods__["EMail"] = _pyctp.CSgitFtdcChangeAccountField_EMail_set
    __swig_getmethods__["EMail"] = _pyctp.CSgitFtdcChangeAccountField_EMail_get
    if _newclass:
        EMail = _swig_property(_pyctp.CSgitFtdcChangeAccountField_EMail_get, _pyctp.CSgitFtdcChangeAccountField_EMail_set)
    __swig_setmethods__["MoneyAccountStatus"] = _pyctp.CSgitFtdcChangeAccountField_MoneyAccountStatus_set
    __swig_getmethods__["MoneyAccountStatus"] = _pyctp.CSgitFtdcChangeAccountField_MoneyAccountStatus_get
    if _newclass:
        MoneyAccountStatus = _swig_property(_pyctp.CSgitFtdcChangeAccountField_MoneyAccountStatus_get, _pyctp.CSgitFtdcChangeAccountField_MoneyAccountStatus_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CSgitFtdcChangeAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CSgitFtdcChangeAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CSgitFtdcChangeAccountField_BankAccount_get, _pyctp.CSgitFtdcChangeAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CSgitFtdcChangeAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CSgitFtdcChangeAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CSgitFtdcChangeAccountField_BankPassWord_get, _pyctp.CSgitFtdcChangeAccountField_BankPassWord_set)
    __swig_setmethods__["NewBankAccount"] = _pyctp.CSgitFtdcChangeAccountField_NewBankAccount_set
    __swig_getmethods__["NewBankAccount"] = _pyctp.CSgitFtdcChangeAccountField_NewBankAccount_get
    if _newclass:
        NewBankAccount = _swig_property(_pyctp.CSgitFtdcChangeAccountField_NewBankAccount_get, _pyctp.CSgitFtdcChangeAccountField_NewBankAccount_set)
    __swig_setmethods__["NewBankPassWord"] = _pyctp.CSgitFtdcChangeAccountField_NewBankPassWord_set
    __swig_getmethods__["NewBankPassWord"] = _pyctp.CSgitFtdcChangeAccountField_NewBankPassWord_get
    if _newclass:
        NewBankPassWord = _swig_property(_pyctp.CSgitFtdcChangeAccountField_NewBankPassWord_get, _pyctp.CSgitFtdcChangeAccountField_NewBankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CSgitFtdcChangeAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CSgitFtdcChangeAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CSgitFtdcChangeAccountField_AccountID_get, _pyctp.CSgitFtdcChangeAccountField_AccountID_set)
    __swig_setmethods__["Password"] = _pyctp.CSgitFtdcChangeAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CSgitFtdcChangeAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CSgitFtdcChangeAccountField_Password_get, _pyctp.CSgitFtdcChangeAccountField_Password_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CSgitFtdcChangeAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CSgitFtdcChangeAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CSgitFtdcChangeAccountField_BankAccType_get, _pyctp.CSgitFtdcChangeAccountField_BankAccType_set)
    __swig_setmethods__["InstallID"] = _pyctp.CSgitFtdcChangeAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CSgitFtdcChangeAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CSgitFtdcChangeAccountField_InstallID_get, _pyctp.CSgitFtdcChangeAccountField_InstallID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcChangeAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CSgitFtdcChangeAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CSgitFtdcChangeAccountField_VerifyCertNoFlag_get, _pyctp.CSgitFtdcChangeAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["CurrencyID"] = _pyctp.CSgitFtdcChangeAccountField_CurrencyID_set
    __swig_getmethods__["CurrencyID"] = _pyctp.CSgitFtdcChangeAccountField_CurrencyID_get
    if _newclass:
        CurrencyID = _swig_property(_pyctp.CSgitFtdcChangeAccountField_CurrencyID_get, _pyctp.CSgitFtdcChangeAccountField_CurrencyID_set)
    __swig_setmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcChangeAccountField_BrokerIDByBank_set
    __swig_getmethods__["BrokerIDByBank"] = _pyctp.CSgitFtdcChangeAccountField_BrokerIDByBank_get
    if _newclass:
        BrokerIDByBank = _swig_property(_pyctp.CSgitFtdcChangeAccountField_BrokerIDByBank_get, _pyctp.CSgitFtdcChangeAccountField_BrokerIDByBank_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcChangeAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CSgitFtdcChangeAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CSgitFtdcChangeAccountField_BankPwdFlag_get, _pyctp.CSgitFtdcChangeAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcChangeAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CSgitFtdcChangeAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CSgitFtdcChangeAccountField_SecuPwdFlag_get, _pyctp.CSgitFtdcChangeAccountField_SecuPwdFlag_set)
    __swig_setmethods__["TID"] = _pyctp.CSgitFtdcChangeAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CSgitFtdcChangeAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CSgitFtdcChangeAccountField_TID_get, _pyctp.CSgitFtdcChangeAccountField_TID_set)
    __swig_setmethods__["Digest"] = _pyctp.CSgitFtdcChangeAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CSgitFtdcChangeAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CSgitFtdcChangeAccountField_Digest_get, _pyctp.CSgitFtdcChangeAccountField_Digest_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CSgitFtdcChangeAccountField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CSgitFtdcChangeAccountField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CSgitFtdcChangeAccountField_ErrorID_get, _pyctp.CSgitFtdcChangeAccountField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CSgitFtdcChangeAccountField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CSgitFtdcChangeAccountField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CSgitFtdcChangeAccountField_ErrorMsg_get, _pyctp.CSgitFtdcChangeAccountField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcChangeAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcChangeAccountField
    __del__ = lambda self: None
CSgitFtdcChangeAccountField_swigregister = _pyctp.CSgitFtdcChangeAccountField_swigregister
CSgitFtdcChangeAccountField_swigregister(CSgitFtdcChangeAccountField)

class CSgitFtdcUserRightsAssignField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcUserRightsAssignField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcUserRightsAssignField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcUserRightsAssignField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcUserRightsAssignField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcUserRightsAssignField_BrokerID_get, _pyctp.CSgitFtdcUserRightsAssignField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CSgitFtdcUserRightsAssignField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CSgitFtdcUserRightsAssignField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CSgitFtdcUserRightsAssignField_UserID_get, _pyctp.CSgitFtdcUserRightsAssignField_UserID_set)
    __swig_setmethods__["DRIdentityID"] = _pyctp.CSgitFtdcUserRightsAssignField_DRIdentityID_set
    __swig_getmethods__["DRIdentityID"] = _pyctp.CSgitFtdcUserRightsAssignField_DRIdentityID_get
    if _newclass:
        DRIdentityID = _swig_property(_pyctp.CSgitFtdcUserRightsAssignField_DRIdentityID_get, _pyctp.CSgitFtdcUserRightsAssignField_DRIdentityID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcUserRightsAssignField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcUserRightsAssignField
    __del__ = lambda self: None
CSgitFtdcUserRightsAssignField_swigregister = _pyctp.CSgitFtdcUserRightsAssignField_swigregister
CSgitFtdcUserRightsAssignField_swigregister(CSgitFtdcUserRightsAssignField)

class CSgitFtdcBrokerUserRightAssignField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcBrokerUserRightAssignField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcBrokerUserRightAssignField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerUserRightAssignField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CSgitFtdcBrokerUserRightAssignField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CSgitFtdcBrokerUserRightAssignField_BrokerID_get, _pyctp.CSgitFtdcBrokerUserRightAssignField_BrokerID_set)
    __swig_setmethods__["DRIdentityID"] = _pyctp.CSgitFtdcBrokerUserRightAssignField_DRIdentityID_set
    __swig_getmethods__["DRIdentityID"] = _pyctp.CSgitFtdcBrokerUserRightAssignField_DRIdentityID_get
    if _newclass:
        DRIdentityID = _swig_property(_pyctp.CSgitFtdcBrokerUserRightAssignField_DRIdentityID_get, _pyctp.CSgitFtdcBrokerUserRightAssignField_DRIdentityID_set)
    __swig_setmethods__["Tradeable"] = _pyctp.CSgitFtdcBrokerUserRightAssignField_Tradeable_set
    __swig_getmethods__["Tradeable"] = _pyctp.CSgitFtdcBrokerUserRightAssignField_Tradeable_get
    if _newclass:
        Tradeable = _swig_property(_pyctp.CSgitFtdcBrokerUserRightAssignField_Tradeable_get, _pyctp.CSgitFtdcBrokerUserRightAssignField_Tradeable_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcBrokerUserRightAssignField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcBrokerUserRightAssignField
    __del__ = lambda self: None
CSgitFtdcBrokerUserRightAssignField_swigregister = _pyctp.CSgitFtdcBrokerUserRightAssignField_swigregister
CSgitFtdcBrokerUserRightAssignField_swigregister(CSgitFtdcBrokerUserRightAssignField)

class CSgitFtdcDRTransferField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcDRTransferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcDRTransferField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["OrigDRIdentityID"] = _pyctp.CSgitFtdcDRTransferField_OrigDRIdentityID_set
    __swig_getmethods__["OrigDRIdentityID"] = _pyctp.CSgitFtdcDRTransferField_OrigDRIdentityID_get
    if _newclass:
        OrigDRIdentityID = _swig_property(_pyctp.CSgitFtdcDRTransferField_OrigDRIdentityID_get, _pyctp.CSgitFtdcDRTransferField_OrigDRIdentityID_set)
    __swig_setmethods__["DestDRIdentityID"] = _pyctp.CSgitFtdcDRTransferField_DestDRIdentityID_set
    __swig_getmethods__["DestDRIdentityID"] = _pyctp.CSgitFtdcDRTransferField_DestDRIdentityID_get
    if _newclass:
        DestDRIdentityID = _swig_property(_pyctp.CSgitFtdcDRTransferField_DestDRIdentityID_get, _pyctp.CSgitFtdcDRTransferField_DestDRIdentityID_set)
    __swig_setmethods__["OrigBrokerID"] = _pyctp.CSgitFtdcDRTransferField_OrigBrokerID_set
    __swig_getmethods__["OrigBrokerID"] = _pyctp.CSgitFtdcDRTransferField_OrigBrokerID_get
    if _newclass:
        OrigBrokerID = _swig_property(_pyctp.CSgitFtdcDRTransferField_OrigBrokerID_get, _pyctp.CSgitFtdcDRTransferField_OrigBrokerID_set)
    __swig_setmethods__["DestBrokerID"] = _pyctp.CSgitFtdcDRTransferField_DestBrokerID_set
    __swig_getmethods__["DestBrokerID"] = _pyctp.CSgitFtdcDRTransferField_DestBrokerID_get
    if _newclass:
        DestBrokerID = _swig_property(_pyctp.CSgitFtdcDRTransferField_DestBrokerID_get, _pyctp.CSgitFtdcDRTransferField_DestBrokerID_set)

    def __init__(self):
        this = _pyctp.new_CSgitFtdcDRTransferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcDRTransferField
    __del__ = lambda self: None
CSgitFtdcDRTransferField_swigregister = _pyctp.CSgitFtdcDRTransferField_swigregister
CSgitFtdcDRTransferField_swigregister(CSgitFtdcDRTransferField)

class CSgitMBLQuotReq(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitMBLQuotReq, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitMBLQuotReq, name)
    __repr__ = _swig_repr
    __swig_setmethods__["StartContractID"] = _pyctp.CSgitMBLQuotReq_StartContractID_set
    __swig_getmethods__["StartContractID"] = _pyctp.CSgitMBLQuotReq_StartContractID_get
    if _newclass:
        StartContractID = _swig_property(_pyctp.CSgitMBLQuotReq_StartContractID_get, _pyctp.CSgitMBLQuotReq_StartContractID_set)
    __swig_setmethods__["EndContractID"] = _pyctp.CSgitMBLQuotReq_EndContractID_set
    __swig_getmethods__["EndContractID"] = _pyctp.CSgitMBLQuotReq_EndContractID_get
    if _newclass:
        EndContractID = _swig_property(_pyctp.CSgitMBLQuotReq_EndContractID_get, _pyctp.CSgitMBLQuotReq_EndContractID_set)
    __swig_setmethods__["BsFlag"] = _pyctp.CSgitMBLQuotReq_BsFlag_set
    __swig_getmethods__["BsFlag"] = _pyctp.CSgitMBLQuotReq_BsFlag_get
    if _newclass:
        BsFlag = _swig_property(_pyctp.CSgitMBLQuotReq_BsFlag_get, _pyctp.CSgitMBLQuotReq_BsFlag_set)

    def __init__(self):
        this = _pyctp.new_CSgitMBLQuotReq()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitMBLQuotReq
    __del__ = lambda self: None
CSgitMBLQuotReq_swigregister = _pyctp.CSgitMBLQuotReq_swigregister
CSgitMBLQuotReq_swigregister(CSgitMBLQuotReq)

class CSgitMBLQuotData(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitMBLQuotData, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitMBLQuotData, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ContractID"] = _pyctp.CSgitMBLQuotData_ContractID_set
    __swig_getmethods__["ContractID"] = _pyctp.CSgitMBLQuotData_ContractID_get
    if _newclass:
        ContractID = _swig_property(_pyctp.CSgitMBLQuotData_ContractID_get, _pyctp.CSgitMBLQuotData_ContractID_set)
    __swig_setmethods__["BsFlag"] = _pyctp.CSgitMBLQuotData_BsFlag_set
    __swig_getmethods__["BsFlag"] = _pyctp.CSgitMBLQuotData_BsFlag_get
    if _newclass:
        BsFlag = _swig_property(_pyctp.CSgitMBLQuotData_BsFlag_get, _pyctp.CSgitMBLQuotData_BsFlag_set)
    __swig_setmethods__["Price"] = _pyctp.CSgitMBLQuotData_Price_set
    __swig_getmethods__["Price"] = _pyctp.CSgitMBLQuotData_Price_get
    if _newclass:
        Price = _swig_property(_pyctp.CSgitMBLQuotData_Price_get, _pyctp.CSgitMBLQuotData_Price_set)
    __swig_setmethods__["Qty"] = _pyctp.CSgitMBLQuotData_Qty_set
    __swig_getmethods__["Qty"] = _pyctp.CSgitMBLQuotData_Qty_get
    if _newclass:
        Qty = _swig_property(_pyctp.CSgitMBLQuotData_Qty_get, _pyctp.CSgitMBLQuotData_Qty_set)

    def __init__(self):
        this = _pyctp.new_CSgitMBLQuotData()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitMBLQuotData
    __del__ = lambda self: None
CSgitMBLQuotData_swigregister = _pyctp.CSgitMBLQuotData_swigregister
CSgitMBLQuotData_swigregister(CSgitMBLQuotData)

class CSgitSubQuotField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitSubQuotField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitSubQuotField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ContractID"] = _pyctp.CSgitSubQuotField_ContractID_set
    __swig_getmethods__["ContractID"] = _pyctp.CSgitSubQuotField_ContractID_get
    if _newclass:
        ContractID = _swig_property(_pyctp.CSgitSubQuotField_ContractID_get, _pyctp.CSgitSubQuotField_ContractID_set)

    def __init__(self):
        this = _pyctp.new_CSgitSubQuotField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitSubQuotField
    __del__ = lambda self: None
CSgitSubQuotField_swigregister = _pyctp.CSgitSubQuotField_swigregister
CSgitSubQuotField_swigregister(CSgitSubQuotField)

class CSgitFtdcMdSpi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcMdSpi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcMdSpi, name)
    __repr__ = _swig_repr

    def OnFrontConnected(self):
        return _pyctp.CSgitFtdcMdSpi_OnFrontConnected(self)

    def OnFrontDisconnected(self, pErrMsg):
        return _pyctp.CSgitFtdcMdSpi_OnFrontDisconnected(self, pErrMsg)

    def OnRspUserLogin(self, pRspUserLogin, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CSgitFtdcMdSpi_OnRspUserLogin(self, pRspUserLogin, pRspInfo, nRequestID, bIsLast)

    def OnRspUserLogout(self, pUserLogout, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CSgitFtdcMdSpi_OnRspUserLogout(self, pUserLogout, pRspInfo, nRequestID, bIsLast)

    def OnRtnDepthMarketData(self, pDepthMarketData):
        return _pyctp.CSgitFtdcMdSpi_OnRtnDepthMarketData(self, pDepthMarketData)

    def __init__(self):
        if self.__class__ == CSgitFtdcMdSpi:
            _self = None
        else:
            _self = self
        this = _pyctp.new_CSgitFtdcMdSpi(_self, )
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcMdSpi
    __del__ = lambda self: None
    def __disown__(self):
        self.this.disown()
        _pyctp.disown_CSgitFtdcMdSpi(self)
        return weakref_proxy(self)
CSgitFtdcMdSpi_swigregister = _pyctp.CSgitFtdcMdSpi_swigregister
CSgitFtdcMdSpi_swigregister(CSgitFtdcMdSpi)

class CSgitFtdcMdApi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcMdApi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcMdApi, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    if _newclass:
        CreateFtdcMdApi = staticmethod(_pyctp.CSgitFtdcMdApi_CreateFtdcMdApi)
    else:
        CreateFtdcMdApi = _pyctp.CSgitFtdcMdApi_CreateFtdcMdApi

    def Release(self):
        return _pyctp.CSgitFtdcMdApi_Release(self)

    def Init(self, isLogged):
        return _pyctp.CSgitFtdcMdApi_Init(self, isLogged)

    def Join(self):
        return _pyctp.CSgitFtdcMdApi_Join(self)

    def GetTradingDay(self):
        return _pyctp.CSgitFtdcMdApi_GetTradingDay(self)

    def RegisterFront(self, pszFrontAddress):
        return _pyctp.CSgitFtdcMdApi_RegisterFront(self, pszFrontAddress)

    def SetMultiCastAddr(self, szMlCastAddr):
        return _pyctp.CSgitFtdcMdApi_SetMultiCastAddr(self, szMlCastAddr)

    def RegisterSpi(self, pSpi):
        return _pyctp.CSgitFtdcMdApi_RegisterSpi(self, pSpi)

    def SubscribeMarketTopic(self, nResumeType):
        return _pyctp.CSgitFtdcMdApi_SubscribeMarketTopic(self, nResumeType)

    def SubQuot(self, pSgitSubQuotField):
        return _pyctp.CSgitFtdcMdApi_SubQuot(self, pSgitSubQuotField)

    def Ready(self):
        return _pyctp.CSgitFtdcMdApi_Ready(self)

    def ReqUserLogin(self, pReqUserLoginField, nRequestID):
        return _pyctp.CSgitFtdcMdApi_ReqUserLogin(self, pReqUserLoginField, nRequestID)

    def ReqUserLogout(self, pUserLogout, nRequestID):
        return _pyctp.CSgitFtdcMdApi_ReqUserLogout(self, pUserLogout, nRequestID)
CSgitFtdcMdApi_swigregister = _pyctp.CSgitFtdcMdApi_swigregister
CSgitFtdcMdApi_swigregister(CSgitFtdcMdApi)

def CSgitFtdcMdApi_CreateFtdcMdApi(*args):
    return _pyctp.CSgitFtdcMdApi_CreateFtdcMdApi(*args)
CSgitFtdcMdApi_CreateFtdcMdApi = _pyctp.CSgitFtdcMdApi_CreateFtdcMdApi

class CSgitFtdcTraderSpi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTraderSpi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTraderSpi, name)
    __repr__ = _swig_repr

    def OnFrontConnected(self):
        return _pyctp.CSgitFtdcTraderSpi_OnFrontConnected(self)

    def OnFrontDisconnected(self, pErrMsg):
        return _pyctp.CSgitFtdcTraderSpi_OnFrontDisconnected(self, pErrMsg)

    def OnRspUserLogin(self, pRspUserLogin, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CSgitFtdcTraderSpi_OnRspUserLogin(self, pRspUserLogin, pRspInfo, nRequestID, bIsLast)

    def OnRspUserLogout(self, pUserLogout, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CSgitFtdcTraderSpi_OnRspUserLogout(self, pUserLogout, pRspInfo, nRequestID, bIsLast)

    def OnRspUserPasswordUpdate(self, pUserPasswordUpdate, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CSgitFtdcTraderSpi_OnRspUserPasswordUpdate(self, pUserPasswordUpdate, pRspInfo, nRequestID, bIsLast)

    def OnRspOrderInsert(self, pInputOrder, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CSgitFtdcTraderSpi_OnRspOrderInsert(self, pInputOrder, pRspInfo, nRequestID, bIsLast)

    def OnRspOrderAction(self, pInputOrderAction, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CSgitFtdcTraderSpi_OnRspOrderAction(self, pInputOrderAction, pRspInfo, nRequestID, bIsLast)

    def OnRspQryOrder(self, pOrder, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CSgitFtdcTraderSpi_OnRspQryOrder(self, pOrder, pRspInfo, nRequestID, bIsLast)

    def OnRspQryTradingAccount(self, pTradingAccount, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CSgitFtdcTraderSpi_OnRspQryTradingAccount(self, pTradingAccount, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInvestor(self, pInvestor, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CSgitFtdcTraderSpi_OnRspQryInvestor(self, pInvestor, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInstrument(self, pInstrument, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CSgitFtdcTraderSpi_OnRspQryInstrument(self, pInstrument, pRspInfo, nRequestID, bIsLast)

    def OnRtnOrder(self, pOrder, pRspInfo):
        return _pyctp.CSgitFtdcTraderSpi_OnRtnOrder(self, pOrder, pRspInfo)

    def OnRtnTrade(self, pTrade):
        return _pyctp.CSgitFtdcTraderSpi_OnRtnTrade(self, pTrade)

    def OnRtnInstrumentStatus(self, pInstrumentStatus):
        return _pyctp.CSgitFtdcTraderSpi_OnRtnInstrumentStatus(self, pInstrumentStatus)

    def OnRspQryInvestorPositionDetail(self, pInvestorPositionDetail, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CSgitFtdcTraderSpi_OnRspQryInvestorPositionDetail(self, pInvestorPositionDetail, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInvestorPosition(self, pInvestorPosition, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CSgitFtdcTraderSpi_OnRspQryInvestorPosition(self, pInvestorPosition, pRspInfo, nRequestID, bIsLast)

    def onRspMBLQuot(self, pMBLQuotData, pRspMsg, nRequestID, bIsLast):
        return _pyctp.CSgitFtdcTraderSpi_onRspMBLQuot(self, pMBLQuotData, pRspMsg, nRequestID, bIsLast)

    def __init__(self):
        if self.__class__ == CSgitFtdcTraderSpi:
            _self = None
        else:
            _self = self
        this = _pyctp.new_CSgitFtdcTraderSpi(_self, )
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CSgitFtdcTraderSpi
    __del__ = lambda self: None
    def __disown__(self):
        self.this.disown()
        _pyctp.disown_CSgitFtdcTraderSpi(self)
        return weakref_proxy(self)
CSgitFtdcTraderSpi_swigregister = _pyctp.CSgitFtdcTraderSpi_swigregister
CSgitFtdcTraderSpi_swigregister(CSgitFtdcTraderSpi)

class CSgitFtdcTraderApi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CSgitFtdcTraderApi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CSgitFtdcTraderApi, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    if _newclass:
        CreateFtdcTraderApi = staticmethod(_pyctp.CSgitFtdcTraderApi_CreateFtdcTraderApi)
    else:
        CreateFtdcTraderApi = _pyctp.CSgitFtdcTraderApi_CreateFtdcTraderApi

    def Release(self):
        return _pyctp.CSgitFtdcTraderApi_Release(self)

    def Init(self, isLogged, bFastMode=False):
        return _pyctp.CSgitFtdcTraderApi_Init(self, isLogged, bFastMode)

    def Join(self):
        return _pyctp.CSgitFtdcTraderApi_Join(self)

    def GetTradingDay(self):
        return _pyctp.CSgitFtdcTraderApi_GetTradingDay(self)

    def RegisterFront(self, pszFrontAddress):
        return _pyctp.CSgitFtdcTraderApi_RegisterFront(self, pszFrontAddress)

    def RegisterSpi(self, pSpi):
        return _pyctp.CSgitFtdcTraderApi_RegisterSpi(self, pSpi)

    def SubscribePrivateTopic(self, nResumeType):
        return _pyctp.CSgitFtdcTraderApi_SubscribePrivateTopic(self, nResumeType)

    def SubscribePublicTopic(self, nResumeType):
        return _pyctp.CSgitFtdcTraderApi_SubscribePublicTopic(self, nResumeType)

    def Ready(self):
        return _pyctp.CSgitFtdcTraderApi_Ready(self)

    def ReqUserLogin(self, pReqUserLoginField, nRequestID):
        return _pyctp.CSgitFtdcTraderApi_ReqUserLogin(self, pReqUserLoginField, nRequestID)

    def ReqUserLogout(self, pUserLogout, nRequestID):
        return _pyctp.CSgitFtdcTraderApi_ReqUserLogout(self, pUserLogout, nRequestID)

    def ReqUserPasswordUpdate(self, pUserPasswordUpdate, nRequestID):
        return _pyctp.CSgitFtdcTraderApi_ReqUserPasswordUpdate(self, pUserPasswordUpdate, nRequestID)

    def ReqOrderInsert(self, pInputOrder, nRequestID):
        return _pyctp.CSgitFtdcTraderApi_ReqOrderInsert(self, pInputOrder, nRequestID)

    def ReqOrderAction(self, pInputOrderAction, nRequestID):
        return _pyctp.CSgitFtdcTraderApi_ReqOrderAction(self, pInputOrderAction, nRequestID)

    def ReqQryOrder(self, pQryOrder, nRequestID):
        return _pyctp.CSgitFtdcTraderApi_ReqQryOrder(self, pQryOrder, nRequestID)

    def ReqQryTradingAccount(self, pQryTradingAccount, nRequestID):
        return _pyctp.CSgitFtdcTraderApi_ReqQryTradingAccount(self, pQryTradingAccount, nRequestID)

    def ReqQryInvestor(self, pQryInvestor, nRequestID):
        return _pyctp.CSgitFtdcTraderApi_ReqQryInvestor(self, pQryInvestor, nRequestID)

    def ReqQryInstrument(self, pQryInstrument, nRequestID):
        return _pyctp.CSgitFtdcTraderApi_ReqQryInstrument(self, pQryInstrument, nRequestID)

    def ReqQryInvestorPositionDetail(self, pQryInvestorPositionDetail, nRequestID):
        return _pyctp.CSgitFtdcTraderApi_ReqQryInvestorPositionDetail(self, pQryInvestorPositionDetail, nRequestID)

    def ReqQryInvestorPosition(self, pQryInvestorPosition, nRequestID):
        return _pyctp.CSgitFtdcTraderApi_ReqQryInvestorPosition(self, pQryInvestorPosition, nRequestID)

    def ReqMBLQuot(self, iRequestID, pMBLQuotReq):
        return _pyctp.CSgitFtdcTraderApi_ReqMBLQuot(self, iRequestID, pMBLQuotReq)
CSgitFtdcTraderApi_swigregister = _pyctp.CSgitFtdcTraderApi_swigregister
CSgitFtdcTraderApi_swigregister(CSgitFtdcTraderApi)

def CSgitFtdcTraderApi_CreateFtdcTraderApi(*args):
    return _pyctp.CSgitFtdcTraderApi_CreateFtdcTraderApi(*args)
CSgitFtdcTraderApi_CreateFtdcTraderApi = _pyctp.CSgitFtdcTraderApi_CreateFtdcTraderApi

# This file is compatible with both classic and new-style classes.


